[{"content":"\r\n\r\n## 我的 Android 应用清单\r\n\r\n+ 2023 年 2 月更新：\r\n    - 初版。\r\n\r\n下表是我个人目前在使用和曾经使用过的 **不常见** 的Android 应用，大部分会提供链接，也可能会提供同类软件的替代品。表格内链接为官方链接，内容基于我使用时的版本，描述可能与最新版本有所差异。\r\n\r\n***\r\n\r\n| 应用                                                                                                   | 链接                                                                                           |\r\n|--------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------|\r\n| APlayer\u003cbr\u003e[GitHub][url-aplayer-01-github], [Google Play][url-aplayer-02-play]                         | 开源，本地音乐播放器                                                                           |\r\n| FeedMe\u003cbr\u003e[GitHub][url-feedme-01-github], [Google Play][url-feedme-02-play]                            | 免费，Android 我见过最好用的 RSS 阅读器\u003cbr\u003e支持多个服务，如 Inoreader。                        |\r\n| K-9 Mail\u003cbr\u003e[GitHub][url-feedme-01-github], [Google Play][url-feedme-02-play]                          | 开源，邮件客户端，配置项很多\u003cbr\u003e使用原因是公司企业邮箱证书过期，大部分邮箱客户端都无法正常登录 |\r\n| Keepass2Android\u003cbr\u003e[GitHub][url-keepass2android-01-github], [Google Play][url-keepass2android-02-play] | 开源，Keepass 的 Android 第三方版本\u003cbr\u003e分为可访问云存储的版本和纯离线版                        |\r\n| LibreTorrent\u003cbr\u003e[Google Play][url-libretorrent-01-play]                                                | 开源，BT 下载工具。                                                                            |\r\n| [MiXplorer][url-mixplorer-01]                                                                          | 开源，文件管理器，支持插件\u003cbr\u003e解压和压缩需要 [MiX Archive 插件][url-mixplorer-02-archive]      |\r\n| Syncthing\u003cbr\u003e[Google Play][url-syncthing-01-play]                                                      | 开源，多设备文件同步工具，我用来和 PC 和 Pad 间同步文件                                        |\r\n| VLC for Andorid\u003cbr\u003e[Google Play][url-vlc-for-android-01-play]                                          | 开源，媒体播放器                                                                               |\r\n\r\n[url-aplayer-01-github]:https://github.com/rRemix/APlayer/releases\r\n[url-aplayer-02-play]:https://play.google.com/store/apps/details?id=remix.myplayer\r\n[url-feedme-01-github]:https://github.com/seazon/FeedMe/releases\r\n[url-feedme-02-play]:https://play.google.com/store/apps/details?id=com.seazon.feedme\r\n[url-k-9-mail-01-github]:https://github.com/thundernest/k-9/releases\r\n[url-k-9-mail-02-play]:https://play.google.com/store/apps/details?id=com.fsck.k9\r\n[url-keepass2android-01-github]:https://github.com/PhilippC/keepass2android/releases\r\n[url-keepass2android-02-play]:https://play.google.com/store/apps/details?id=keepass2android.keepass2android\r\n[url-libretorrent-01-play]:https://play.google.com/store/apps/details?id=org.proninyaroslav.libretorrent\r\n[url-mixplorer-01]:https://mixplorer.com/\r\n[url-mixplorer-02-archive]:https://play.google.com/store/apps/details?id=com.mixplorer.addon.archive\r\n[url-syncthing-01-play]:https://play.google.com/store/apps/details?id=com.nutomic.syncthingandroid\r\n[url-vlc-for-android-01-play]:https://play.google.com/store/apps/details?id=org.videolan.vlc\r\n","cover":"","link":"myandroidlist.html","preview":"\u003cp\u003e个人推荐 Android 应用列表，作记录用，更新不定时。\u003c/p\u003e\n","title":"我的 Android 应用清单"},{"content":"\r\n\r\n## 我的软件清单\r\n\r\n+ 2025 年 10 月更新：\r\n    - 新增 [ImageGlass][url-imageglass-01]，图片查看器，支持查看手机拍摄的 Live Photo。\r\n\r\n+ 2024 年更新：\r\n    - 新增 [Text-Grab][url-textgrab-01]，OCR 工具，可离线使用。\r\n    - 新增 [Umi-OCR][url-umiocr-01]，OCR 工具，可离线使用。\r\n    - 拆分一个 **OCR 相关** 栏目。\r\n    - 新增 [音乐标签 PC 版][url-musictag-01]，音频文件 tag 获取和编辑工具。\r\n    - 新增 [NTPWEdit][url-ntpwedit-01]，一个 Windows 用户密码重置工具。\r\n    - 新增 [微 PE 工具箱][url-wepe-01]，我居然一直没写微 PE。\r\n    - 新增 [Ventoy][url-ventoy-01]，一个通用的U盘启动工具。\r\n    - 新增 [VCredist][url-vcredist-01]，一个持续更新的 VC 运行库组合包。\r\n    - 移除 IT天空一键运行库。\r\n    - 移除 yhosts。\r\n    - 修改部分文件描述。\r\n\r\n下表是我个人目前在使用和曾经使用过的软件，大部分会提供链接，也可能会提供同类软件的替代品。软件名所进入的链接，全都是官方链接，第三方的链接会另外放出，由于我不会一直尝试曾经使用过的软件的新版本，描述可能与最新版本有所差异。\r\n\r\n+ **文件管理**\r\n\r\n| 名称                                 | 功能                                                                                                                                                                   |\r\n|--------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| Total Commander                      | 优秀的文件管理器，不过很多人无法习惯键盘操作                                                                                                                           |\r\n| [Double Commander][url-doublecmd-01] | 类 TC 的文件管理器，大体的功能都有，但是小细节上还有待提高， \u003cbr\u003e 支持部分 TC 的插件，汉化较完整 \u003cbr\u003e 支持中文首字母搜索但是不完善（多音字只取一个读音，且不支持过滤） |\r\n| [Q-Dir][url-qdir-01]                 | 最多可以同时显示四个文件夹的小工具， \u003cbr\u003e 习惯用资源管理器的用户可以用。 \u003cbr\u003e **对高分屏支持不好。**                                                                   |\r\n| [FastCopy][url-fastcopy-01]          | 拷贝工具，速度优势不大，**[差分复制][url-fastcopy-02-help]**很好用。 \u003cbr\u003e 新版商用需要购买授权。                                                                       |\r\n| [WinMerge][url-winmerge-01]          | 开源，文件比较工具，\u003cbr\u003e支持比较文本，图片，Word 文档，Excel 工作簿，PowerPoint 演示文稿。\u003cbr\u003e[Double Comander 的调用方法](winmerge.html)                              |\r\n\r\n***\r\n\r\n+ **文件搜索**\r\n\r\n| 名称                              | 功能                                                                                                                                                   |\r\n|-----------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| [Everything][url-everything-01]   | NTFS 硬盘文件搜索利器，支持正则表达式。 \u003cbr\u003e 可以当 Http 服务器使用，在手机上直接访问电脑上的文件。                                                    |\r\n| [Listary][url-listary-01]         | 文件搜索，定位利器，也可以当快速启动工具使用。                                                                                                         |\r\n| [DocFetcher][url-docfetcher-01]   | 开源全文检索工具，支持索引（需要手工操作），有便携版，依赖 [Java][url-java-01]。                                                                       |\r\n| [AnyTXT Searcher][url-anytxt-01]  | 全文检索工具，支持索引，搜索速度较快。 \u003cbr\u003e 无便携版，新版偶尔会要求获取验证码，介意可使用旧版。                                                       |\r\n| [FileLocator][url-filelocator-01] | 全文检索工具，分为免费的 Lite 版和收费的 Pro 版。 \u003cbr\u003e Lite 版不支持索引，搜索速度慢。 \u003cbr\u003e 有便携版（Pro 版的便携版在初次打开时可选择只使用免费功能） |\r\n| [AstroGrep][url-astrogrep-01]     | 开源，全文检索工具，不支持索引，搜索速度慢。 \u003cbr\u003e 有便携版。                                                                                           |\r\n| [dnGrep][url-dngrep-01]           | 开源，全文检索工具，不支持索引，搜索速度慢。 \u003cbr\u003e 实测不支持 doc 文件的搜索，docx则没问题，有便携版。                                                  |\r\n\r\n***\r\n\r\n+ **剪贴板增强**\r\n\r\n| 名称                     | 功能                                                                         |\r\n|--------------------------|------------------------------------------------------------------------------|\r\n| [Ditto][url-ditto-01]    | 开源，注意：Ditto 复制文件后无法在桌面这类特殊位置中粘贴                     |\r\n| [CopyQ][url-copyq-01-gh] | 开源，有中文，支持自定义命令，也支持简单截图功能，\u003cbr\u003e支持 Vi 模式移动，便携 |\r\n| [CLCL][url-clcl-01]      | 开源，便携，免费的剪贴板工具，官方无中文。                                   |\r\n\r\n***\r\n\r\n+ **压缩解压**\r\n\r\n| 名称                            | 功能                                                                                                                                                    |\r\n|---------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| [7-Zip][url-7-zip-01]           | 开源，无广告，也可以当双面板文件管理器使用，但是不支持查看 rar（非 rar5）格式的注释                                                                     |\r\n| [PeaZip][url-peazip-01]         | 开源，无广告，界面比 7-Zip 漂亮，有类似 BandiZip 的智能解压功能。 \u003cbr\u003e 但是反应速度略慢，在**命令行**调用时，无法自行输入密码导致无法处理加密的压缩包。 |\r\n| [SmartZip][url-smartzip-01]     | 基于 7-Zip 的解压小工具，支持密码本功能，可通过命令行调用。                                                                                             |\r\n\r\n***\r\n\r\n+ **截图录屏**\r\n\r\n| 名称                              | 功能                                                                                                                |\r\n|-----------------------------------|---------------------------------------------------------------------------------------------------------------------|\r\n| FastStone Capture                 | **共享软件**，官方只有英文版，同时支持截图与录屏。                                                                  |\r\n| [ShareX][url-sharex-01-gh]        | 开源，截图软件，录屏和录制 GIF 功能通过 FFmpeg 实现（第一次使用会提示下载）， \u003cbr\u003e 可以对截图进行 OCR，识别效果不错 |\r\n| [Pickpic][url-pickpic-01]         | 从功能上来说也很不错，但它的滚动截图不支持自定义选择选区， \u003cbr\u003e 也无法设置自动保存文件并添加到剪贴版，只能二选一。  |\r\n| [Gifcam][url-gifcam-01]           | GIF 截图工具，单文件，无中文。                                                                                      |\r\n| [ScreenToGif][url-screentogif-01] | GIF 截图工具，开源，有中文。                                                                                        |\r\n\r\n***\r\n\r\n+ **图片相关**\r\n\r\n| 名称                                                        | 功能                                                                                                     |\r\n| ----------------------------------------------------------- | ------------------------------------------------------------------------------------------------         |\r\n| [IrfanView][url-irfanview-01]                               | 图片查看软件，但不支持多标签，支持命令行转换， \u003cbr\u003e 有很多插件。                                         |\r\n| [XnView][url-xnview-01]                                     | 图片查看软件，支持多标签，支持命令行转换， \u003cbr\u003e 有插件，对 Win 10 的支持比较好。                         |\r\n| [ImageGlass][url-imageglass-01]                             | 开源图片查看软件，支持查看手机拍摄的 Live Photo。\u003cbr\u003e 会调用 WMP 播放，个人仅测试小米手机拍摄的 Live Photo。 |\r\n| [Paint.Net][url-paintnet-01]                                | 免费图片编辑工具，便携化操作可参考 [这里][url-paintnet-02-pf] 的说明。 \u003cbr\u003e 依赖 net.framework           |\r\n| [GIMP][url-gimp-01]； \u003cbr\u003e [PortableApps][url-gimp-02-pa]   | 开源图片编辑工具，功能完整。                                                                             |\r\n| [PhotoDemon][url-photodemon-01]                             | 开源图片编辑工具，功能简单，\u003cbr\u003e不需要 .net。                                                            |\r\n| [LazPaint][url-lazpaint-01]                                 | 开源图片编辑工具，功能简单，\u003cbr\u003e不需要 .net，但是同时编辑多个文件不太方便。                              |\r\n\r\n***\r\n\r\n+ **OCR 相关**\r\n\r\n| 名称                                   | 功能                                                                                             |\r\n|----------------------------------------|--------------------------------------------------------------------------------------------------|\r\n| [Text Grab][url-textgrab-01]           | 开源 OCR 工具，\u003cbr\u003e需要 .net，但有自带 .net 的便携版本，界面无中文。                             |\r\n| [Umi-OCR][url-umiocr-01]               | 开源 OCR 工具，有便携版，有中文。                                                                        |\r\n| [gImageReader][url-gimagereader-01-gh] | 开源 OCR 工具，支持中文，英文等多种语言， \u003cbr\u003e 可见 [gImageReader 简要介绍](gimagereader.html)。 |\r\n\r\n***\r\n\r\n+ **媒体相关**\r\n\r\n| 名称                                                            | 功能                                                                                                           |\r\n|-----------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------|\r\n| [Foobar2000][url-foobar2000-01]                                 | 本地音频播放工具，有第三方的汉化版                                                                             |\r\n| [VLC media player][url-vlc-01]                                  | 本地视频播放软件，免安装版在目录下建一个`portable`文件夹可便携化配置。                                         |\r\n| [MPC-HC clsid2 版][url-mpc-hc-01-gh]                            | 本地视频播放软件                                                                                               |\r\n| [MPC-BE][url-mpc-be-01-sf]                                      | 本地视频播放软件                                                                                               |\r\n| [K-Lite Codec Pack][url-k-lite-codec-01]                        | 解码器包，AviSynth 有些导入命令需要它支持， \u003cbr\u003e WPS 用户安装了 Mage 版之后可以在 WPS 演示中直接播放视频。     |\r\n| [MP3TAG][url-mp3tag-01]； \u003cbr\u003e [PortableApps][url-mp3tag-02-pa] | 编辑音频文件的 tag，如按文件名自动填入 tag 或根据 tag 重命名文件，可批量处理 \u003cbr\u003e 这个软件还有一个 TC 的插件。 |\r\n| [音乐标签 PC 版][url-musictag-01]                               | 编辑音频文件的 tag，支持自动从网络获取 tag 信息。                                                              |\r\n\r\n***\r\n\r\n+ **音视频编辑**\r\n\r\n| 名称                                                                  | 功能                                                                                                                                                              |\r\n|-----------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| [AviSynth+][url-avisynth-plus-01]                                     | 视频编辑工具，通过写脚本实现编辑，再用 [FFmpeg][url-ffmpeg-01] 生成结果文件， \u003cbr\u003e 功能比较少，但一般剪辑够用。                                                   |\r\n| [Vidiot][url-vidiot-01]                                               | 一款简单的非线性视频编辑工具，无中文。                                                                                                                            |\r\n| [Audacity][url-audacity-01]； \u003cbr\u003e [PortableApps][url-audacity-02-pa] | 音频编辑工具，中文化不完整； \u003cbr\u003e 导入 ac3 等文件需要 [FFmpeg][url-audacity-03-ffmpeg] 插件支持。                                                                 |\r\n| [Wavosaur][url-wavosaur-01]                                           | 音频编辑工具，无中文； \u003cbr\u003e 支持编辑的格式较少，比如不支持 m4a，可以使用 FFmpeg 等工具转换后处理， \u003cbr\u003e 导出 mp3 需要 [lame_enc.dll][url-wavosaur-02-lame] 插件。 |\r\n| [Subtitle Edit][url-subtitleedit-01]                                  | 字幕制作编辑工具，内置视频预览，翻译助理； \u003cbr\u003e 可调用 Google 在线翻译，可批量调整时间。                                                                          |\r\n\r\n***\r\n\r\n+ **PDF相关**\r\n\r\n| 名称                                                               | 功能                                                                                                                                                       |\r\n|--------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| [Sumatra PDF][url-sumatrapdf-01]                                   | PDF 阅读器，功能单一，不支持加标注等功能； \u003cbr\u003e 支持 PDF；ePub；MOBI；XPS；DjVu；CHM；CBZ 和 CBR \u003cbr\u003e 可以当漫画查看器用                                   |\r\n| [PDFCreator][url-pdfcreator-01]                                    | PDF 虚拟打印机，安装的时候要小心捆绑                                                                                                                       |\r\n| [PDFTK][url-pdftk-01]； \u003cbr\u003e [PDFTK Builder][url-pdftk-builder-01] | PDF 合并，分割小工具，PDFTK 的 GUI 免费版有功能限制，但是有命令行 \u003cbr\u003e PDFTK Builder 是该软件命令行的第三方 GUI，推荐使用                                  |\r\n| PDF 相关在线服务                                                   | [SmallPDF][url-PDF-smallpdf-01]（多种处理）；[ExtractPDF][url-PDF-extractpdf-01]（提取 PDF 的图片，文本或字体）                                            |\r\n\r\n***\r\n\r\n+ **命令行相关**\r\n\r\n| 名称                                                                  | 功能                                                                                                      |\r\n|-----------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------|\r\n| [Aria2][url-aria2-01]                                                 | 通用下载工具                                                                                              |\r\n| [YT-DLP][url-yt-dlp-01]                                               | 在线视频下载工具                                                                                          |\r\n| [FFmpeg][url-ffmpeg-01]； \u003cbr\u003e [第三方 x86 编译版][url-ffmpeg-02-x86] | 视频，音频格式转换工具                                                                                    |\r\n| [ImageMagick][url-imagemagick-01]                                     | 图片转换工具，自带了 FFmpeg。                                                                             |\r\n| [Pandoc][url-pandoc-01]                                               | 文档格式转换工具 \u003cbr\u003e 安装包可用 7-Zip 解压，将两个名字最后是 EXE 的文件的后缀改成 EXE 即可调用，无需安装 |\r\n| [Scrcpy][url-scrcpy-01-gh]                                            | 通过 ADB 实现 Android 设备投屏到 Windows。                                                                |\r\n| [WinPython][url-winpython-01]                                         | 便携的 Python 环境                                                                                        |\r\n| iconv                                                                 | 文本编码转换工具                                                                                          |\r\n| OpenCC                                                                | 中文繁简转换工具                                                                                          |\r\n| sed                                                                   | 文本编辑工具                                                                                              |\r\n| awk                                                                   | 文本处理工具，我曾经用来提取 XX-Net 中速度较快的 ip                                                       |\r\n\r\n\u003e iconv、sed、awk 在 [Git for Windows][url-git-for-windows-01] 中有集成，但是，Git for Windows 里面的 iconv 不指定源格式的话就没有办法转换。\r\n\r\n***\r\n\r\n+ **下载工具**\r\n\r\n| 名称                                                                                                                 | 功能                                                                                                                                                   |\r\n|----------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| Internet Download Manager                                                                                            | 共享软件，相当不错的 HTTP/HTTPS/FTP 下载工具，支持 Firefox57+                                                                                          |\r\n| [uGet Download Manager][url-uget-01]                                                                                 | 开源跨平台的下载软件，支持 HTTP/FTP/BT，支持 Curl 和 Aria2，可支持 Firefox57+ 的调用（需要配置）。                                                     |\r\n| [qBittorrent][url-qbittorrent-01]，\u003cbr\u003e[PortableApps][url-qbittorrent-02-pa]，\u003cbr\u003e[第三方增强版][url-qbittorrent-03] | BT下载工具，有 PortableApps 的便携版，\u003cbr\u003e官方版可以通过在安装文件夹下新建 profile 文件夹实现便携化。\u003cbr\u003e个人更建议使用增强版，可以拦截 迅雷等客户端。 |\r\n| [WebTorrent][url-webtorrent-01-gh]                                                                                   | BT 下载和边下边播工具，可以调用 VLC 播放器。                                                                                                           |\r\n\r\n***\r\n\r\n+ **清理、卸载工具**\r\n\r\n| 名称                                                     | 功能                                                                                                                                   |\r\n|----------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------|\r\n| [BleachBit][url-bleachbit-01]                            | 一款支持 winapp2.ini 的开源清理工具。\u003cbr\u003e 有中文（少部分未翻译），有便携版。                                                           |\r\n| [Bulk Crap Uninstaller][url-bulk-crap-uninstaller-01-gh] | 开源软件卸载工具，有便携版。\u003cbr\u003e对于部分软件可以自动卸载（无需点击相关按钮）。                                                         |\r\n| [Geek Uninstaller][url-geek-uninstaller-01]              | 软件卸载工具，单文件。                                                                                                                 |\r\n| [HiBit Uninstaller][url-hibi-tuninstaller-01]            | 软件卸载工具，单文件，但是会把配置文件写到 C盘。\u003cbr\u003e 功能比 [Geek Uninstaller][url-geek-uninstaller-01] 多，但是对高分屏支持不是太好。 |\r\n\r\n***\r\n\r\n+ **其它工具**\r\n\r\n| 名称                                                                         | 功能                                                                                                                     |\r\n|------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------|\r\n| [AutoHotKey][url-autohotkey-01]；\u003cbr\u003e[在线中文文档][url-autohotkey-02-help]  | 热键，脚本编辑、工具，强烈推荐，特别是 [RunAny][url-autohotkey-03-runany]。                                              |\r\n| [chrlauncher][url-chrlauncher-01-gh]                                         | 一个用来便携化 Chromium 的小工具，也支持将便携化的 Chromium 变为系统默认浏览器。                                         |\r\n| [KeePass][url-keepass-01]                                                    | 密码管理工具，有第三方的安卓版 KeePassDroid 和 Keepass2Android 等。                                                      |\r\n| [NetsetMan][url-netsetman-01]                                                | 多套详细的网络设置快速切换，有命令行参数                                                                                 |\r\n| [LibreOffice][url-libreoffice-01]；\u003cbr\u003e[ProtableApps][url-libreoffice-02-pa] | 开源办公套件，有便携版。                                                                                                 |\r\n| [Visio Viewer][url-visio-viewer-01]                                          | 微软提供的免费的 Visio 文件（vsd，vdsx）的查看工具，安装后可以使用 IE 打开相关文件                                       |\r\n| [Syncthing][url-syncthing-01-gh]                                             | 开源多终端同步软件，支持便携化，我用来同步 Android 端和 Windows 端的文件。                                               |\r\n| [Resource Hacker][url-resourcehacker-01]                                     | 资源修改工具，我用它来将 CCleaner 的增强规则整合到 CCleaner 内，官方无中文                                               |\r\n| [小小输入法][url-yongim-01]                                                  | 外挂码表式输入法，无广告，内置五笔，郑码等码表 \u003cbr\u003e 配置比较麻烦，需要启动程序后才能正常使用                             |\r\n| [VCredist][url-vcredist-01]                                                  | VC 运行库合集                                                                                                            |\r\n| [All in One Runtimes][url-all-in-one-runtimes-01]                            | 一个运行库和常用插件的组合包，不会锁定主页，但是没有中文\u003cbr\u003e介绍可见 [All in One Runtimes 简要介绍](aio-runtimes.html)。 |\r\n| [微 PE 工具箱][url-wepe-01]                                                  | 通用的 Win 10 PE，无推广，无网络                                                                                         |\r\n| [Ventoy][url-ventoy-01]                                                      | 通用的U盘启动工具。                                                                                                      |\r\n| [NTPWEdit][url-ntpwedit-01]                                                  | Windows 用户密码重置工具，可在 PE 内使用。                                                                               |\r\n\r\n\r\n[url-7-zip-01]:http://7-zip.org/\r\n[url-PDF-extractpdf-01]:http://www.extractpdf.com/\r\n[url-PDF-smallpdf-01]:http://smallpdf.com/cn\r\n[url-all-in-one-runtimes-01]:https://www.sereby.org/site/All%20in%20One%20Runtimes\u0026lang=en\r\n[url-anytxt-01]:https://anytxt.net/\r\n[url-aria2-01]:https://aria2.github.io/\r\n[url-audacity-01]:http://www.audacityteam.org/\r\n[url-audacity-02-pa]:https://portableapps.com/apps/music_video/audacity_portable\r\n[url-audacity-03-ffmpeg]:http://lame.buanzo.org/#lamewindl\r\n[url-autohotkey-01]:http://ahkscript.org/download/\r\n[url-autohotkey-02-help]:https://wyagd001.github.io/\r\n[url-autohotkey-03-runany]:https://github.com/hui-Zz/RunAny\r\n[url-avisynth-plus-01]:https://avs-plus.net/\r\n[url-bleachbit-01]:https://www.bleachbit.org/download\r\n[url-bulk-crap-uninstaller-01-gh]:https://github.com/Klocman/Bulk-Crap-Uninstaller/releases\r\n[url-chrlauncher-01-gh]:https://github.com/henrypp/chrlauncher/releases\r\n[url-clcl-01]:http://www.nakka.com/soft/clcl/index_eng.html\r\n[url-copyq-01-gh]:https://github.com/hluk/CopyQ/releases\r\n[url-ditto-01]:http://ditto-cp.sourceforge.net/\r\n[url-docfetcher-01]:http://docfetcher.sourceforge.net/zh/download.html\r\n[url-doublecmd-01]:http://doublecmd.sourceforge.net/\r\n[url-everything-01]:http://www.voidtools.com/downloads/\r\n[url-extractnow-01]:https://www.extractnow.com/#/home\r\n[url-fastcopy-01]:https://ipmsg.org/tools/fastcopy.html.en\r\n[url-fastcopy-02-help]:http://www.mapaler.com/fastcopy-m/help-chs.html?ckattempt=1#mode\r\n[url-ffmpeg-01]:https://ffmpeg.org/download.html\r\n[url-ffmpeg-02-x86]:https://github.com/kusaanko/FFmpeg-Auto-Build/releases\r\n[url-filelocator-01]:https://www.mythicsoft.com/\r\n[url-foobar2000-01]:http://www.foobar2000.org/download\r\n[url-geek-uninstaller-01]:http://www.geekuninstaller.com/download\r\n[url-gifcam-01]:http://blog.bahraniapps.com/gifcam/\r\n[url-gimagereader-01-gh]:https://github.com/manisandro/gImageReader/releases\r\n[url-gimp-01]:http://www.gimp.org/downloads/\r\n[url-gimp-02-pa]:http://portableapps.com/apps/graphics_pictures/gimp_portable/\r\n[url-git-for-windows-01]:https://github.com/git-for-windows/git/releases\r\n[url-hibi-tuninstaller-01]:http://www.hibitsoft.ir/Uninstaller.html\r\n[url-imagemagick-01]:http://www.imagemagick.org/script/index.php\r\n[url-irfanview-01]:http://www.irfanview.com/\r\n[url-java-01]:https://java.com/zh-CN/\r\n[url-k-lite-codec-01]:http://www.codecguide.com/index.html\r\n[url-keepass-01]:https://keepass.info/\r\n[url-lazpaint-01]:https://lazpaint.github.io/\r\n[url-libreoffice-01]:https://www.libreoffice.org/\r\n[url-libreoffice-02-pa]:https://www.libreoffice.org/download/portable-versions/\r\n[url-listary-01]:http://www.listary.com/\r\n[url-mp3tag-01]:http://www.mp3tag.de/en/download.html\r\n[url-mp3tag-02-pa]:http://portableapps.com/node/18890\r\n[url-mpc-be-01-sf]:https://sourceforge.net/projects/mpcbe/\r\n[url-mpc-hc-01-gh]:https://github.com/clsid2/mpc-hc/releases\r\n[url-netsetman-01]:http://www.netsetman.com/en/freeware\r\n[url-paintnet-01]:https://www.getpaint.net/\r\n[url-paintnet-02-pf]:https://www.portablefreeware.com/index.php?id=2904\r\n[url-pandoc-01]:http://pandoc.org/\r\n[url-pdfcreator-01]:http://www.pdfforge.org/pdfcreator/download\r\n[url-pdftk-01]:https://www.pdflabs.com/\r\n[url-pdftk-builder-01]:http://www.angusj.com/pdftkb/\r\n[url-peazip-01]:https://www.peazip.org/\r\n[url-photodemon-01]:https://photodemon.org/\r\n[url-pickpic-01]:http://ngwin.com/picpick/download\r\n[url-qBittorrent-03]:https://github.com/c0re100/qBittorrent-Enhanced-Edition/releases\r\n[url-qbittorrent-01]:https://www.qbittorrent.org/\r\n[url-qbittorrent-02-pa]:https://portableapps.com/apps/internet/qbittorrent_portable\r\n[url-qdir-01]:http://www.softwareok.com/?Download=Q-Dir\r\n[url-resourcehacker-01]:http://www.angusj.com/resourcehacker/\r\n[url-scrcpy-01-gh]:https://github.com/Genymobile/scrcpy/releases\r\n[url-screentogif-01]:http://www.screentogif.com\r\n[url-sharex-01-gh]:https://github.com/ShareX/ShareX/releases\r\n[url-subtitleedit-01]:http://www.nikse.dk/SubtitleEdit/\r\n[url-sumatrapdf-01]:https://www.sumatrapdfreader.org/download-free-pdf-viewer.html\r\n[url-syncthing-01-gh]:https://github.com/syncthing/syncthing/releases\r\n[url-uget-01]:https://ugetdm.com/downloads/windows/\r\n[url-vidiot-01]:https://sourceforge.net/projects/vidiot/\r\n[url-visio-viewer-01]:https://support.office.com/en-us/article/use-visio-viewer-to-view-or-print-visio-drawings-08cce46e-d5f2-460a-86c3-679c32dca94a\r\n[url-vlc-01]:https://www.videolan.org/vlc/download-windows.html\r\n[url-wavosaur-01]:https://www.wavosaur.com/\r\n[url-wavosaur-02-lame]:https://www.rarewares.org/mp3-lame-bundle.php\r\n[url-webtorrent-01-gh]:https://github.com/webtorrent/webtorrent-desktop/releases\r\n[url-winmerge-01]:http://winmerge.org/\r\n[url-winpython-01]:https://github.com/winpython/winpython/releases\r\n[url-xnview-01]:http://www.xnview.com/en/xnview/#downloads\r\n[url-yongim-01]:http://yongim.ys168.com/\r\n[url-you-get-01-gh]:https://github.com/soimort/you-get\r\n[url-youtube-dl-01]:https://rg3.github.io/youtube-dl/\r\n[url-youtube-dl-03-list]:https://rg3.github.io/youtube-dl/supportedsites.html\r\n[url-youtuble-dl-02-gh]:https://github.com/rg3/youtube-dl\r\n[url-smartzip-01]:https://github.com/vvyoko/SmartZip\r\n[url-yt-dlp-01]:https://github.com/yt-dlp/yt-dlp\r\n[url-astrogrep-01]:https://astrogrep.sourceforge.net/\r\n[url-dngrep-01]:https://github.com/dnGrep/dnGrep\r\n[url-ntpwedit-01]:http://www.cdslow.org.ru/en/ntpwedit/\r\n[url-wepe-01]:https://www.wepe.com.cn/download.html\r\n[url-ventoy-01]:https://github.com/ventoy/Ventoy/releases\r\n[url-vcredist-01]:https://github.com/abbodi1406/vcredist/releases\r\n[url-musictag-01]:https://www.cnblogs.com/vinlxc/p/11347744.html\r\n[url-textgrab-01]:https://github.com/TheJoeFin/Text-Grab/releases\r\n[url-umiocr-01]:https://github.com/hiroi-sora/Umi-OCR/releases\r\n[url-imageglass-01]:https://imageglass.org/\r\n","cover":"","link":"mylist.html","preview":"\u003cp\u003e个人推荐的 Windows 软件列表，作记录用，更新不定时。\u003c/p\u003e\n","title":"我的 Windows 软件清单"},{"content":"\r\n\r\n### Firefox 扩展 Auto Reload on Error\r\n\r\nFirefox Addons：[Auto Reload on Error](https://addons.mozilla.org/zh-CN/firefox/addon/auto-reload-on-error/)\r\n\r\n源代码：[JPLiu/Auto-Reload-on-Error](https://github.com/JPLiu/Auto-Reload-on-Error)\r\n\r\n这个 Firefox 扩展的功能很简单，当网页打开失败时，暂停几秒后刷新网页，最多尝试 3 次，已测试支持 Windows 端和 Android 端的 Firefox。这个扩展的源码，均由 AI 生成（用的腾讯元宝的 DeepSeek）。\r\n\r\n主要用途是当 GitHub 等网站因偶发性网络问题打开失败时，自动刷新网页，话说这个功能在 Vivaldi 的 Android 端中貌似是自带的。\r\n\r\n","cover":"","link":"firefoxaddon-autoreloadonerror.html","preview":"\u003cp\u003e简单介绍一下 Auto Reload on Error 这个 Firefox 扩展。\u003c/p\u003e\n","title":"Firefox 扩展 Auto Reload on Error"},{"content":"\r\n\r\n# KeePass 命令行自动进入坚果云 WebDAV 密码库\r\n\r\n本文是对坚果云帮助中心中 [KeePass 如何搭配坚果云实现多设备同步](https://help.jianguoyun.com/?p=3348) 的一个补充，具体的 KeePass 连接 WebDAV 的步骤，请参考原文。\r\n\r\n我的电脑默认是启动 KeePass 且自动打开密码库，且之前一直是使用本地密码库，原有的启动参数（数据库在 KeePass 目录下）：\r\n\r\n    KeePass.exe \"DataBase.kdbx\" -pw:123456\r\n\r\n但是使用 WebDAV 密码库后，相对应的以下命令是无法直接打开密码库的：\r\n\r\n    KeePass.exe \"https://dav.jianguoyun.com/dav/Mine/DataBase.kdbx\" -pw:123456\r\n\r\n经过搜索之后发现，之前在 SourceForge 上已经有人讨论过：[Passing Parameters when Opening Remote WebDAV through Command Line](https://sourceforge.net/p/keepass/discussion/329221/thread/9849601c93/)，修改命令行之后，即可正常打开。\r\n\r\n    KeePass.exe \"https://dav.jianguoyun.com/dav/Mine/DataBase.kdbx\" -iocredfromrecent -pw:123456\r\n\r\n简单说下 `-iocredfromrecent` 这个参数，当把 WebDAV 的登录信息保存如 KeePass 配置文件后，使用此参数时，KeePass 自动使用从配置文件中保存的 WebDAV 登录凭据，此时 KeePass 可以实现自动获取 WebDav 数据库并解密。\r\n\r\n","cover":"","link":"keepasswebdavargument.html","preview":"\u003cp\u003eKeePass 命令行自动进入坚果云 WebDAV 密码库的小技巧。\u003c/p\u003e\n","title":"KeePass 命令行自动进入坚果云 WebDAV 密码库"},{"content":"\r\n\r\n### SoftUpdateSync 简单介绍\r\n\r\n这是一个个人自用的 AutoHotkey 脚本，由于我有以下软件更新习惯：\r\n\r\n- 及时更新。\r\n- 可选择的情况下，软件使用**官方提供的**便携版。\r\n- 必须安装的软件，保留安装包（保留最新版）。\r\n\r\n由于便携版软件的更新需要我自己到对应文件夹内更新，比较麻烦，所以写了一个脚本来实现以下功能：\r\n\r\n- 判断默认下载路径下有无对应软件的压缩包或安装包。\r\n- 若存在便携版压缩包，即解压到对应的文件夹位置，同时在更新文件夹中建立快捷方式，并生成相应压缩包（我在不同的地方有四台电脑，且互不相通，故会每月将更新了的软件压缩包保存至移动硬盘）。\r\n- 若存在对应软件安装包，即移动到对应位置。\r\n\r\nGitHub 地址： [TestFiles SoftUpdateSync](https://github.com/JPLiu/TestFiles/tree/main/AutoHotkey/SoftUpdateSync)\r\n\r\n使用方法很简单，直接运行 SoftUpdateSync.ahk 就可以，但是需要提前在 SyncScripts 文件夹下的各个 ahk 文件和 SyncScripts.ini 中配置相应路径。\r\n\r\n最开始脚本是用 bat 写的，用了一段时间，最近改用 AutoHotkey v2，可能还有些 Bug，有类似需要的可以看看。\r\n","cover":"","link":"ahk-softupdatesync.html","preview":"\u003cp\u003e简单介绍一下 SoftUpdateSync 这个个人自用的 AutoHotkey 脚本。\u003c/p\u003e\n","title":"SoftUpdateSync 简单介绍"},{"content":"\r\n\r\n### 关于 MV3 版本的广告拦截扩展的比较\r\n\r\n由于 Google 已经计划正式抛弃 MV2 的扩展，是时候需要对 MV3 的广告拦截扩展做一下比较了。\r\n\r\n#### AdGuard\r\n\r\n扩展地址：[AdGuard MV3](https://chromewebstore.google.com/detail/adguard-adblocker-mv3-exp/apjcbfpjihpedihablmalmbbhjpklbdf)\r\n\r\n- 支持规则自定义订阅，但是要求自定义的规则必须为 txt 扩展名（MV3 的版本可以使用其他扩展名）。\r\n    - 基于这个原因我的自制规则补充了 AdGuard 的版本 [TestFiles AdGuard](https://github.com/JPLiu/TestFiles/tree/main/Browser/AdGuard)。\r\n\r\n- 有自定义规则功能。\r\n\r\n- 无法查看当前页触发规则。\r\n\r\n#### uBlock Origin Lite\r\n\r\n扩展地址：[uBlock Origin Lite](https://chromewebstore.google.com/detail/ublock-origin-lite/ddkjiahejlhfcafbddmgiahcphecmpfh)\r\n\r\n- 不支持规则订阅。\r\n\r\n- 无自定义规则功能。\r\n\r\n- 无动态规则。\r\n\r\n- 无法查看当前页触发规则。\r\n\r\n目前来看，AdGuard 提供的扩展可用性更高，但是我作为 Firefox 用户暂时还是继续用 uBlock Origin。\r\n","cover":"","link":"adblockmv3.html","preview":"\u003cp\u003e比较一下 AdGuard 和 uBlock Origin 的 MV3 版本。\u003c/p\u003e\n","title":"关于 MV3 版本的广告拦截扩展的比较"},{"content":"\r\n\r\n### QPDF 简单介绍（附自用脚本）\r\n\r\n\r\n之前一段时间我一直使用 PDFtk 作为 PDF 文件的处理（截取，合并，旋转）的工具，最近遇到一个问题没办法使用 PDFtk 解决，转而寻找其他工具，最后翻出了之前发现的 QPDF。\r\n\r\nQPDF 是类似 PDFtk 的 PDF 处理命令行工具，和 PDFtk 相比，参数更多。\r\n\r\n- 官网：[QPDF 官网](https://qpdf.sourceforge.io)\r\n\r\n- 下载地址：[GitHub](https://github.com/qpdf/qpdf/releases)\r\n\r\n#### 自用的 QPDF 批处理脚本\r\n\r\n请注意，以下脚本涉及到部分文件的放置位置要求，请自行在脚本中加以配置，如果你看不懂以下的脚本，可考虑直接下载我的组合包，并解压到 `D:\\1-Program\\0-CommandLineTools\\` 这个路径下。\r\n\r\n下载地址：[QPDF.zip](https://github.com/JPLiu/TestFiles/raw/main/QPDF/QPDF.zip)\r\n\r\n```\r\n\r\n@echo off\u0026setlocal enabledelayedexpansion\r\n\r\nset PDFPath=%~1\r\n\r\nset QPDFPath=%~dp0QPDF-MSVC32\\bin\r\nset QPDF=%QPDFPath%\\qpdf.exe\r\nset QPDFSourcePath=%~dp0000Source\r\nset QPDFTargetPath=%~dp0000Target\r\n\r\necho QPDF List\r\necho.\r\necho 1. PDF 截取 (对文件，结果与源文件同路径)\r\necho 2. PDF 分拆 (对文件，结果在 000Target)\r\necho 3. PDF 合并 (对文件，结果在 000Target)\r\necho 4. PDF 压缩 (对文件，结果与源文件同路径)\r\necho 5. PDF 旋转 (对文件，结果与源文件同路径)\r\necho 6. PDF 水印 (批量，结果在 000Target)\r\necho 7. PDF 加密 (批量，结果在 000Target)\r\necho 8. PDF 偶数页化 (批量，奇数页 PDF 最后增加空白页，结果在 000Target)\r\necho.\r\nset /p choose=请选择处理方式：\r\nif \"%choose%\"==\"1\" Goto QPDFPagesA\r\nif \"%choose%\"==\"2\" Goto QPDFPagesB\r\nif \"%choose%\"==\"3\" Goto QPDFPagesC\r\nif \"%choose%\"==\"4\" Goto QPDFCompress\r\nif \"%choose%\"==\"5\" Goto QPDFRotate\r\nif \"%choose%\"==\"6\" Goto QPDFOverlay\r\nif \"%choose%\"==\"7\" Goto QPDFEncrypt\r\nif \"%choose%\"==\"8\" Goto QPDFAddBlank\r\nexit\r\n\r\n:QPDFPagesA\r\nif defined PDFPath ( echo 脚本启动时已带入路径： %1) else set /p PDFPath=请输入需要处理的 PDF 文件路径并回车:\r\nset /p QPDFOPT=请输入需要截取的页数（支持 1,2 或 1-3 或 2-z）：\r\ncd %QPDFTargetPath%\r\necho 正在处理 %PDFPath%\r\n%QPDF% --empty --pages \"%PDFPath%\" \"%QPDFOPT%\" -- \"%PDFPath%-A.pdf\"\r\nexit\r\n\r\n:QPDFPagesB\r\nif defined PDFPath ( echo 脚本启动时已带入路径： %1) else set /p PDFPath=请输入需要处理的 PDF 文件路径并回车:\r\necho 正在处理 %PDFPath%\r\n%QPDF% --split-pages=1 \"%PDFPath%\" %QPDFTargetPath%\\outfile.pdf\r\npause\r\nexit\r\n\r\n:QPDFPagesC\r\necho 请确认所有需要合并的文件已按顺序命名并放入 %QPDFSourcePath% 内。\r\npause.\r\ncd %QPDFTargetPath%\r\n%QPDF% --empty --pages %QPDFSourcePath%\\*.pdf -- COMBINED.pdf\r\necho 正在处理 %PDFPath%\r\npause\r\nexit\r\n\r\n:QPDFCompress\r\nif defined PDFPath ( echo 脚本启动时已带入路径： %1) else set /p PDFPath=请输入需要处理的 PDF 文件路径并回车:\r\necho 正在处理 %PDFPath%\r\n%QPDF% \"%PDFPath%\" --stream-data=compress -- \"%PDFPath%-Compress.pdf\"\r\npause\r\nexit\r\n\r\n:QPDFRotate\r\necho 实例：\r\necho +90:1 ：第一页顺时针旋转 90 度。\r\necho -90:1,2 ：第二页顺时针旋转 90 度。\r\nif defined PDFPath ( echo 脚本启动时已带入路径： %1) else set /p PDFPath=请输入需要处理的 PDF 文件路径并回车:\r\nset /p QPDFOPT=请输入旋转参数:\r\necho 正在处理 %PDFPath%\r\n%QPDF% \"%PDFPath%\" \"%PDFPath%-Rotate.pdf\" --rotate=%QPDFOPT%\r\npause\r\nexit\r\n\r\n:QPDFOverlay\r\necho.\r\necho 水印 PDF 文件（watermark.pdf）请放在 QPDF.exe 的同一目录\r\necho.\r\npause\r\nfor /r %QPDFSourcePath% %%a in (*.pdf) do (\r\n    echo 正在给 %%~na 加水印\r\n\t%QPDF% \"%%a\" --overlay watermark.pdf -- %QPDFTargetPath%\\%%~na-WM.pdf\r\n\techo.\r\n    )\r\nexit\r\n\r\n:QPDFEncrypt\r\necho.\r\necho 默认设置用户密码，且允许复制内容，如需变更限制，请自行参考帮助文件修改。\r\necho.\r\nset /p user_pw=请输入加密密码（留空默认123456）：\r\n\r\nif \"%user_pw%\"==\"\" set user_pw=123456\r\n\r\nfor /r %QPDFSourcePath% %%a in (*.pdf) do (\r\n    echo 正在给 %%~na 加密\r\n\t%QPDF% --encrypt %user_pw% %user_pw% 256 -- \"%%a\" %QPDFTargetPath%\\%%~na-PW.pdf\r\n\techo.\r\n    )\r\n    pause\r\nexit\r\n\r\n:QPDFAddBlank\r\nfor /r %QPDFSourcePath% %%a in (*.pdf) do (\r\n    for /f \"delims=*\" %%i in ('%QPDF% %%a --show-npages') do (\r\n        set Number=%%i%\r\n        set /a Remainder=!Number!%%2\r\n        if !Remainder! equ 0 (\r\n            echo 双页文件，无需处理\r\n            copy /y %%a %QPDFTargetPath%\\%%~na-NB.pdf\r\n        ) else (\r\n            echo 单页文件，添加空白页\r\n            %QPDF% blank.pdf --pages %%a . -- %QPDFTargetPath%\\%%~na-AB.pdf\r\n        )\r\n    )\r\n)\r\npause\r\nexit\r\n\r\n```\r\n\r\n上面的脚本将我在 **[自用的 PDFtk 批处理脚本](pdftkbat.html)** 中涉及到的功能全部转到 QPDF 实现。\r\n\r\n另外，上面的脚本增加 **PDF 偶数页化** 这个功能：PDF 文件页数为单页时，在文件最后增加一页空白页（`blank.pdf`，需要提前准备）。\r\n\r\n偶数页化之后，可以方便合并多个文件后直接打印，不需要打印后再手工编排，懒才是第一生产力。\r\n\r\n","cover":"","link":"qpdfbat.html","preview":"\u003cp\u003e简单介绍 QPDF，并附带一个自用脚本。\u003c/p\u003e\n","title":"QPDF 简单介绍（附自用脚本）"},{"content":"\r\n\r\n### 关于 FFmpeg 几个可用的 Build\r\n\r\n我的工作需要有 x86 的 FFmpeg，正好 FFmpeg 最近更新了 7.0，整理了一下最近发现的可用的几个 FFmpeg Build。\r\n\r\n| 链接                                                                                      | 说明                                                        | 备注    |\r\n|--------------------------------------------------------------------------------------|-------------------------------------------------------------|---------|\r\n| [yt-dlp/FFmpeg-Builds](https://github.com/yt-dlp/FFmpeg-Builds/releases)             | YT-DLP 提供的 FFmpeg Build，包含几个 YT-DLP 需要的 Patch    | x86/x64 |\r\n| [ShareX/FFmpeg](https://github.com/ShareX/FFmpeg/releases)                           | ShareX 提供的 FFmpeg Build，GitHub 上 ShareX 默认带的是 x64 | x86/x64 |\r\n| [kusaanko/FFmpeg-Auto-Build](https://github.com/kusaanko/FFmpeg-Auto-Build/releases) | 不定期更新的 FFmpeg Build                                   | x86/x64 |\r\n\r\n上述链接的安全性请自行确认。\r\n","cover":"","link":"ffmpegbuild.html","preview":"\u003cp\u003e简单列一下几个目前可用的 FFmpeg x86 Build。\u003c/p\u003e\n","title":"关于 FFmpeg 几个可用的 Build"},{"content":"\n\n### AHK-NewFiles 简单介绍\n\n这几年一直使用 [NewFiles](https://totalcmd.net/plugring/newfiles.html) 这个小工具来实现在 Double Commander(以下简称 DC) 中来实现新建文件，最近遇到了一个问题，在公司的云桌面上，NewFiles 无法正常创建 Excel 文件（xls 或 xlsx），相当不便，于是抽空用 AutoHotkey 写的类似 NewFiles 的小工具。\n\n- 下载地址：[GitHub](https://github.com/JPLiu/TestFiles/tree/main/DoubleCmd/AHK-NewFiles)\n\n#### AHK-NewFiles\n\n- 用于创建文件的脚本，仅仅实现创建/批量创建文件功能，可以使用 AutoHotkey 调用。\n- 参考 NewFiles，在配置文件（AHK-NewFiles.ini）中，可以配置模板文件所在的文件夹。\n- 模板文件同样使用 `%.***` 的格式命名，如 `%.docx`。\n\n![DC 工具栏按钮配置](/images/AHK-NewFiles-1.png)\n\n#### AHK-NewFolders\n\n- 用于创建文件夹的脚本，支持批量创建，可以使用 AutoHotkey 调用。\n\n![DC 工具栏按钮配置](/images/AHK-NewFiles-2.png)\n","cover":"","link":"ahk-newfiles.html","preview":"\u003cp\u003e用 AutoHotkey 编写的适用于 Double Commander 新建文件 / 文件夹的小工具。\u003c/p\u003e\n","title":"AHK-NewFiles 简单介绍"},{"content":"\r\n\r\n### 用火绒移除 WPS Office 的 释放C盘空间 菜单\r\n\r\n我自用的电脑上装了 WPS Office 个人版来编辑 Office 文件，但安装 WPS Office 后会在资源管理器中，添加一个 “释放C盘空间”的右键菜单，且 WPS Office 内的设置中，无法直接移除该菜单。\r\n\r\n按 [WPS Office 官方的说明](https://www.wps.cn/learning/question/detail/id/331972.html)，需要先安装 WPS C盘清理大师，之后在 WPS C盘清理大师中关闭该菜单，但是，不需要的功能我为什么要特地装个应用，这算是个流氓设计。\r\n\r\n试了下，用火绒可以把这个右键菜单隐藏掉（），具体操作如下：\r\n\r\n**火绒→安全工具→右键管理→文件右键菜单→关闭“KWPS Shellext64”**\r\n\r\n注意，上面这个操作未作详细测试，可能对 WPS Office 的其他右键菜单有影响，且更新 WPS Office 之后可能需要重新设置。\r\n\r\n![右键管理](/images/HuorongRemoveWPSCMenu-1.png)\r\n","cover":"","link":"huorongremovewpscmenu.html","preview":"\u003cp\u003e说一下用火绒移除 WPS 的 释放C盘空间 菜单。\u003c/p\u003e\n","title":"用火绒移除 WPS Office 的 释放C盘空间 菜单"},{"content":"\r\n\r\n### Vim 定时切换色彩配置\r\n\r\n之前写过一个 AutoHotkey 脚本，用于[根据时间切换 Windows 系统的明暗主题](AHK-Dark-Light-Switch.html)，前几天突然想起来，自用的 Vim 一直使用暗色的主题，于是决定折腾下看看能否实现主题自动切换，搜索了以下，最后结果如下。\r\n\r\n    \" ColorScheme （示例使用 Vim 自带的 wildcharm 主题）\r\n    colorscheme wildcharm\r\n    if strftime(\"%H%M\") \u003e= 0700 \u0026\u0026 strftime(\"%H%M\") \u003c 1945\r\n       set background=light\r\n    else\r\n       set background=dark\r\n    endif\r\n\r\n简单说明下，上面的内容加入 vimrc 后，Vim 启动时，会判断当前的时间，当时间在 07:00 至 19:45 之间时，使用 colorscheme 的 light 模式；否则，使用 dark 模式。如果有需要的话，可以使用不同 colorscheme。\r\n\r\n请注意，只在 Vim 启动时会判定，启动后只要不关闭 Vim，显示效果不会变更。应该可以用 autocmd 优化，但感觉触发的机会很少，先不改吧。\r\n","cover":"","link":"vim-colorscheme-lightdark.html","preview":"\u003cp\u003e在 vimrc 中配置定时调整 Vim 的色彩配置（colorscheme）\u003c/p\u003e\n","title":"Vim 定时调整色彩配置"},{"content":"\r\n\r\n### 用 AutoHotkey 获取当前连接的 WiFi 热点的名称\r\n\r\n今天突发奇想修改了一下 Aria2AHK，增加了一个根据启动时连接的热点不同，切换不同的 Aria2 限速配置的功能。实现过程中需要获取当前连接的 Wifi 的 SSID 名称，记录一下。\r\n\r\n    ; 获取当前连接的 WiFi 热点的名称\r\n    ; 通过 NETSH 命令获取当前的 SSID 信息，保存到 SSID.info 文件中。\r\n    Runwait A_ComSpec ' /c netsh wlan show interface | findstr /i \"SSID\" \u003e SSID.info', ,\"Hide\"\r\n    ; 读取 SSID.info 内容到 SSIDInfo 变量。\r\n    SSIDInfo := FileRead(\"SSID.info\", \"UTF-8\")\r\n    ; 读取完成后，删除 SSID.info 文件。\r\n    FileDelete A_ScriptDir . \"\\SSID.info\"\r\n    ; 由于 SSIDInfo 中会存在 SSID 和 BSSID 信息，移除 BSSID 的信息，只保留 SSID 名称到 SSIDName。\r\n    SSIDName := RegExReplace(SSIDInfo, \"mi)^\\s*SSID\\s*:\\s*([^\\r]+)$\\r\\n.*\" , \"$1\")\r\n    ; 上一步的替换后，SSIDName 中存在换行，需要进行移除，否则匹配时会由于最后的换行导致无法匹配成功。\r\n    SSIDName := StrReplace(SSIDName, \"`r`n\", \"\",)\r\n    ; 显示 SSIDName。\r\n    Msgbox SSIDName\r\n\r\n","cover":"","link":"ahk-get-current-ssid.html","preview":"\u003cp\u003e一个 AutoHotkey v2 的实例，用于获取当前连接的 WiFi 热点的名称。\u003c/p\u003e\n","title":"用 AutoHotkey 获取当前连接的 WiFi 热点的名称"},{"content":"\r\n\r\n### MPC-HC 与 AviSynth+ 便携化\r\n\r\n偶尔会用 AviSynth+ 来做一些简单的视频处理，主要是 AviSynth+ 体积小巧，而且脚本可以复用。\r\n\r\n普通情况下 AviSynth+ 是安装使用的，但是在公司的设备中，用户不允许进行程序安装，于是尝试了一下将 AviSynth+ 便携化，基本上是成功的，以下就步骤说明如下：\r\n\r\n#### 便携化步骤\r\n\r\n注意，以下内容以 x86 的 AviSynth+ 和 MPC-HC 为示例，x64 的可尝试，不保证可用。\r\n\r\n1. 到 [AviSynth+ GitHub](https://github.com/AviSynth/AviSynthPlus/releases) 和 [MPC-HC GitHub](https://github.com/clsid2/mpc-hc/releases)，下载最新版本的 AviSynth+ 和 MPC-HC。\r\n    + AviSynth+ 选择名字符合 `AviSynthPlus_*-filesonly.7z` 这个格式的压缩包。\r\n    + MPC-HC 选择名字符合 `MPC-HC.*.x86.zip ` 这个格式的压缩包。\r\n\r\n2. 解压上一步中下载的 AviSynth+ 和 MPC-HC 压缩包，并移动必要文件。\r\n    + 将解压出来 AviSynth+ 文件中 x86 文件夹下的 **AviSynth.dll** 移动到 MPC-HC 解压的目录。\r\n    + 将解压出来 AviSynth+ 文件中 x86 文件夹下的 System 文件夹下的 **DevIL.dll** 移动到 MPC-HC 解压的目录。\r\n    + **AviSynth.dll** 和 **DevIL.dll** 应与 **mpc-hc.exe** 在同一文件夹下。\r\n\r\n3. （可选）移动 AviSynth+ 的其他 Plugin。\r\n    + 在 MPC-HC 解压的文件夹下，新建一个文件夹（名称随意，如：AviSynthExt）。\r\n    + 将解压出来 AviSynth+ 文件中 x86 文件夹下的 plugins 文件夹下的所有文件移动到新建的目录。\r\n\r\n做完上面中几步之后，应该会得到下面这个结构的文件夹\r\n\r\n    MPC-HC\r\n        AviSynthExt (文件夹)\r\n            ConvertStacked.dll\r\n            DirectShowSource.dll\r\n            ……\r\n        CrashReporter (文件夹)\r\n        ……\r\n        AviSynth.dll (文件)\r\n        DevIL.dll (文件)\r\n        mpc-hc.exe (文件)\r\n        ……\r\n\r\n此时，AviSynth+ 便携化已完成，但是特别注意以下内容：\r\n\r\n#### 存在问题\r\n\r\n1. 用上述方案实现便携化的 AviSynth+，在 avs 脚本中，需要使用以下内容加载对应 plugin dll：\r\n\r\n        LoadPlugin(\"D:\\1-Program\\MPC-HC\\AviSynthExt\\Plugins\\ConvertStacked.dll\")\r\n        LoadPlugin(\"D:\\1-Program\\MPC-HC\\AviSynthExt\\Plugins\\DirectShowSource.dll\")\r\n        LoadPlugin(\"D:\\1-Program\\MPC-HC\\AviSynthExt\\Plugins\\ImageSeq.dll\")\r\n        LoadPlugin(\"D:\\1-Program\\MPC-HC\\AviSynthExt\\Plugins\\Shibatch.dll\")\r\n        LoadPlugin(\"D:\\1-Program\\MPC-HC\\AviSynthExt\\Plugins\\TimeStretch.dll\")\r\n        LoadPlugin(\"D:\\1-Program\\MPC-HC\\AviSynthExt\\Plugins\\VDubFilter.dll\")\r\n\r\n2. 用上述方案实现便携化的 AviSynth+，无法使用 DirectShowSource() 滤镜，可以使用 [ffms2](https://github.com/FFMS/ffms2) 外部滤镜代替。\r\n\r\n#### 其他内容\r\n\r\n以下内容属于锦上添花的内容，且可能仅适用于作者，可参考，可忽略。\r\n\r\n1. **关于预览**\r\n    + 若用户使用 Vim 作为 avs 脚本的编辑器，可以参考 [Vim 给特定文件增加功能以及菜单](vim-specialsetting.html) 的内容，添加热键来调用 MPC-HC 打开当前的 avs 脚本的功能作为预览。\r\n\r\n2. **关于压制**\r\n    + 若使用 FFmpeg 压制 avs 脚本，可将 AviSynth.dll 复制至 ffmpeg.exe 所在目录下实现便携化。\r\n    + 请注意，此时使用的 FFmpeg 应为 Shared 版，保证 ffmpeg.exe 自动加载同文件夹下的 AviSynth.dll 处理 avs 脚本。\r\n    + 如不清楚什么是 Shared 版，可到 [FFmpeg-Auto-Build](https://github.com/kusaanko/FFmpeg-Auto-Build/releases) 下载名字中含 shared 的 FFmpeg。\r\n\r\n![示例效果 version()](/images/MPC-HCAviSynth-1.gif)\r\n","cover":"","link":"mpc-hcavisynth.html","preview":"\u003cp\u003e为 MPC-HC 添加对 AviSynth+ 的便携化支持。\u003c/p\u003e\n","title":"MPC-HC 与 AviSynth+ 便携化"},{"content":"\r\n\r\n### 给特定文件增加 Vim 功能以及菜单\r\n\r\n由于维护 uBlock Origin 和 Subconverter 等规则，在 Vim 中打开特定文件时，常常需要使用特定功能，但使用 autocmd 命令增加热键后，易遇到同时打开多个文件时，autocmd 功能加载后冲突的问题，于是趁着有空，增加了一个 Function，用于在打开特定文件时，添加特定功能热键，并显示热键菜单避免忘记。\r\n\r\n    \" Special Setting {{{1\r\n    function! SpecialSetting()\r\n        let file_name = expand('%')\r\n        silent! aunmenu 特定(\u0026P)\r\n        if file_name =~ 'AreaProxy.*\\.list' || file_name =~ 'Extra.*\\.list'\r\n            source $VIM\\vimconf\\vim-special\\autocmd-Subconverter-List.vim\r\n        else\r\n        if file_name == 'RegexDeleteRule.list'\r\n            nnoremap \u003csilent\u003e \u003cbuffer\u003e \u003cF6\u003e :silent source $VIM\\vimconf\\vim-special\\script-RegexDeleteRule-removehttp.vim\u003ccr\u003e\r\n            amenu \u003csilent\u003e特定(\u0026P).F6-RemoveHttp \u003cnop\u003e\r\n        else\r\n        if file_name =~ 'Liu.s-Clear-List\\.list'\r\n            nnoremap \u003csilent\u003e \u003cbuffer\u003e \u003cF6\u003e :silent source $VIM\\vimconf\\vim-special\\script-Liu's-Clear-List-removeparam.vim\u003ccr\u003e\r\n            amenu \u003csilent\u003e特定(\u0026P).F6-RemoveParam \u003cnop\u003e\r\n        else\r\n        if file_name =~ '.*\\.md' || file_name =~ '.*\\.mkd'\r\n            nnoremap \u003csilent\u003e \u003cbuffer\u003e \u003cF6\u003e \"=strftime(\"%Y-%m-%d %H:%M:%S\")\u003cCR\u003egP\r\n            amenu \u003csilent\u003e特定(\u0026P).F6-输入当期时间 \u003cnop\u003e\r\n        else\r\n        if file_name =~ '.*\\.avs' || file_name =~ '.*\\.avsi'\r\n            nnoremap \u003csilent\u003e \u003cbuffer\u003e \u003cF6\u003e :silent !Start D:\\1-Program\\MPC-HC\\mpc-hc.exe \"%:p\"\u003ccr\u003e\r\n            amenu \u003csilent\u003e特定(\u0026P).F6-Preview \u003cnop\u003e\r\n         endif | endif | endif | endif | endif\r\n    endfunction\r\n    autocmd BufEnter * call SpecialSetting()\r\n\r\n实际效果如下图，基本满足了我个人的需要，如有需要可参考：\r\n\r\n![效果](/images/Vim-SpecialSetting-1.gif)\r\n\r\n","cover":"","link":"vim-specialsetting.html","preview":"\u003cp\u003e用 Vim 打开特定文件时，增加功能以及菜单。\u003c/p\u003e\n","title":"Vim 给特定文件增加功能以及菜单"},{"content":"\r\n\r\n### 在 Firefox 上启用 Bing AI 的对话机器人\r\n\r\n\u003e 请注意，本文只解决在 Firefox 浏览器上启用在默认情况无法打开 Bing AI 对话功能的问题，至于访问 Bing AI 的网络条件，不在本文范围。\r\n\r\n#### Windows 端\r\n\r\n+ 方案一：修改 Firefox 对 Bing 的 UserAgent，以下以 [Header Editor][addon-header-editor] 扩展为例 。\r\n    + 安装 [Header Editor][addon-header-editor] 扩展。\r\n    + 添加 Bing 的 Request 规则。\r\n        - 名称：Bing Requset\r\n        - 规则类型：修改请求头\r\n        - 匹配类型：网址前缀\r\n        - 匹配规则：`https://www.bing.com`\r\n        - 排除规则：留空\r\n        - 执行类型：常规\r\n        - 头名称：user-agent\r\n        - 头内容：填写 Edge 浏览器的 UserAgent，如 `Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/107.0.1418.42` 。\r\n\r\n+ 方案二：使用 [Bing AI for Firefox][addon-bing-ai-for-firefox] 扩展。\r\n    + 安装 [Bing AI for Firefox][addon-bing-ai-for-firefox] 扩展。\r\n    + 安装后打开 Bing，登录即可使用 Bing AI 对话机器人功能。\r\n\r\n![Firefox Bing Windows](/images/FirefoxBingAIAddon-1.jpg)\r\n\r\n#### Android 端\r\n\r\n+ 方案一：使用 [Bing AI for Firefox][addon-bing-ai-for-firefox] 扩展。\r\n    + 安装 [Bing AI for Firefox][addon-bing-ai-for-firefox] 扩展。\r\n    + 安装后打开 Bing，登录即可使用 Bing AI 对话机器人功能。\r\n\r\n![Firefox Bing Android](/images/FirefoxBingAIAddon-2.jpg)\r\n\r\n[addon-header-editor]:https://addons.mozilla.org/zh-CN/firefox/addon/plain-text-linker/\r\n[addon-bing-ai-for-firefox]:https://addons.mozilla.org/zh-CN/firefox/addon/bing-ai-for-firefox/\r\n\r\n","cover":"","link":"firefoxbingaiaddon.html","preview":"\u003cp\u003e简单说下在 Firefox 上启用 Bing AI 对话机器人的方法。\u003c/p\u003e\n","title":"在 Firefox 上启用 Bing AI 的对话机器人"},{"content":"\r\n\r\n### RssEverthing 简单介绍\r\n\r\n\u003e 2023.06.04 RssEverthing 已转为收费服务。\r\n\r\n起因是发现最近之前用 Feed43 制作的 RSS 订阅源没有正常更新，而且 Feed43 的登录页面也打不开，等了几天也没有恢复，在 Reddit 上看了一下相关的讨论，提到 [RssEverthing](https://rss.stephenslab.top/) 这个 RSS 订阅源生成服务。\r\n\r\n下面拿搜狗输入法 Windows 版的更新日志做例子，简单介绍下 RssEverthing 这个服务。\r\n\r\n- 和 Feed43 不同，[RssEverthing](https://rss.stephenslab.top/) 必须要登录才能使用。\r\n\r\n- 登录之后，在 **Step 1. Specify source page address (URL)** 下方的输入框网址，然后点击 **Load** 按钮。\r\n    - 搜狗输入法 Windows 版更新日志的地址：`https://pinyin.sogou.com/changelog.php`\r\n\r\n- 之后在 **Item (repeatable) Search Pattern** 右方的输入框输入匹配规则，然后点击 **Extract** 按钮。\r\n    - 搜狗输入法 Windows 版匹配规则：`\u003ch2\u003e{%}\u003c/h2\u003e{*}\u003col\u003e{%}\u003c/ol\u003e`\r\n    - 和 Feed43 一样，`{%}`：匹配需要提取的内容、`{*}`：匹配任意数量的不需要字符。\r\n\r\n- 之后在 **Step 3. Define output format** 处规范 RSS 订阅源的输出，点击 Preview 按钮查看效果。\r\n    - 和 Feed43 一样，`{%n}`：表示上一步的第n个提取对象。\r\n    - 请注意，RssEverthing 的预览对于手工添加的 `\u003cbr\u003e` 换行等内容会直接显示代码，但是订阅时是正常显示换行的。\r\n\r\n- 确认效果后，可以添加到 Inoreader 订阅查看效果。\r\n    - 初次生成订阅时，生成的订阅时间顺序貌似有点乱，但是我生成的其他订阅是正常的。\r\n\r\n最后放两张图，一张是 Inoreader 的订阅效果，一张是 RssEverything 的完整配置页面。\r\n\r\n#### 图一：\r\n\r\n![Inoreader 订阅效果](/images/RssEverything-2.jpg)\r\n\r\n#### 图二：\r\n\r\n![RssEverything 示例](/images/RssEverything-1.jpg)\r\n\r\n","cover":"","link":"rsseverything.html","preview":"\u003cp\u003e简单介绍下 RssEverthing 这个 RSS 相关服务。\u003c/p\u003e\n","title":"RssEverthing 简单介绍"},{"content":"\r\n\r\n### 关于 Firefox 的三个 Text Link 扩展的简单对比\r\n\r\n在 Firefox 中，有若干个扩展可以实现对纯文本链接的双击打开，最近发现我常用的此功能扩展存在一个问题，翻了下 Firefox 的扩展商店的相关扩展试了一下，记录一下结果。\r\n\r\n#### [Plain Text Linker][addon-plain-text-linker]\r\n\r\n- 找到的唯一一个同时支持 Firefox 和 Chrome 的扩展。\r\n- 支持双击打开包含全角字符文本链接（如 `https://www.ｂａｉｄｕ．ｃｏｍ`）。\r\n- 缺点是只要链接前面有符号就无法双击打开（如 `#https://www.baidu.com`）。\r\n\r\n#### [Text Link][addon-text-link]\r\n\r\n- Firefox 独占扩展，我之前一直使用的扩展，可配置项是三个扩展中最多的。\r\n- 支持双击打开包含全角字符文本链接。\r\n- 支持双击打开包含前面有符号的文本链接。\r\n- 缺点是成功双击打开链接后，扩展的内存占用会暴涨（在 `about:performance` 中可以看到），触发次数越多占用越大，除非禁用扩展或重启浏览器，否则不会释放。\r\n\r\n#### [Text Link webext][addon-text-link-webext]\r\n\r\n- Firefox 独占扩展，最后一次更新是 2018 年。\r\n- 支持双击打开包含前面有符号的文本链接。\r\n- 缺点是不支持双击打开包含全角字符文本链接。\r\n\r\n三者算互有优劣，暂时先从 [Text Link][addon-text-link] 切换到 [Text Link webext][addon-text-link-webext]。\r\n\r\n[addon-plain-text-linker]:https://addons.mozilla.org/zh-CN/firefox/addon/plain-text-linker/\r\n[addon-text-link]:https://addons.mozilla.org/zh-CN/firefox/addon/text-link/\r\n[addon-text-link-webext]:https://addons.mozilla.org/zh-CN/firefox/addon/text-link-webext/\r\n","cover":"","link":"firefoxtextlinkaddon.html","preview":"\u003cp\u003e关于 Firefox 的三个 Text Link 扩展的简单对比（Plain Text Linker，Text Link，Text Link webext）\u003c/p\u003e\n","title":"关于 Firefox 的三个 Text Link 扩展的简单对比"},{"content":"\r\n\r\n### 2023 年我的 RSS 订阅方式\r\n\r\n时隔两年，按照惯例重新总结我的 RSS 订阅方式，总体来说，这两年 RSS 订阅依然困难，各个平台的闭关锁软行为越来越严重，整体质量也在下降。\r\n\r\n#### RSS 阅读器\r\n\r\n继续使用 Inoreader，PC 端使用网页版，Android 端使用 FeedMe。\r\n\r\n#### 常见 RSS 订阅源相关服务\r\n\r\n| 名称                               | 功能                                                                                                                           |\r\n|------------------------------------|--------------------------------------------------------------------------------------------------------------------------------|\r\n| [RSSHub][url-rsshub-01]            | RSSHub，个人觉得是国内目前支持最多的 RSS 相关项目。                                                                            |\r\n| [AboutRSS][url-aboutrss-01]        | AboutRSS，收集了大量和 RSS 相关的信息，包括订阅源。                                                                            |\r\n| [FeedX][url-feedx-01]              | 提供人民日报，解放日报、南方周末，BBC 等的订阅源，稳定。 \u003cbr\u003e 主站被墙，需要梯子。                                             |\r\n| [各种转 RSS 服务][url-lilydjwg-01] | 提供知乎专栏和知乎动态的 RSS 订阅。\u003cbr\u003e Inoreader 支持知乎订阅，但是不支持全文输出。                                           |\r\n| [Feed43][url-feed43-01]            | 针对网页编码自定义的订阅源生成功能。\u003cbr\u003e 参考资料：[利用 Feed43，将任意网页制作成 RSS 订阅源 - 少数派](http://sspai.com/34320) |\r\n| [anyfeeder][url-anyfeeder-01]      | 提供 iDaily 每日环球视野等一些网站的订阅源。                                                                                   |\r\n| [Feeddd][url-feeddd-01]            | 提供部分微信公众号的订阅。                                                                                                     |\r\n| [蜜柑计划][url-mikanani-01]        | 提供用户自选番剧磁力/BT 更新的订阅。                                                                                           |\r\n| [KOTOMI RSS][url-kotomi-01]        | 提供针对搜索内容的 ACG 订阅。                                                                                                  |\r\n\r\n#### 常见平台的 RSS 订阅方式\r\n\r\n这里只列出本人常用的平台，很多平台目前反爬太严格，已经被迫放弃使用 RSS 订阅。\r\n\r\n| 平台        | 订阅方式                           | 备注                                     |\r\n|-------------|------------------------------------|------------------------------------------|\r\n| 哔哩哔哩    | 无                                 | RSSHub 的订阅并不稳定                    |\r\n| 微信公众号  | [WeRSS][url-werss-01]（收费）      | [今天看啥][url-jintiankansha-01]（收费） |\r\n| 知乎        | [各种转 RSS 服务][url-lilydjwg-01] | 支持专栏和用户订阅                       |\r\n| GitHub      | Inoreader 本身支持                 | 支持 Released 等页面订阅                 |\r\n| SourceForge | 平台提供文件夹 RSS                 |                                          |\r\n\r\n#### 个人制作的 Feed43 订阅源（目前 Feed43 访问异常）\r\n\r\n| 名称                                                                              | 地址                                            |\r\n|-----------------------------------------------------------------------------------|-------------------------------------------------|\r\n| [423Down 更新](https://www.423down.com/)                                          | `https://node2.feed43.com/423downrss.xml`       |\r\n| [All in One Runtimes 更新](https://www.sereby.org/site/changelog\u0026did=25\u0026all=true) | `https://feed43.com/allinoneruntimesupdate.xml` |\r\n| [Everything 更新](http://www.voidtools.com/Changes.txt)                           | `https://node2.feed43.com/everythingupdate.xml` |\r\n| [Foobar2000 更新](https://www.foobar2000.org/?page=News)                          | `https://node2.feed43.com/fb2kupdate.xml`       |\r\n| [Speedyfox 更新](https://www.crystalidea.com/speedyfox/release-notes)             | `https://node2.feed43.com/speedyfox.xml`        |\r\n| [搜狗输入法 更新](https://pinyin.sogou.com/changelog.php)                         | `https://node2.feed43.com/sogouinput.xml`       |\r\n\r\n[url-aboutrss-01]:https://github.com/AboutRSS/ALL-about-RSS\r\n[url-anyfeeder-01]:https://plink.anyfeeder.com/\r\n[url-feed43-01]:https://feed43.com/\r\n[url-feeddd-01]:https://feeddd.org/feeds\r\n[url-feedx-01]:https://feedx.net/\r\n[url-jintiankansha-01]:http://www.jintiankansha.me/\r\n[url-kotomi-01]:https://moe4sale.in/\r\n[url-lilydjwg-01]:https://rss.lilydjwg.me/\r\n[url-mikanani-01]:https://mikanani.me\r\n[url-rsshub-01]:https://docs.rsshub.app/\r\n[url-werss-01]:https://werss.app/\r\n","cover":"","link":"rss2023.html","preview":"\u003cp\u003e简单整理下目前（2023年）主要使用的 RSS 订阅源生成服务。\u003c/p\u003e\n","title":"2023 年我的 RSS 订阅方式"},{"content":"\r\n\r\n### 在火绒中添加对 KeePass Xml 配置文件的保护规则\r\n\r\n近期看到 [CVE-2023-24055](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24055) 这个 KeePass 的漏洞，目前来看 KeePass 的开发人员没有计划修复这个漏洞，建议的意思是用户自己加强设备安全。因个人并不打算切换至 LastPass 之类线上密码平台，于是参考之前看到的浏览器配置保护的火绒规则，在火绒里面加了一条 KeePass 的 xml 配置文件的保护规则，具体如下：\r\n\r\n#### 自定义规则\r\n\r\n- 发起程序：`*`\r\n- 保护对象：文件 `*\\KeePass.config.xml`\r\n- 保护动作：创建、读取、修改、删除\r\n- 规则触发：询问我\r\n\r\n![火绒自定义规则](/images/KeePassXmlHuorong-1.png)\r\n\r\n#### 自动处理规则\r\n\r\n- 发起程序：`*\\KeePass.exe`\r\n- 保护对象：文件 `*\\KeePass.config.xml`\r\n- 保护动作：自动允许 创建、读取、修改、删除\r\n\r\n![火绒自动处理规则](/images/KeePassXmlHuorong-2.png)\r\n\r\n实测可以在保持 KeePass 正常功能的情况下，禁止其他程序访问 KeePass 的配置文件，但是是否能防住 CVE-2023-24055 不确定，图个安慰吧。\r\n","cover":"","link":"keepassxmlhuorong.html","preview":"\u003cp\u003e在火绒中添加对 KeePass Xml 配置文件的保护规则\u003c/p\u003e\n","title":"在火绒中添加对 KeePass Xml 配置文件的保护规则"},{"content":"\r\n\r\n### 关于QQ邮箱导出的 eml 文件的一个小经验\r\n\r\n起因是今天看到小众软件发的 [如何提取 Word 文档中的原图？](https://www.appinn.com/word-export-images/) 一文，想起之前提取QQ邮箱中邮件的图片的经历，简单写下。\r\n\r\n#### 提取QQ邮箱邮件正文图片的步骤\r\n\r\n先说明下，本文说的邮件中的图片是指发件人插入在邮件正文中的图片，不是指邮件附件的图片，附件的图片可以直接点全部下载。\r\n\r\n1. 登录QQ邮箱，打开包含图片的邮件，点击邮件信息最右边，向下的箭头符号。\r\n\r\n2. 这个时候，会看到一个“导出为eml文件”的选项，点击这个按钮，将邮件下载为单个文件。\r\n    - 下载下来的 eml 文件，不是压缩包，所以无法直接解压。\r\n    - 这个地方要吐槽下，界面提示是“导出为eml文件”，但是下载的文件默认没有扩展名。\r\n\r\n3. 使用 MS Office 或者 WPS Office 中的文件组件（Word）打开下载的邮件文件。\r\n\r\n4. 在 MS Office 或者 WPS Office 中，对打开的文件进行“另存为”，选择为 Html。\r\n\r\n5. 然后在保存为 Html 的位置，就可以看到邮件正文中的图片文件了。\r\n\r\n步骤说明应该够细了，这里就不放图了。\r\n","cover":"","link":"qqmailemlpic.html","preview":"\u003cp\u003e关于QQ邮箱导出的 eml 文件中提取图片的一个技巧。\u003c/p\u003e\n","title":"关于QQ邮箱导出的 eml 文件的一个小技巧"},{"content":"\r\n\r\n### userChrome.css 隐藏 Firefox 的 ClearKey 报错提示\r\n\r\nFirefox 从大约 103 的版本开始，在哔哩哔哩的番剧页面播放视频时，就会不时出现 ClearKey 的报错，在我这里，这个问题一直到最新的 107 的版本都存在，只是在 107 的版本上问题变更为：在启动 Firefox 之后，第一次打开哔哩哔哩的番剧的播放页面时，有一定概率 ClearKey 报错，无论第一次打开是否报错，在关闭 Firefox 前都不会再次报错，而在关闭 Firefox 后，下次打开 Firefox 后再一次第一次打开哔哩哔哩的番剧的播放页面时，又会有一定概率报错。\r\n\r\n昨天突然想起来，Firefox 可以用 userChrome.css 隐藏界面上面的元素，于是就决定尝试隐藏这个报错。\r\n\r\n1. 在 about:config 中修改以下参数：\r\n\r\n    `toolkit.legacyUserProfileCustomizations.stylesheets` 设置为 `true`\r\n\r\n2. 在 Firefox 的 Profiles 文件夹中，新建 chrome 文件夹，在 chrome 文件夹中，新建 userChrome.css 文件。\r\n\r\n3. 在 userChrome.css 文件中，添加以下内容\r\n\r\n        /* 主窗口 移除顶部提示（避免 ClearKey 崩溃提示） */\r\n        /* 可能也会影响 ClearKey 以外的提示） */\r\n        .notificationbox-stack {\r\n        \t  height: 0px !important;\r\n        }\r\n\r\n之后再次重启 Firefox，哔哩哔哩的番剧播放页面应该不会再显示 ClearKey 的报错。\r\n\r\n","cover":"","link":"firefoxclearkeybilibili.html","preview":"\u003cp\u003e用 userChrome.css 隐藏 Firefox 在哔哩哔哩番剧播放页面的 ClearKey 报错提示。\u003c/p\u003e\n","title":"userChrome.css 隐藏 Firefox 的 ClearKey 报错提示"},{"content":"\r\n\r\n### Firefox 扩展 Don't track me Google\r\n\r\n[Don't track me Google][url-dont-track-me-google-01] 是在 Firefox 推荐扩展清单中的一个 推荐扩展，它的功能很简单，就是将 Google 搜索引擎结果页上的链接都还原成原始链接。\r\n\r\n之所以提起这个扩展，是因为最近在翻浏览器历史记录的时候，发现有一部分格式类似于以下格式的历史记录：\r\n\r\n    https://www.google.com/url?q=http://www.example.com/\r\n\r\n试了一下，在 Windows 端的 Firefox，Google 搜索的结果是网页原始链接，而移动端的 Firefox 上（测试的 Firefox Nightly），Google 搜索结果链接是类似上述格式的跳转式链接。\r\n\r\n我非常不喜欢这种链接，最初尝试使用油猴脚本 [anti-redirect][url-anti-redirect-01]，但是实测在 Android 上的 Firefox Nightly + Violentmonkey 上没有效果。于是开始翻 Firefox 的扩展清单，然后找到了 [Don't track me Google][url-dont-track-me-google-01]，实测有效，Android 端可用扩展又多一个。\r\n\r\n![前后对比](/images/Dont-Track-Me-Google-01.jpg)\r\n\r\n[url-dont-track-me-google-01]:https://addons.mozilla.org/zh-CN/firefox/addon/dont-track-me-google1/\r\n[url-anti-redirect-01]:https://greasyfork.org/zh-CN/scripts/11915\r\n\r\n","cover":"","link":"dont-track-me-google.html","preview":"\u003cp\u003e一个 Firefox/Chrome 转换 Google 搜索结果链接为原始链接的扩展。\u003c/p\u003e\n","title":"Firefox 扩展 Don't track me Google"},{"content":"\r\n\r\n### 用 uBlock Origin 调整微博 V7 显示效果\r\n\r\n\u003e 2023.04.20 增加一条，修改用户主页版头图的高度，可根据自身显示屏修改。\r\n\r\n\u003e 2023.03.25 增加一条修改搜索页面微博评论框长度。\r\n\r\n很久之前曾经写过 [用 uBlock Origin 实现 WorkFlowy 的暗色模式](uBlockOriginDarkWorkFlowy.html)，用 uBlock Origin 的 `:style()` 规则实现 WorkFlowy 的暗色主题，最近看到微博宣布旧版网页版微博即将下架，试了下微博的新网页版（即 微博 V7），主页左边的栏目暂且不提，右边的栏目对于我来说是完全无意义的，于是干脆用 uBlock Origin 干掉，规则如下：\r\n\r\n    ! 各条规则的参数应当根据自身显示器情况进行调整。\r\n    ! 以下这条规则会移除微博的整个右侧栏\r\n    ! 如果不添加此条，主页面栏目会被压缩；如果添加，用户主页的按时间搜索等右侧按钮也会被移除\r\n    weibo.com##div[class^=\"Main_side\"]\r\n    ! 以下两条规则会修改左侧栏。\r\n    weibo.com##div[class^=\"Frame_side_\"]:style(width: 182px !important)\r\n    weibo.com##div[class^=\"Nav_main\"]:style(width: 182px !important)\r\n    ! 以下两条规则会修改主要内容区的左侧对齐。\r\n    weibo.com##div[class*=\"Frame_content\"]:style(margin-left: 2% !important)\r\n    ! 以下几条规则会修改微博内容区的宽度，包括主页和用户主页。\r\n    weibo.com##div[class^=\"Frame_main_\"]:style(width: 975px !important)\r\n    weibo.com##div[class^=\"Home_home\"]:style(width: 975px !important)\r\n    weibo.com##div[class^=\"Main_wrap\"]:style(width: 975px !important)\r\n    weibo.com##div[class^=\"Main_full\"]:style(width: 975px !important)\r\n    ! 修改用户主页版头图的高度，点击图片可看全图，可根据自身显示屏修改。\r\n    weibo.com##div[class^=\"woo-picture-main ProfileHeader_pic\"]:style(height: 100px !important)\r\n    ! 以下两条规则会修改信息流中微博视频和图片的显示大小。\r\n    weibo.com##div[class^=\"card-video_videoBox\"]:style(width: 75% !important; height: 75% !important)\r\n    weibo.com##div[class*=\"card-article_pic\"]:style(width: 60% !important; height: 60% !important)\r\n    ! 以下两条为调整信息流中图片的比例。\r\n    weibo.com##div[class^=\"woo-picture-main woo-picture-square\"]:style(width: 70% !important; height: 70% !important)\r\n    weibo.com##div[class=\"woo-picture-main woo-picture-square woo-picture-hover\"]:style(width: 180px !important; height: 180px !important)\r\n    ! 以下两条为调整信息流、转发评论列表的文字大小。\r\n    weibo.com##div[class=\"wbpro-list\"]:style(line-height: 23.5px !important; font-size: 14.5px !important)\r\n    weibo.com##div[class^=\"detail_wbtext_\"]:style(line-height: 26px !important; font-size: 15.5px !important)\r\n    ! 以下几条规则会修改微博搜索页的宽度，依次是移除右侧栏，调整位置和宽度，评论框长度。\r\n    s.weibo.com##div[class=\"main-side\"]\r\n    s.weibo.com##div[class=\"m-main\"]:style(margin-left: 2% !important)\r\n    s.weibo.com##div[class=\"main-full\"]:style(width: 975px !important)\r\n    s.weibo.com##textarea:style(width: 875px !important)\r\n\r\n![uBlock Origin Weibo](/images/uBlockOriginWeibo-1.png)\r\n\r\n","cover":"","link":"ublockoriginweibo.html","preview":"\u003cp\u003e用 uBlock Origin 调整微博 V7 显示效果。\u003c/p\u003e\n","title":"用 uBlock Origin 调整微博 V7 显示效果（2023-04-20 更新）"},{"content":"\r\n\r\n### 7-ZipPasswordExt 加密压缩包解压脚本\r\n\r\n今年年初的时候曾介绍过 [ExtractNow](extractnow.html) 这个能自动测试密码能否正常解压的小工具，但在实际使用中发现，ExtractNow 无法正常处理部分中文命名的文件，几个月后在小众软件见到介绍 [SmartZip](https://github.com/vvyoko/SmartZip) 这个类似功能工具的文章，但个人又用不上这么多功能，于是一时兴起，写了个简单的脚本给 Double Commander 调用。\r\n\r\n#### 脚本主要功能\r\n\r\n脚本的功能很简单，接收从 Double Commander 中传入的参数，调用 7z.exe 按密码库的顺序一个一个密码尝试解压传入的压缩包，直到以下情况发生：\r\n\r\n1. 文件成功解压。\r\n2. 密码尝试次数超过配置的密码总数（即密码库中无匹配密码），此时脚本会提示输入文件解压密码，输入后继续解压，但是需要注意，此时输入的密码并不会登记入密码库。\r\n\r\n#### 脚本内容\r\n\r\n    @echo off\r\n    chcp 65001\r\n    setlocal enabledelayedexpansion\r\n\r\n    ::7z.exe 的路径\r\n    set zipper=%~dp07z.exe\r\n\r\n    set tempfilelist=%1\r\n    set workingpath=%2\r\n\r\n    ::密码总数\r\n    set pwcount=10\r\n\r\n    ::密码库（每行一个）\r\n    set pw1=123456\r\n    set pw2=\r\n    set pw3=\r\n    set pw4=\r\n    set pw5=\r\n    set pw6=\r\n    set pw7=\r\n    set pw8=\r\n    set pw9=\r\n    set pw10=\r\n\r\n    set num=1\r\n    :CheckPassword\r\n    set pwtest=!pw%num%!\r\n    if \"%pwtest%\" == \"\" goto :NumADD\r\n    %zipper% t -p%pwtest% \"%tempfilelist%\"\r\n    if %errorlevel% == 0 goto :Right\r\n    cls\r\n\r\n    :NumADD\r\n    set /a num=%num%+1\r\n    if %num% LEQ %pwcount% goto :CheckPassword\r\n\r\n    set /p pwtest=未匹配到密码，可手工输入（回车直接退出）：\r\n    if %pwtest%==\"\" Exit\r\n\r\n    :Right\r\n    %zipper% x -p%pwtest% \"%tempfilelist%\" -o\"%workingpath%\" -y\r\n    exit\r\n\r\n#### Double Commander 配置\r\n\r\n由于 Double Commander 的工具栏按钮支持调用各种各样的工具，于是 7-ZipPasswordExt 我也用工具栏按钮配置。\r\n\r\n![7-ZipPasswordExt按钮配置](/images/7-ZipPasswordExt1.png)\r\n\r\n- Icon：工具栏按钮图标。\r\n- Tooltips：工具栏按钮文本提示。\r\n- Command：命令，这里写 7-ZipPasswordExt 脚本的路径。\r\n- Parameters：参数，根据自身需要填写，比如：\r\n    - `%ps %Ds\\%os` 解压到压缩文件的同名文件夹。\r\n    - `%ps %Ds` 解压到当前文件夹。\r\n- Start path：起始路径。\r\n\r\n#### 实际效果\r\n\r\n![7-ZipPasswordExt 实际效果](/images/7-ZipPasswordExt2.gif)\r\n\r\n\r\n","cover":"","link":"7-zippasswordext.html","preview":"\u003cp\u003e一个供 Double Commander 调用的加密压缩包解压脚本。\u003c/p\u003e\n","title":"7-ZipPasswordExt 加密压缩包解压脚本"},{"content":"\r\n\r\n### 用 AutoHotkey 实现 Scrcpy 自动运行\r\n\r\n在工作中经常需要使用微信回复同事或是合作方，而手机的输入效率很低，所以我时长使用 Scrcpy 将我的 Android 手机投屏到电脑上后，使用键盘输入（公司的电脑设备是内网，不支持登录微信，也无法使用 Wifi 连接 Scrcpy）。但是由于不时需要离开座位（比如开会，或是讨论），离开后再回到座位上就需要重新手工打开 Scrcpy，非常麻烦，于是趁着最近将 AutoHotkey v1 脚本转换为 AutoHotkey v2 脚本的同时，参考之前实现的 Dark-Light-Switch 的逻辑，用 AutoHotkey v2 实现了个自动启动 Scrcpy 的功能，具体如下。\r\n\r\n    ; Scrcpy 自动运行脚本\r\n    ; 每 10 秒检查一次当前设备是否有 Scrcpy 运行，如有，则无动作，如无，则启动 Scrcpy。\r\n    #SingleInstance force\r\n    A_IconTip := \"Auto-Scrcpy\"\r\n    SetTimer ScrcpySwitch, 10000\r\n    ScrcpySwitch()\r\n    {\r\n    \tIf (ProcessExist(\"scrcpy.exe\") != 0)\r\n    \t{\r\n    \t\tReturn\r\n    \t} Else {\r\n        \tRun A_ComSpec \" /c D:\\1-Program\\0-CommandLineTools\\Scrcpy\\scrcpy.exe --push-target=/sdcard/Files/Scrcpy/ --shortcut-mod=rctrl\", ,\"Hide\"\r\n    \t}\r\n    }\r\n\r\n### 补充说明\r\n\r\n- `SetTimer`一行最后是判断的间隔时长 10000 代表 一万毫秒，即 10 秒。\r\n- 如果目前已经有 Scrcpy.exe 在运行，这无动作，等待 10 秒再执行第二次判断；如果目前没有 Scrcpy.exe 在运行，则会按命令启动 Scrcpy.exe。\r\n- Scrcpy 运行的具体参数可以在`Run`行进行修改。\r\n","cover":"","link":"ahk-auto-scrcpy.html","preview":"\u003cp\u003e一个 AutoHotkey v2 的实例，用于持续运行 Scrcpy。\u003c/p\u003e\n","title":"用 AutoHotkey 实现 Scrcpy 自动运行"},{"content":"\r\n\r\n### cgVim 简单介绍\r\n\r\n大约是在 2012 年，我开始考虑手上使用的软件的版权问题后，就将默认使用的编辑器更改为了 gvim，但是 gvim 本身无法很方便的替代系统默认的记事本（Notepad），只能一个个文件类型选择默认打开方式。\r\n\r\n后来在网上找到一个网友用 AutoHotkey 写的 cgVim，功能是通过 **映像劫持** 实现所有通过 Notepad 打开的文件都自动通过 gvim 打开。\r\n\r\n再到后来，在 GitHub 上发现了 cgVim 的源码：[likaci/cgvim](https://github.com/likaci/cgvim)，这位叫 likaci 的用户可能是最初的作者？（未联系确认过）。\r\n\r\n刚好最近在将自用的 AutoHotkey v1.1 的脚本逐步更改为 AutoHotkey v2 的脚本，于是就把 cgVim 也更新了下，具体的更新内容可见 [JPLiu/cgvim](https://github.com/JPLiu/cgvim) 的 ReadMe。\r\n\r\n### 使用方法\r\n\r\n1、下载 cgVim Configure.exe 和 cgvim.exe 两个文件，并将两个文件放入 gvim.exe 所在的路径下。\r\n\r\n2、运行 cgVim Configure.exe，程序会自动判断当前的默认编辑器，如果当前 Notepad 有映像劫持，就会恢复为 Notepad，如果当前没有被映像劫持，就会将 Notepad 映像挟持到 gvim。\r\n    - 运行 cgVim Configure.exe 需要管理员权限。\r\n    - 映像劫持很多时候会被安全软件提示，比如我用的火绒就会提示我有程序在操作映像劫持。\r\n\r\n![cgVim](/images/AHK-cgVim1.gif)\r\n","cover":"","link":"ahk-cgvim.html","preview":"\u003cp\u003e更新了 cgVim，现在是基于 AutoHotkey v2 的版本，顺带简单介绍一下。\u003c/p\u003e\n","title":"cgVim 简单介绍"},{"content":"\r\n\r\n### 关于 uLister 和 Viewer Technology 的一条小记录\r\n\r\n最近不时会用到云桌面，普通用户只有运行程序的权限，没有自行安装软件的权限，尝试把常用软件全部搬至云桌面后，结果如下：\r\n\r\n- AutoHotkey，PDFtk，PhotoDemon 之类的软件基本正常。\r\n- AnyTXT Searcher 和 Everything 之类需要权限的软件完全无法正常使用。\r\n- Double Commander 自身使用正常，但是 uLister 查看插件无法使用。\r\n\r\n前面两点符合预期，但第三点的 uLister 无法正常使用属实是预料之外。\r\n\r\n测试后发现，在云桌面上，使用 x64 的 Double Commander 配合 x64 的 uLister 和 x64 的 Oracle Viewer Technology redist，可以正常加载查看；而在使用 x86 的上述组合时，则无法加载，反应过来可能是依赖的问题。\r\n\r\n在网上查了下 Viewer Technology 的相关信息，发现它需要 Visual C++ 2013，而云桌面上，只有配置了 x64 版本的 Visual C++ 2013，并未安装 x86 Visual C++ 2013，但是，云桌面是普通用户无法自行安装。\r\n\r\n同时，搜索过程过程中发现在 Total Commander 的官方论坛上的一个讨论帖 [Trouble with uLister and Oracle files](https://www.ghisler.ch/board/viewtopic.php?t=51058)，有人回帖了整个 uLister 的安装步骤，里面提到：\r\n\r\n![Post Screenshot](/images/uListersViewermsvc-1.png)\r\n\r\n\u003e **or at least you need the VC++ DLLs (msvcr120.dll; msvcp120.dll) inside the uLister plugin folder**\r\n\r\n于是去另外一台机器上将 msvcr120.dll，msvcp120.dll 拷贝出来（提前确认了一下，拷贝的是 x86 的 dll）然后做了下测试：\r\n\r\n- 将上述 dll 复制到 uLister 的文件夹下，重启 Double Commander，仍然无法正常加载。\r\n- 将上述 dll 复制到 uLister 的文件夹的 redist 文件夹下，重启 Double Commander，可以正常加载，问题解决。\r\n","cover":"","link":"ulistersviewermsvc.html","preview":"\u003cp\u003e近期遇到的 uLister 和 Viewer Technology 的一个小问题解决的记录，以免遗忘。\u003c/p\u003e\n","title":"关于 uLister 和 Viewer Technology 的一条小记录"},{"content":"\r\n\r\n### Lenovo Legion Toolkit 简单介绍\r\n\r\n\u003e 本文发出后 Lenovo Legion Toolkit 的第一个更新版本就限制了不兼容设备使用我是没想到的，有需要的不兼容设备用户可以试试在 GitHub Releases 里面翻下 2.6.2 这个版本。\r\n\r\n去年更换自用笔记本后，曾经发过一篇文章 [小新 Pro 14 到手之后的一些小调整](xiaoxinp14.html)，提过使用 Lenovo Ventage 来设置充电阈值。但是 Lenovo Ventage 安装之后，会有较多的进程在后台，所以我一直在寻找可以其他设置充电阈值的替代品软件，最后在 GitHub 上发现了 Lenovo Legion Toolkit。\r\n\r\n按照开发者在主页上面的说明，Lenovo Legion Toolkit 是为 Lenovo Legion 笔记本电脑创建的实用程序，允许更改仅在 Lenovo Vantage 或 Legion Zone 中提供的部分功能。如果笔记本电脑不是 Lenovo Legion 或 Ideapad Gaming 产品线一部分，这个软件不适用。\r\n\r\n- GitHub 主页：[Lenovo Legion Toolkit][url-lenovolegiontoolkit-01]\r\n- GitHub Releases 下载：[Lenovo Legion Toolkit 下载][url-lenovolegiontoolkit-02-releases]\r\n\r\n\u003e Lenovo Legion Toolkit 需要 .Net 6 才能运行，安装时会自行下载，所以，如果本地没有 .Net 6，安装 Lenovo Legion Toolkit 时需要联网。\r\n\r\n#### 界面说明\r\n\r\n按开发者的说法，程序支持的是 Lenovo Legion（拯救者）和 IdeaPad Gaming 产品线的产品，不出所料，小新 Pro 14 安装后一运行就是不支持设备的提示：\r\n\r\n![Lenovo Legion Toolkit 打开提示](/images/LenovoLegionToolkit-1.png)\r\n\r\n选择继续之后，会进入以下界面，其中：\r\n\r\n| 选项          | 说明                                                                                                        |\r\n|---------------|-------------------------------------------------------------------------------------------------------------|\r\n| Battery Mode  | 电池模式，默认是 Normal，选成 Conservation 即为保护模式，对应 Lenovo Ventage 的充电阈值设置（55% 至 60%）。 |\r\n| Always On USB | 笔记本本身关闭或者休眠时，是否支持给其他 USB 设备供电。                                                     |\r\n| Fn Lock       | Fn 锁，用于设置使用的 F1 至 F12 功能时，是否需要同时按下 Fn 键来触发。                                      |\r\n| Flip To Start | 是否启用翻屏启动功能。                                                                                      |\r\n\r\n![Lenovo Legion Toolkit DashBoard](/images/LenovoLegionToolkit-2.png)\r\n\r\n除 DashBoard 页面之外，在 Setting 页面中也有几个比较有用的选项\r\n\r\n| 选项                   | 说明                                                 |\r\n|------------------------|------------------------------------------------------|\r\n| Disable Lenove Ventage | 是否禁用已安装的 Lenovo Ventage                      |\r\n| Disable Legion Zone    | 是否禁用已安装的 Legion Zone                         |\r\n| Disable Lenovo Hotkeys | 是否禁用 Lenove 默认的热键，比如 Fn + Q 切换性能模式 |\r\n\r\nSetting 页面的其他选项对我来说没有太大用，这里就不说明了，反正程序英文说明也写得很清楚。\r\n\r\n![Lenovo Legion Toolkit Setting](/images/LenovoLegionToolkit-3.png)\r\n\r\n#### 其它补充\r\n\r\n除了上面的 DashBoard 和 Setting 页面之外，在 Download 页面可以查询和下载当前设备是否有新发布的 BIOS 等资料，下载完之后需要手工安装。\r\n\r\n[url-lenovolegiontoolkit-01]:https://github.com/BartoszCichecki/LenovoLegionToolkit\r\n[url-lenovolegiontoolkit-02-releases]:https://github.com/BartoszCichecki/LenovoLegionToolkit/releases\r\n\r\n","cover":"","link":"lenovolegiontoolkit.html","preview":"\u003cp\u003e简单介绍 Lenovo Ventage 的一个替代品，Lenovo Legion Toolkit。\u003c/p\u003e\n","title":"Lenovo Legion Toolkit 简单介绍"},{"content":"\r\n\r\n### Aria2AHK 简单介绍\r\n\r\n\u003e 由于后续脚本更新，本文内容可能与脚本最新情况存在差异。\r\n\r\n\u003e 2023.02.12 更新到 AutoHotkey v2，同时增加了 Aria2Torrent，用于关联 Torrent 后实现打开 Torrent 自动添加任务。\r\n\r\n\u003e 2022.08.20 简单更新，新增任务修改为使用 WebHttpRequest 实现。\r\n\r\n\u003e 2024.02.19 修改 GitHub 路径，说明以 GitHub 为准。\r\n\r\n这是一个出现纯属偶然，后续维护完全没计划的 AutoHotkey 脚本。\r\n\r\n切换到使用 Download with Aria2（通过 Aria2 下载） 扩展调用 Aria2 后，我一度回到使用 vbs 文件开机启动 Aria2 的方式，但由于默认下载路径在内存盘上，偶尔下载的文件（如 Windows 镜像），添加后由于文件过大无法正常下载，需要手工去启动存至另一路径的 Aria2，很不方便，于是昨晚趁着宿舍停水，拿 AutoHotkey 下写了个非常简单的 Aria2 托盘，这就是这里的 Aria2AHK。\r\n\r\n+ GitHub 地址：[Aria2AHK](https://github.com/JPLiu/TestFiles/tree/main/Aria2/Aria2AHK)\r\n\r\n![Aria2AHK 托盘](/images/Aria2AHK-1.png)\r\n\r\n\r\n#### 大体功能\r\n\r\n| 名称                 | 功能                              | 备注                                                              |\r\n|----------------------|-----------------------------------|-------------------------------------------------------------------|\r\n| 打开 Web 前端        | 用浏览器打开本地的 Web 前端       | 路径在 ini 文件中设置                                             |\r\n| 添加下载任务         | 添加下载任务                      |                                                                   |\r\n| 添加下载任务（代理） | 同 添加下载任务，差异是会使用代理 | 代理在 ini 文件中设置                                             |\r\n| 默认下载路径         | 修改 Aria2 默认的下载路径         | 默认路径在 ini 文件中设置，最多支持三个\u003cbr\u003e选择后会自动重启 Aria2 |\r\n| 更新 BT Tracker      | 更新 ini 文件中 BT Tracker        | 更新后会重启 Aria2                                                |\r\n| 重启 Aria2           | 重启 Aria2                        |                                                                   |\r\n| 退出                 | 退出 Aria2AHK                     | 会同时退出 Aria2                                                  |\r\n\r\n主要的设置的说明我都写在了 Aria2AHK.ini 内\r\n\r\n![Aria2AHK.ini](/images/Aria2AHK-2.png)\r\n\r\n和之前几次 BT Tracker 直接更新到 Aria2 的 conf 文件不同，这次的 BT Tracker 参数保存在 Aria2AHK.ini 内，Aria2AHK 在运行 Aria2 时，会自动加载 Aria2AHK.ini 中保存的 Tracker。\r\n\r\n\u003e Aria2AHK 的图标是我从 Download with Aria2（通过 Aria2 下载） 中翻出来的，如果有版权问题可以更换。\r\n","cover":"","link":"aria2ahk.html","preview":"\u003cp\u003eAria2AHK，一个 Aria2 的托盘程序\u003c/p\u003e\n","title":"Aria2AHK 简单介绍"},{"content":"\r\n\r\n### 关于划词翻译扩展的自定义词典 Key 功能\r\n\r\n由于不时需要阅读外文网站，我的浏览器中一直装有划词翻译扩展（目前使用的是 [沙拉查词][url-saladict-01]）。\r\n\r\n我试用过 [沙拉查词][url-saladict-01] 和 [划词翻译][url-hcfy-01]，两者都支持国内外的多个翻译服务，两个扩展都能满足我的要求，最后我选择了 [沙拉查词][url-saladict-01] 并一直用到现在。\r\n\r\n使用 [沙拉查词][url-saladict-01] 过程中，我一般是同时开 **有道** 和 **Google** 两个翻译，2022年2月，持续出现过有道翻译只显示半句翻译的问题，后来发现是 上一看原因是[有道的公用 Key 的到期][url-saladict-02-issue]了，自己申请 Key 即可解决，于是对当时 [沙拉查词][url-saladict-01] 和 [划词翻译][url-hcfy-01] 支持的服务做了下汇总。\r\n\r\n|            | 自定义支持情况                       | 免费服务                  | 备注                  |\r\n|------------|--------------------------------------|---------------------------|-----------------------|\r\n| 百度翻译   | 沙拉查词：支持 \u003cbr\u003e 划词翻译：支持   | 有，高级版每月 200 万字符 | 标准版完全免费        |\r\n| 彩云小译   | 沙拉查词：支持 \u003cbr\u003e 划词翻译：支持   | 有，每月 100 万字符       |                       |\r\n| 搜狗翻译   | 沙拉查词：支持 \u003cbr\u003e 划词翻译：支持   | ---                       | 已关停                |\r\n| 腾讯翻译君 | 沙拉查词：支持 \u003cbr\u003e 划词翻译：支持   | 有，每月 500 万字符       |                       |\r\n| 有道翻译   | 沙拉查词：支持 \u003cbr\u003e 划词翻译：支持   | 无                        | 50 元体验金，用完收费 |\r\n| DeepL      | 沙拉查词：不支持 \u003cbr\u003e 划词翻译：支持 | 有，每月 50 万字符        |                       |\r\n| 阿里翻译   | 沙拉查词：不支持 \u003cbr\u003e 划词翻译：支持 | 有，每月 100 万字符       |                       |\r\n\r\n\u003e 注：\r\n\u003e 1. 上表所指的支持，是指支持自定义配置账号，并不是指应用只支持这几个翻译服务，比如 Google 翻译两者均支持。\r\n\r\n收费的 有道翻译 排除；DeepL 和 阿里翻译 考虑到通用性也排除；至于百度翻译，个人不喜欢百度这家公司（不喜欢到只要有替代品，百度软件都不用的那种），也排除。\r\n\r\n剩下的 彩云小译 和 腾讯翻译君，试用感受上 彩云小译 的结果返回会慢半拍，所以我目前在用 **腾讯翻译家** + **Google** 的组合。\r\n\r\n至于申请的流程，[划词翻译官方文档][url-hcfy-02] 上写得很清楚，参照操作即可。\r\n\r\n[url-saladict-01]:https://addons.mozilla.org/zh-CN/firefox/addon/ext-saladict/\r\n[url-saladict-02-issue]:https://github.com/crimx/ext-saladict/issues/1648\r\n[url-hcfy-01]:https://addons.mozilla.org/zh-CN/firefox/addon/hcfy/\r\n[url-hcfy-02]:https://hcfy.app/docs/services/deepl\r\n\r\n","cover":"","link":"word-translation-ext.html","preview":"\u003cp\u003e简单说下 沙拉查词 和 划词翻译 两个扩展的自定义翻译 Key 的功能，支持的几个翻译服务的差异。\u003c/p\u003e\n","title":"关于划词翻译扩展的自定义翻译 Key 功能"},{"content":"\r\n\r\n### Firefox 扩展 Download with Aria2（通过 Aria2 下载）\r\n\r\n[Download with Aria2][url-download-with-aria2-01]（中文名：通过 Aria2 下载，下文按中文名字描述）是最近发现的 Chrome / Firefox 浏览器调用 Aria2 的扩展，功能类似于之前在 [Firefox 扩展 Aria2下载器集成组件](aria2-integration.html) 一文中介绍过的 Firefox 扩展 [Aria2 下载器集成组件][url-aria2-integration-01]，两者对比如下：\r\n\r\n|                | [Aria2 下载器集成组件][url-aria2-integration-01] | [通过 Aria2 下载][url-download-with-aria2-01]                                                      |\r\n|----------------|--------------------------------------------------|----------------------------------------------------------------------------------------------------|\r\n| 更新状态       | 停更，最后更新是2019年                           | 新扩展，更新中                                                                                     |\r\n| 跨浏览器支持   | 只支持 Firefox                                   | 按 [Github][url-download-with-aria2-02] 上的说法，\u003cbr\u003e 支持 Chrome / Firefox，但未上架 Chrome 商店 |\r\n| 扩展设置备份   | 不支持                                           | 支持导入导出                                                                                       |\r\n| Aria2 GUI      | 内置 AriaNG，但版本略旧                          | 扩展自带 GUI \u003cbr\u003e 但自带 GUI 无法新建 BT 下载，需借用其他 Web GUI                                  |\r\n| RPC 支持       | 支持多套 RPC                                     | 支持多套 RPC                                                                                       |\r\n| 接管浏览器下载 | 支持，触发下载时可选择不同的 RPC                 | 支持，但触发下载是会自动使用默认的 RPC                                                             |\r\n| 排除站点接管   | 支持                                             | 支持                                                                                               |\r\n| 代理支持       | 可通过多套 RPC 间接支持                          | 支持对特定站点自动添加代理\r\n\r\n最近实在受不了 uGet Download Manager 在修改分辨率后就奔溃的问题，尝试用回 Aria2 + 浏览器扩展 接管下载工作，在这两个扩展中，最终选择了 [通过 Aria2 下载][url-download-with-aria2-01]。\r\n\r\n最后按照惯例，放一张 通过 Aria2 下载 的图片。\r\n\r\n![通过 Aria2 下载 扩展界面](/images/Download-with-Aria2-01.png)\r\n\r\n[url-aria2-integration-01]:https://addons.mozilla.org/zh-CN/firefox/addon/aria2-integration/\r\n[url-aria2-integration-02]:https://github.com/RossWang/Aria2-Integration/\r\n[url-download-with-aria2-01]:https://addons.mozilla.org/zh-CN/firefox/addon/download-with-aria2/\r\n[url-download-with-aria2-02]:https://github.com/jc3213/download_with_aria2\r\n\r\n\r\n","cover":"","link":"download-with-aria2.html","preview":"\u003cp\u003e一个 Firefox/Chrome 调用 Aria2 进行下载的 扩展。\u003c/p\u003e\n","title":"Firefox 扩展 Download with Aria2（通过 Aria2 下载）"},{"content":"\r\n\r\n### ExtractNow 简单介绍\r\n\r\n\u003e 2023.02.13 此软件在处理中文压缩包时，可能有问题，不建议使用。\r\n\r\n最近工作不时遇到加密的压缩包，需要尝试数个常用的解压密码后才能成功解压，于是干脆看看有没有能自动匹配密码的小工具，最好找到了 ExtractNow，这里简单介绍一下。\r\n\r\n#### 下载安装\r\n\r\n- 官网：[ExtractNow Home](https://www.extractnow.com/#/home)\r\n\t- ExtractNow 除了安装版之外，也有便携版，便携版需要在 [ExtractNow Support](https://www.extractnow.com/#/support) 页面下载。\r\n\r\n#### 组件更新\r\n\r\nExtractNow 使用 7-Zip 的 7z.dll 和 WinRAR 的 unrar.dll 来进行解压，但由于 ExtractNow 最后一次更新是 2017 年，自带的 dll 比较旧，如有需要，可以手动更新。\r\n\r\n- 7-Zip：[7-Zip Download](https://www.7-zip.org/download.html)\r\n\t- 7z.dll 可在上述页面中，下载最新的 7-Zip 安装包后解压提取。\r\n- WinRAR：[WinRAR Extras](https://www.rarlab.com/rar_add.htm)\r\n\t- unrar.dll 可在上述页面中，下载 [UnRAR.dll](https://www.rarlab.com/rar/UnRARDLL.exe) 解压提取。\r\n\r\n上述两个 dll 文件更新，只需要将新的 dll 放入 ExtractNow 文件夹内即可。\r\n\r\n#### 使用技巧\r\n\r\n##### 密码本设置\r\n\r\n- 新建一个文本文件用于存放密码，比如 password.list 。\r\n- 打开 ExtractNow 的设置，在 密码 页签，勾选 `使用一个密码列表文件来解压压缩包` 和 `尝试直至密码穷尽`，并设置好上一步的密码文件的列表的路径，文件路径支持相对路径。\r\n- 设置好后，当添加加密文件时，ExtractNow 会自动匹配密码直到解压成功或者密码全部错误。\r\n\r\n![ExtractNow 密码设置](/images/ExtractNow-1.png)\r\n\r\n##### 命令行调用\r\n\r\n在我寻找自动匹配密码的小工具的过程中，除了 ExtractNow，还尝试过 [UZIP](https://www.yuque.com/farkaway/uzip)，也支持密码本功能，但由于后者不支持命令行调用，最后我选择 ExtractNow。\r\n\r\n- 参考：[ExtractNow Documentation - Commandline](https://www.extractnow.com/#/documentation#cmdline)\r\n\r\n- 解压到当前文件夹：\r\n\t- `extractnow.exe path1 path2.. /target \"{ArchiveFolder}\\\"`\r\n- 解压到压缩文件同名文件夹：\r\n\t- `extractnow.exe path1 path2.. /target \"{ArchiveFolder}\\{ArchiveName}\\\"`\r\n- `path1 path2..`：指压缩包路径，支持多个。\r\n","cover":"","link":"extractnow.html","preview":"\u003cp\u003e一款解压的小工具，支持密码本。\u003c/p\u003e\n","title":"ExtractNow 简单介绍"},{"content":"\r\n\r\n### DocFetcher 简单介绍\r\n\r\n在[我的软件清单](mylist.html)一文中，我提到过 [AnyTXT Searcher](https://anytxt.net/) 这个全文检索工具，但是最近发现后者的预览框在使用多次之后，需要到微信公众号获取识别码之后才能继续直接从预览框内复制，而且输入的识别码也不是永久生效，我不大喜欢这种方式，于是希望寻找另一个全文检索工具，最后尝试了 DocFetcher。\r\n\r\n#### 下载与安装\r\n\r\n+ DocFetcher：[官网下载页](http://docfetcher.sourceforge.net/zh/download.html)\r\n\t- 有安装包，也有不需要安装的便携版，我个人用的是便携版。\r\n\r\n+ Java：[官网](https://java.com/zh-CN/)\r\n\t- DocFetcher 需要 Java 1.7 以上才能正常运行。\r\n\t- 如果觉得官网下载 Java 安装比较麻烦的话，也可以尝试 [All in One Runtimes](https://www.sereby.org/site/All%20in%20One%20Runtimes\u0026lang=en) 运行库，这个库包含了 Java，我实测是可以正常使用 DocFetcher 的。\r\n\r\n#### 使用技巧\r\n\r\nDocFetcher 打开之后的界面如下：\r\n\r\n![DocFetcher 界面](/images/DocFetcher-1.png)\r\n\r\n- 为了实现快速搜索，DocFetcher 和 AnyTXT Searcher 类似，需要进行文件的索引，但是需要手工添加索引范围，上述图片的左下角的`搜索范围`框内点击右键，之后选择`创建索引→文件夹`，之后选择可以需要添加索引的范围。\r\n\r\n- 之后 DocFetcher 会弹出`索引队列`框，根据实际需要配置索引条件，点击运行后 DocFetcher 会开始索引所选范围下的文件。需要注意，如果文件比较多的话初次索引会比较耗时。\r\n\r\n- 此外，在 DocFetcher 目录下的 `misc` 文件夹下，有多个 DocFetcher 的程序，如果觉得默认程序索引很慢，而自己机器又有多余的资源的，可以选择不同的版本，比如`DocFetcher-4096_64-bit-Java.exe`就是 64 位，运行时占用 4G 左右内存的版本。使用方法是把对应版本复制到上一级的目录之后运行。\r\n\r\n- 和 AnyTXT Searcher 不同，DocFetcher 默认并不会常驻后台自动索引，如果需要更新索引的，需要自己手工进行更新操作，或者自行设置开机启动 DocFetcher 目录下的 `docfetcher-daemon-windows.exe`，该程序在后台运行时，会自动索引索引范围内变动的文件。\r\n\r\n- DocFetcher 的帮助文件比较详细介绍了其搜索语法，建议抽时间好好看下。\r\n\r\n索引完成之后搜索效果如下：\r\n\r\n![DocFetcher 搜索结果](/images/DocFetcher-2.png)\r\n","cover":"","link":"docfetcher.html","preview":"\u003cp\u003e介绍一下文件内容搜索工具 DocFetcher\u003c/p\u003e\n","title":"DocFetcher 简单介绍"},{"content":"\r\n\r\n### chrlauncher 简单介绍\r\n\r\n作为一个普通的浏览器用户，我对浏览器有几个简单的要求：\r\n\r\n- 浏览器本身不能有广告。\r\n- 浏览器必须至少支持 Windows 端和 Android。\r\n- Windows 端必须支持完全便携，支持 uBlock Origin 等扩展。\r\n- Android 端必须支持去广告功能（不强制要求一定是 uBlock Origin）。\r\n- Windows 端和 Android 端之间必须有能实现书签同步的方法。\r\n- 在满足以上要求的情况下，最好开源（这条不强制要求）。\r\n\r\n受限于 Firefox 的兼容性问题，最近又一次开始尝试切换到 Chromium，在满足上述条件我大致上确定了下面两个方案：\r\n\r\n- 方案一：Vivaldi Browser （Windows 端和 Android 端）。\r\n- 方案二：Chromium （Windows 端，使用 chrlauncher 实现便携化）+ Kiwi Browser （Android 端） + floccus （同步扩展）。\r\n\r\n本来最简单的方案应该是方案一，但是实际测试之后发现 Vivaldi Browser 的 Windows 端在打开多个页面的时候性能非常差，只能放弃，转而尝试方案二，这里主要说下使用 chrlauncher 制作 Chromium 便携版的经验，关于和 Android 端的 Kiwi Browser 同步，最后会附上我参考的页面。\r\n\r\n#### 使用 chrlauncher 制作 Chromium 的便携版\r\n\r\n大体上使用 chrlauncher 制作 Chromium 的便携版的步骤如下：\r\n\r\nchrlauncher 下载地址：[GitHub](https://github.com/henrypp/chrlauncher/releases)\r\n\r\n- 下载 chrlauncher 并解压。\r\n- 打开 chrlauncher.exe（32 位还是 64 位可以根据系统选择） 所在目录下的 chrlauncher.ini，找到 `ChromiumType=` 开头的那一行，指定需要使用的 Chromium 版本，如果不打算更换的话，也可以保持默认。\r\n- 运行 chrlauncher.exe，程序会自动下载指定的 Chromium 版本，由于下载地址都托管在国外的服务器，可能需要使用代理，配置的方法是在 chrlauncher.ini 中，找到最后的 `#Proxy=` 开头的那一行，删除最前面的 `#` 号，并补上代理信息。\r\n- 下载完成之后，chrlauncher.exe 会自动解压 Chromium 并启动 Chromium，此时 chrlauncher.exe 所在目录下文件应该如下：\r\n\t- bin 文件夹：Chromium 程序所在的文件夹。\r\n\t- profile 文件夹：Chromium 的配置文件，只要把整个 chrlauncher 文件夹一起打包，就可以简单带走配置。\r\n\r\n![chrlauncher 文件夹，lnk 快捷方式是我自己复制的](/images/chrlauncher-1.png)\r\n\r\n#### 关于 chrlauncher 的一些补充说明。\r\n\r\n- Windows 10 中设置为默认浏览器。\r\n\t- chrlauncher.exe 所在目录下有个 SetDefaultBrowser.bat 脚本，使用管理员运行\r\n\t- 在 Windows 的设置→应用→默认应用→Web 浏览器 一项中，会出现一个 chrlauncher 的选项，选中即可。\r\n\r\n- 便携版的 Chromium 固定到 Windows 10 任务栏。\r\n\t- 将 chrlauncher 文件夹下的 bin 文件夹内的 chrome.exe 固定到任务栏（注意不要双击打开）。\r\n\t- 复制 chrlauncher.ini 中 `ChromiumCommandLine=` 一行的参数，比如：\r\n\t\r\n\t\t\t--flag-switches-begin --user-data-dir=..\\profile --no-default-browser-check --allow-outdated-plugins --disable-logging --disable-breakpad --flag-switches-end\r\n\r\n\t- 对着任务栏固定的**未启动的 Chromium 图标**，按下 `Shift + 鼠标右键`，弹出菜单中选择属性。\r\n\t- 在 Chromium 图标属性的窗口的**目标**框内的 chrome.exe 的路径后，输入 `空格＋复制的 ChromiumCommandLine 参数`，保存，之后可以通过点击任务栏的 Chromium 图标，打开便携版的 Chromium。\r\n\t\r\n![Chromium 任务栏图标属性](/images/chrlauncher-2.png)\r\n\r\n#### 关于使用 floccus 实现 Android 端和 Windows 端同步书签。\r\n\r\n+ 具体步骤可以参考：[困扰我多年的“跨浏览器书签同步”问题终于解决了](https://juejin.cn/post/6909814992120315911)\r\n+ 需要注意，有些本地地址的书签不会被同步，比如 Aria2 的本地前端。\r\n\r\n希望这一次真的能成功切换到 Chromium……\r\n","cover":"","link":"chrlauncher.html","preview":"\u003cp\u003e简单说一下用 chrlauncher 制作 Chromium 浏览器便携版的经验。\u003c/p\u003e\n","title":"chrlauncher 简单介绍"},{"content":"\r\n\r\n### 自制的 uBlock Origin 的网址清理规则\r\n\r\n\u003e 2023-12-02 更新规则地址。\r\n\r\nFirefox 和 Chrome 上有一个名为 [ClearUrls](https://addons.mozilla.org/en-US/firefox/addon/clearurls/) 的扩展，功能是清理网址上的跟踪参数，举个例子，在淘宝天猫上搜索商品，打开之后网址可能是下面这个样子的：\r\n\r\n\thttps://detail.tmall.com/item.htm?spm=a1z10.3-b-s.w4011-18400927085.12.3e3e5920adKbOH\u0026id=640835814817\u0026rn=adf30abc188214603d72268f53824350\u0026abbucket=9\r\n\r\n而安装了 ClearUrls 扩展之后，网址会被清理成下面这个样子：\r\n\r\n\thttps://detail.tmall.com/item.htm?id=640835814817\r\n\r\n但是 ClearUrls 这个扩展有个无法解决的问题，支持的国内网站较少（比如百度的页面就不支持）且无法简单地自定义规则，最近看到 uBlock Origin 的内置规则上增加了 AdGuard URL Tracking Protection 规则清单，用到的 `removeparam=` 语法的功能和 ClearUrls 相类似，于是干脆把 ClearUrls 内置的规则中我自己会用到的部分，已经一些原本在 ClearUrls 上没有的但是我常用的网站的规则用 uBlock Origin 的规则写一遍：\r\n\r\n**规则 GitHub 地址**：\r\n\r\n- [Liu's-Clear-List](https://raw.githubusercontent.com/JPLiu/TestFiles/main/Browser/uBlock-Origin/Liu\\'s-Clear-List.list)\r\n\r\n目前支持淘宝，阿里巴巴，百度，天猫，小米有品等站点。\r\n\r\n#### 使用 uBlock Origin 和 ClearUrls 的差异\r\n\r\n+ uBlock Origin 和 ClearUrls 的生效范围不同。\r\n\r\nuBlock Origin 只支持清理当前访问的网页的地址（即地址栏的地址），ClearUrls 除当前访问的网页的地址，也支持清理当前访问网页内部所有链接的链接。\r\n\r\n+ uBlock Origin 和 ClearUrls 的规则处理方式不同。\r\n\r\nuBlock Origin 在哔哩哔哩上第一次打开一个视频时，网址上的 `spm` 参数会被清理，但是之后点击视频页面右方的视频推荐中的另一个视频，新的视频的会在当前页加载，此时网址上的 `spm` 参数不会被清除，而 ClearUrls 因为会清理当前访问网页内部所有链接的链接，页面上加载的链接就没有 `spm` 参数。\r\n\r\n![uBlock Origin规则](/images/uBlockOriginClearUrls-1.png)\r\n","cover":"","link":"ublockoriginclearurls.html","preview":"\u003cp\u003e通过 uBlock Origin 实现类似 ClearUrls 扩展的网址清理功能。\u003c/p\u003e\n","title":"自制的 uBlock Origin 的网址清理规则"},{"content":"\r\n\r\n### 用 AutoHotkey 实现自动切换 Windows 的深色主题\r\n\r\n起因是我在小众软件的官方论坛看到了 [Windows无需额外下载软件深色主题切换](https://meta.appinn.net/t/topic/24884) 这个帖子，帖子里面内容提到 Windows 10 控制系统是否使用深色主题是根据注册表中 `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize`下的 `AppsUseLightTheme` 的值决定的，于是心血来潮尝试用 AutoHotkey 实现简单的自动切换，具体代码如下。\r\n\r\n\r\n\t#Persistent\r\n\t#SingleInstance force\r\n\t\r\n\tSetTimer, ModeSwitch, 1800000\r\n\t\r\n\tModeSwitch:\r\n\tFormatTime, TimeToMeet,,HHmm\r\n\tIf TimeToMeet between 0800 and 1945\r\n\t{\r\n\t\tRegWrite, REG_DWORD, HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize, AppsUseLightTheme, 1\r\n\t} Else {\r\n\t\tRegWrite, REG_DWORD, HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize, AppsUseLightTheme, 0\r\n\t}\r\n\tReturn\r\n\r\n简单说明一下：\r\n\r\n+ **SetTimer** 一行中的 1800000 是多长时间触发一次判断，1800000 代表 1800 秒，也就是半个小时。\r\n\r\n+ **If TimeToMeet** 一行的 `0800 and 1945` 是指非暗色主题的生效时间，也就是上午八点至晚上七点四十五分之间，不使用暗色主题。\r\n\r\n+ 由于每半个小时才判断一次，所以并不一定会在晚上七点四十五分切换，常驻后台理论上最晚的时间是晚上八点十五分会切换到暗色主题，对我来说可以接受，有需要的话可以自行调整判断间隔。\r\n","cover":"","link":"ahk-dark-light-switch.html","preview":"\u003cp\u003e用 AutoHotkey 实现自动切换 Windows 的深色主题\u003c/p\u003e\n","title":"用 AutoHotkey 实现自动切换 Windows 的深色主题"},{"content":"\r\n\r\n### 用 Header Editor 避免网站外链访问确认\r\n\r\n\u003e 2023-12-02 更新规则地址。\r\n\r\n不知道什么时候开始，用户在平台上面看到一篇文章，里面引用了一个平台之外的外链，点击之后国内平台或是网站总是要弹出一个外链访问提示，用户要么要点击确认，要么要自己复制之后再访问，像下面这样：\r\n\r\n![外链访问提示](/images/HeaderEditorAutoRedirect-1.png)\r\n\r\n当然目前也有能够避免这种无意义提示的方法，比如 [Open the F**king URL Right Now](https://greasyfork.org/zh-CN/scripts/412612) 这个油猴脚本。但是有些我会访问的网站并不在这个脚本的适用范围（比如：[RunningCheese](https://www.runningcheese.com/)）。\r\n\r\n反正也就是网址重定向，于是干脆参考上述的油猴脚本，用 Header Editor 扩展配置自己常用的网站外链跳转，目前支持范围包括：知乎，RunningCheese，简书，CSDN，OSChina，豆瓣，其他的站点可以自行参考配置。\r\n\r\n有兴趣自己配置的可以参考本文后续的表格进行配置，只想导入的可以在下面这个链接下载规则文件进行导入。\r\n\r\n  + [Github](https://raw.githubusercontent.com/JPLiu/TestFiles/main/Browser/Header-Editor/HE_2021-07-10T10-02-51Z_RedirectSkip.json)\r\n\r\n---\r\n\r\n#### 规则内容\r\n\r\n+ 知乎 - 外链重定向\r\n\r\n| 规则     |                                               |\r\n|----------|-----------------------------------------------|\r\n| 名称     | 知乎 - 外链重定向                             |\r\n| 规则类型 | 重定向请求                                    |\r\n| 匹配类型 | 正则表达式                                    |\r\n| 匹配规则 | `^https?:\\/\\/link\\.zhihu\\.com\\/\\?target=(.*)` |\r\n| 排除规则 |                                               |\r\n| 执行类型 | 常规                                          |\r\n| 重定向至 | `$1`                                          |\r\n\r\n+ RunningCheese - 外链重定向\r\n\r\n| 规则     |                                                     |\r\n|----------|-----------------------------------------------------|\r\n| 名称     | RunningCheese - 外链重定向                          |\r\n| 规则类型 | 重定向请求                                          |\r\n| 匹配类型 | 正则表达式                                          |\r\n| 匹配规则 | `^https?:\\/\\/www\\.runningcheese\\.com\\/go\\?url=(.*)` |\r\n| 排除规则 |                                                     |\r\n| 执行类型 | 常规                                                |\r\n| 重定向至 | `$1`                                                |\r\n\r\n+ 简书 - 外链重定向\r\n\r\n| 规则     |                                                         |\r\n|----------|---------------------------------------------------------|\r\n| 名称     | 简书 - 外链重定向                                       |\r\n| 规则类型 | 重定向请求                                              |\r\n| 匹配类型 | 正则表达式                                              |\r\n| 匹配规则 | `^https?:\\/\\/www\\.jianshu\\.com\\/go-wild\\?ac=2\u0026url=(.*)` |\r\n| 排除规则 |                                                         |\r\n| 执行类型 | 常规                                                    |\r\n| 重定向至 | `$1`                                                    |\r\n\r\n+ CSDN - 外链重定向\r\n\r\n| 规则     |                                              |\r\n|----------|----------------------------------------------|\r\n| 名称     | CSDN - 外链重定向                            |\r\n| 规则类型 | 重定向请求                                   |\r\n| 匹配类型 | 正则表达式                                   |\r\n| 匹配规则 | `^https?:\\/\\/link\\.csdn\\.net\\/\\?target=(.*)` |\r\n| 排除规则 |                                              |\r\n| 执行类型 | 常规                                         |\r\n| 重定向至 | `$1`                                         |\r\n\r\n+ OSChina - 外链重定向\r\n\r\n| 规则     |                                                             |\r\n|----------|-------------------------------------------------------------|\r\n| 名称     | OSChina - 外链重定向                                        |\r\n| 规则类型 | 重定向请求                                                  |\r\n| 匹配类型 | 正则表达式                                                  |\r\n| 匹配规则 | `^https?:\\/\\/www\\.oschina\\.net\\/action\\/GoToLink\\?url=(.*)` |\r\n| 排除规则 |                                                             |\r\n| 执行类型 | 常规                                                        |\r\n| 重定向至 | `$1`                                                        |\r\n\r\n+ 豆瓣 - 外链重定向\r\n\r\n| 规则     |                                                   |\r\n|----------|---------------------------------------------------|\r\n| 名称     | 豆瓣 - 外链重定向                                 |\r\n| 规则类型 | 重定向请求                                        |\r\n| 匹配类型 | 正则表达式                                        |\r\n| 匹配规则 | `^https?:\\/\\/www\\.douban\\.com\\/link2\\/\\?url=(.*)` |\r\n| 排除规则 |                                                   |\r\n| 执行类型 | 常规                                              |\r\n| 重定向至 | `$1`                                              |\r\n\r\n","cover":"","link":"headereditorautoredirect.html","preview":"\u003cp\u003e用 Header Editor 避免网站（如知乎，豆瓣等）页面访问外链时，需要点击确认的问题。\u003c/p\u003e\n","title":"用 Header Editor 避免网站外链访问确认"},{"content":"\r\n\r\n### WinMerge 设置便携化\r\n\r\n最近发现 WinMerge 的 [GitHub Releases](https://github.com/WinMerge/winmerge/releases) 上更新了 2.16.13 Beta 的版本，里面提到的其中一个功能点是 `Possibility to store settings in INI file`，大致意思是支持将 WinMerge 的配置保存至 ini 文件中。\r\n\r\n- 2.16.13 Beta 之前的 WinMerge 设置是保存在注册表中的，但是可以在程序设置中对设置的 reg 进行导出，更换设备之后需要重新导入 reg 文件之后才能正常显示功能。\r\n\r\n- 2.16.13 Beta 之后的版本只要在 WinMergeU.exe 的文件夹中新建一个名为 `WinMerge.ini` 的文件，WinMerge 就会自动将设置保存至该文件中，但是需要注意，新建文件后，之前的设置需要重新设置，因为读取到 WinMerge.ini的文件之后程序就不去读注册表了。\r\n\r\n本次没什么好配图的。\r\n","cover":"","link":"winmergeportable.html","preview":"\u003cp\u003e简单说一下 WinMerge 2.16.13 Beta 开始可用的设置便携化\u003c/p\u003e\n","title":"WinMerge 设置便携化"},{"content":"\r\n\r\n### 用 Header Editor 重定向蓝奏云的访问链接\r\n\r\n\u003e 2023-12-02 更新规则地址。\r\n\r\n近期上网时发现蓝奏云 lanzous.com 的链接无法正常打开，看了一下貌似是 DNS 污染的问题，需要手工修改至 lanzoui.com 访问，于是决定使用 Header Editor 实现自动重定向。\r\n\r\n有兴趣自己配置的可以参考本文后续的表格进行配置，只想导入的可以在下面这个链接下载规则文件。\r\n\r\n  + [Github](https://raw.githubusercontent.com/JPLiu/TestFiles/main/Browser/Header-Editor/HE_2021-06-19T09-23-22Z_lanzou.json)\r\n\r\n---\r\n\r\n#### 规则内容\r\n\r\n+ 蓝奏云重定向规则\r\n\r\n| 规则     |                                        |\r\n|----------|----------------------------------------|\r\n| 名称     | 蓝奏云重定向                           |\r\n| 规则类型 | 重定向请求                             |\r\n| 匹配类型 | 正则表达式                             |\r\n| 匹配规则 | `^https?:\\/\\/www\\.lanzous\\.com\\/(.*)$` |\r\n| 排除规则 |                                        |\r\n| 执行类型 | 常规                                   |\r\n| 重定向至 | `https://www.lanzoui.com/$1`           |\r\n\r\n","cover":"","link":"headereditorlanzouredirect.html","preview":"\u003cp\u003e用 Header Editor 重定向 lanzous.com 的链接到 lanzoui.com\u003c/p\u003e\n","title":"用 Header Editor 重定向蓝奏云的访问链接"},{"content":"\r\n\r\n### 在 Windows 10 21H1 中使用 IE 打开 EasyConnect 的问题\r\n\r\n看到 Windows 10 的 21H1 更新发布了，前几天抽空更新了手上笔记本的 Windows 10 系统，更新完 21H1 的 Windows 10，在你打开 Internet Explorer （以下简称 IE）时，会自动打开 Edge 浏览器而不是 IE。\r\n\r\n![Edge：我就是 IE](/images/Win1021H1EdgeIE-1.gif)\r\n\r\n但是我所在公司的 VPN 远程桌面使用的 EasyConnect，在 EasyConnect 登录之后，EasyConnect 本来自动打开的 IE 入口页面会自动调用 Edge 浏览器打开，但是偏偏这货对 对 IE 之外的浏览器的支持都非常不好，入口页面一直卡在加载页面，连远程都进不去，即使在 Edge 浏览器 中选择 `在 Internet Explorer 模式下重新加载`，也不能完全解决。\r\n\r\n找了半天，才发现貌似是 Windows 10 21H1 的 Edge 浏览器的配置问题，新版的 Edge 浏览器的 设置→默认浏览器 页面中有下面这个选项：\r\n\r\n- **让 Internet Explorer 在 Microsoft Edge 中打开网站**：我这边看到的默认的选项是 `始终`，修改为 `从不`之后，IE 浏览器就可以像之前一样正常打开了。\r\n\r\n![Edge 与 IE](/images/Win1021H1EdgeIE-2.png)\r\n","cover":"","link":"win1021h1edgeie.html","preview":"\u003cp\u003e简单说下 在 Windows 10 21H1 中使用 IE 打开 EasyConnect 的问题。\u003c/p\u003e\n","title":"在 Windows 10 21H1 中使用 IE 打开 EasyConnect 的问题"},{"content":"\r\n\r\n### 小新 Pro 14 到手之后的一些小调整\r\n\r\n我之前的笔记本设备是一台 2017 年购入的 ThinkPad S2，已经好几年了，年初决定今年换掉，看中了联想的小新 Pro 14 锐龙版，4 月 1 日付了 200 块定金，7 号付尾款后 8 号收到，目前体验了 5 天，大致感受上是满意的。本文主要说下一些小地方的调整。\r\n\r\n#### 关于电源适配器。\r\n\r\n小新 Pro 14 自带的是一个 95W ，体积比较大而且重的电源适配器，我自己买了个 倍思 的 C+C+A 的 120W GaN 充电器，可以正常充电，而且桌面会简洁一点。\r\n\r\n#### 关于电池阈值。\r\n\r\n大部分的时间我都在公司附近住，而且笔记本除了回家的时候，都是在宿舍接着电源使用，比起设备没电，更多是担心电池损耗，所以之前的 ThinkPad S2 我一直开着电池阈值的设置。\r\n\r\n之前的 ThinkPad S2 有 Lenovo Power Manager，可以用 ChargeThreshold.exe 进行控制。但小新 Pro 14 没有 Lenovo Power Manager，需要在 Microsoft Store 中搜索 Lenovo Ventage 安装，Lenovo Ventage 中的电池设置可以打开节电模式，会把设备的充电时的电量限制在 55% 至 60% 之间。\r\n\r\n\u003e 这里提一下 联想电脑管家，根据我了解到的情况，联想电脑管家之前将电池阈值称为养护模式，但在新版中已经没有直接的入口，需要用户去调注册表，比较麻烦，不如 Lenovo Ventage 方便。\r\n\r\n#### 关于键盘布局。\r\n\r\nThinkPad S2 毕竟是 ThinkPad 的键盘，这是我对过去几年最满意的地方，用起来非常舒服，而 小新 Pro 14 的键盘布局相比 ThinkPad 要差很多。\r\n\r\n一是没有独立的 Home、End、Page Up、Page Down 键，需要使用 Fn 符合键，在 Word 翻页的时候非常很不方便。\r\n\r\n二是上下方向键是半高方向键，适应了几天还是经常按错。\r\n\r\n问题二的半高方向键没有办法解决，问题一我尝试用 AutoHotkey 作了一下映射，效果基本可以接受。\r\n\r\n\u003e 本来是想把 RAlt 单击映射成 PgUp，RCtrl 单击映射成 PgDn，Insert 单击映射成 Home，PrintScreen 单击映射成 End 的，但是实测只要映射了 RCtrl，Ditto 就有可能工作不支持，懒得具体找原因，只好改用下面的方案。\r\n\r\n\t#SingleInstance Force\r\n\t; 参考：https://blog.csdn.net/qq_38619183/article/details/83965654\r\n\t; 移动功能键映射 {{{1\r\n\t;RAlt           单击 Home，连击 End\r\n\t;PrintScreen    单击 PgDn，连击 PrintScreen\r\n\t;Insert         单击 PgUp，连击 Insert\r\n\tRAlt::\r\n\t    If key_times \u003e 0\r\n\t    {\r\n\t        key_times += 1\r\n\t        Return\r\n\t    }\r\n\t    key_times = 1\r\n\t    SetTimer, KeyWinA, 300\r\n\t    Return\r\n\t    KeyWinA:\r\n\t    SetTimer, KeyWinA, off\r\n\t    If key_times = 1\r\n\t    {\r\n\t        Send {Home}\r\n\t    }\r\n\t    Else If key_times \u003e 1\r\n\t    {\r\n\t        Send {End}\r\n\t    }\r\n\t    key_times = 0\r\n\t    Return\r\n\t\r\n\t$PrintScreen::\r\n\t    If key_times \u003e 0\r\n\t    {\r\n\t        key_times += 1\r\n\t        Return\r\n\t    }\r\n\t    key_times = 1\r\n\t    SetTimer, KeyWinP, 300\r\n\t    Return\r\n\t    KeyWinP:\r\n\t    SetTimer, KeyWinP, off\r\n\t    If key_times = 1\r\n\t    {\r\n\t        Send {PgDn}\r\n\t    }\r\n\t    Else If key_times \u003e 1\r\n\t    {\r\n\t        Send {PrintScreen}\r\n\t    }\r\n\t    key_times = 0\r\n\t    Return\r\n\t\r\n\t$Insert::\r\n\t    If key_times \u003e 0\r\n\t    {\r\n\t        key_times += 1\r\n\t        Return\r\n\t    }\r\n\t    key_times = 1\r\n\t    SetTimer, KeyWinI, 300\r\n\t    Return\r\n\t    KeyWinI:\r\n\t    SetTimer, KeyWinI, off\r\n\t    If key_times = 1\r\n\t    {\r\n\t        Send {PgUp}\r\n\t    }\r\n\t    Else If key_times \u003e 1\r\n\t    {\r\n\t        Send {Insert}\r\n\t    }\r\n\t    key_times = 0\r\n\t    Return\r\n","cover":"","link":"xiaoxinp14.html","preview":"\u003cp\u003e简单说一下近期换笔记本设备之后的一些感受，以及对小新 Pro 14 一些我个人不喜欢的细节的处理。\u003c/p\u003e\n","title":"小新 Pro 14 到手之后的一些小调整"},{"content":"\r\n\r\n### Scrcpy 简单介绍\r\n\r\n近期尝试了一下 Scrcpy 这个开源 Android 投屏工具，简单说一下我个人配置的过程。内容以我个人使用的设备（Win 10 x64 的 Lenovo S2 以及 MIUI 12 的 Redmi K30 Pro）为基础，供参考，但不一定适用于所有的设备。\r\n\r\n#### 前期准备\r\n\r\n##### Windows 端\r\n\r\n- 下载 Scrcpy，可以在 [GitHub Releases](https://github.com/Genymobile/scrcpy/releases)，下载最新版的 Scrcpy，我选择的是 win32 的版本。\r\n\r\n##### Android端\r\n\r\n- 打开开发者模式：以 Redmi K30 Pro 为例，需要打开`设置`→`我的设备`→`全部参数`→点击`MIUI版本`5次，设备提示进入开发者模式→返回`设置`→`更多设置`→`开发者选项`→打开 `USB 调试`→打开 `USB 调试（安全设置）`。\r\n\t- MIUI 如果不打开最后的 USB 调试（安全设置）的话，Windows 上只能看到 Android 的界面，不能用鼠标进行操作。\r\n\r\n#### 文件解压与批处理脚本\r\n\r\n##### Windows 端\r\n\r\n- 将下载下来的 Scrcpy 解压到独立的文件夹。\r\n\r\n\u003e 关于环境变量：大部分 Scrcpy 的介绍文章中都是单独安装 ADB 但是实际上 Scrcpy 是自带 ADB 的。\r\n\r\n#### 程序使用\r\n\r\n用数据线把 Android 手机和 Windows 电脑连接起来，之后直接运行 Scrcpy.bat，第一次运行的时候 Android 端的会有一些调试提示，同意即可。\r\n\r\n![正常结果](/images/Scrcpy-1.png)\r\n\r\n\u003e ADB 也支持无线连接，但在初始化时也需要数据线连接，且无线连接的情况下， Android 设备重启后我还遇到了 ADB 重复设备的提示，需要结束 ADB 进程重新配置后才正常，所以目前我主要用数据线连接。\r\n\r\n#### 常见问题\r\n\r\n- Windows 端上看到的内容清晰度明显低于 Android 端。\r\n\r\n这个是 Win 10 上的高分屏适配问题，解决方法是查看 scrcpy.exe 文件属性，在`兼容性`→`更改高 DPI 设置`→勾选 `替换高 DPI 缩放行为`，选择为`应用程序`→确认，之后重启 Scrcpy 就会正常。\r\n\r\n![DPI 缩放设置](/images/Scrcpy-2.png)\r\n\r\n- 在 Windows 端 的显示窗口上使用键盘输入时只能输入英文。\r\n\r\n这个是输入法支持的问题，如果 Android 端使用的输入法作了相应的支持，在显示窗口中输入时，响应的应该是 Android 端上的输入法，我个人实际测试中，目前的 MIUI 自带的定制版的搜狗输入法，是无法响应的，会导致只能输入英文，独立安装的 QQ输入法则正常。\r\n\r\n![QQ输入法输入中文](/images/Scrcpy-3.png)\r\n\r\n- 后台出现 ADB.exe 的进程。\r\n\r\n只要 Windows 启动之后使用过一次 Scrcpy，后台就会出现 adb.exe，这个是正常现象，不再使用投屏时，可以选择手工结束进程。\r\n\r\n#### 参考资料\r\n\r\n个人配置的时候参考了以下的资料：\r\n\r\n- [Windows 操作系统下的 ADB 环境配置 - 少数派](https://sspai.com/post/40471)\r\n\r\n- [Scrcpy - 开源免费在电脑显示手机画面并控制手机的工具 (投屏/录屏/免Root) - 异次元软件世界](https://www.iplaysoft.com/scrcpy.html)\r\n\r\n- [高清投屏要付费？免费、开源、高码率的 Android 投屏控制工具 Scrcpy](https://sspai.com/post/56178)\r\n","cover":"","link":"scrcpy.html","preview":"\u003cp\u003e简单说一下我使用 Scrcpy 的过程。\u003c/p\u003e\n","title":"Scrcpy 简单介绍"},{"content":"\r\n\r\n### Header Editor 与 Decentraleyes 共用需要注意排除\r\n\r\n最近在 Firefox 上尝试使用 [Decentraleyes](https://addons.mozilla.org/zh-CN/firefox/addon/decentraleyes/) 这个扩展，在安装完扩展之后打开扩展的 [测试页面](https://decentraleyes.org/test/) 时，发现页面提示 Decentraleyes 工作异常。如下图：\r\n\r\n![Decentraleyes 工作异常](/images/headereditordecentraleyes-1.png)\r\n\r\n看到这个提示第一反应是按照上图的提示看看 [uBlock Origin](https://addons.mozilla.org/zh-CN/firefox/addon/ublock-origin/) 设置的动态规则，但尝试后发现即使把 uBlock Origin 的动态过滤功能关闭掉 Decentraleyes 在测试页面也一样提示工作异常。\r\n\r\n通过禁用扩展排查，发现问题的成因在于 [Header Editor](https://addons.mozilla.org/zh-CN/firefox/addon/header-editor/)，由于在 Header Editor 中，我使用了网上 [dupontjoy 的规则](https://github.com/dupontjoy/customization/tree/master/Rules/HeaderEditor)，其中下图几条对 Google 重定向规则，与 Decentraleyes 的功能发生了冲突。\r\n\r\n![dupontjoy 的 Google 重定向规则](/images/headereditordecentraleyes-2.png)\r\n\r\n禁用上述规则之后再次到 Decentraleyes 的 [测试页面](https://decentraleyes.org/test/) 进行测试，则提示 Decentraleyes 正常工作。\r\n\r\n![Decentraleyes 工作正常](/images/headereditordecentraleyes-3.png)\r\n","cover":"","link":"headereditordecentraleyes.html","preview":"\u003cp\u003eHeader Editor 与 Decentraleyes 共用需要注意排除一些字体重定向规则。\u003c/p\u003e\n","title":"Header Editor 与 Decentraleyes 共用需要注意排除"},{"content":"\r\n\r\n### 2021 年我的 RSS 订阅方式\r\n\r\n+ 2023 年 2 月更新：\r\n    - 本文提到的部分内容已过时，新方式请见[2023 年我的 RSS 订阅方式](rss2023.html)。\r\n\r\n距离上一次总结各个平台我的 RSS 订阅方式已经隔两年，我还在用 RSS，但是这两年感觉微信，微博，知乎等国内的平台似乎依然越来越封闭，越来越想把客户留着自己的平台，RSS 的订阅是越来越麻烦。\r\n\r\n#### 前提\r\n\r\n本人使用的 RSS 阅读器是 Inoreader，在 PC 上会用的是网页版，在 Android 使用的是第三方的 FeedMe，所以以下部分内容可能并不适用于其他的阅读器。\r\n\r\n#### 常见 RSS 订阅源生成服务\r\n\r\n- [FeedX](https://feedx.net/)\r\n\t- 这个站点提供类似人民日报，解放日报、南方周末，BBC，知道日报等全文 RSS 订阅源，已经维持很长一段时间，很稳定。\r\n\t- 网址主站早已被墙，需要梯子。\r\n\r\n- [RSSHub](https://docs.rsshub.app/)\r\n    - RSSHub，支持微信，知乎，哔哩哔哩，微博，简书等平台，还有一些网站，大学的通知等。\r\n\t- 目前我个人主要用来订阅 B 站、YouTube、Wenku8 的轻小说、还有一些闲暇时翻翻的搜狐号、偶尔翻翻的什么值得买的白菜等。\r\n\t- 希望这个项目能一直延续下去。\r\n\r\n- [Reabble](http://reabble.com/help)\r\n    - 这个页面上也提供了一些微信和网站的 RSS 订阅源，基本上都是全文输出的。\r\n\r\n- [各种转 RSS 服务](https://rss.lilydjwg.me/)\r\n    - 这个页面提供知乎专栏和知乎动态的 RSS 订阅，目前我个人使用过程中发现专栏的订阅偶尔会无法输出全文，动态则不会。\r\n    - Inoreader 本身是支持知乎专栏的订阅的，但是大约，19年初的时候开始就不支持全文输出了。\r\n\r\n- 其他平台\r\n    - Github：Inoreader 本身支持。\r\n    - SourceForge：平台本身提供 RSS。\r\n\r\n#### 关于微信公众号的订阅\r\n\r\n我不喜欢生态封闭的微信公众号，但是很多文章只在公众号上更新，不得不用。我尝试过使用 RSS 去订阅，但是通常会有比较明显的延迟。\r\n\r\n- RSSHub 支持微信公众号的订阅，但是由于利用的都是一些第三方的平台，三天两头就会失效，我个人已经放弃了。\r\n\r\n- [WeRSS](https://werss.app/)\r\n\t- 收费的微信公众号订阅服务，订阅内容更新会有延迟。\r\n\t- 全文输出，且在 RSS 阅读器中选择在浏览器新标签页中打开文章时会是微信公众号的链接。\r\n\r\n- [今天看啥](http://www.jintiankansha.me/)\r\n\t- 收费的微信公众号订阅服务，订阅内容更新会有延迟。\r\n\t- 输出的是全文，但是在 RSS 阅读器中选择在浏览器新标签页中打开文章时，打开的会是 今天看啥 自己的页面，我不喜欢。\r\n\r\n#### 不常见的网站的RSS订阅源生成服务\r\n- [FEED43](https://feed43.com/)\r\n    - 按照需要给网页生成订阅源，但是需要有一点点的 HTML 基础，教程：[利用 Feed43，将任意网页制作成 RSS 订阅源 - 少数派](http://sspai.com/34320)\r\n\r\n##### 用 FEED43 自制做的订阅源。\r\n\r\n| 名称                               | 地址                                                  | 备注                       |\r\n|------------------------------------|-------------------------------------------------------|----------------------------|\r\n| All in One Runtimes 的更新         | `https://node2.feed43.com/allinoneruntimesupdate.xml` | -                          |\r\n| Audacity 官网的更新                | `https://node2.feed43.com/audacityupdate.xml`         | -                          |\r\n| Everything 的更新                  | `https://node2.feed43.com/everythingupdate.xml`       | -                          |\r\n| FastCopy 的更新                    | `https://feed43.com/fastcopy.xml`                     | -                          |\r\n| Foobar2000 的更新                  | `https://node2.feed43.com/fb2kupdate.xml`             | -                          |\r\n| IrfanView 的更新                   | `https://node2.feed43.com/irfanview.xml`              | -                          |\r\n| QQ for Android 在 APKPure 上的更新 | `https://node2.feed43.com/2827353308616831.xml`       | 用于应付日区没有 QQ。      |\r\n| VLC Media Player 的更新            | `https://node2.feed43.com/vlcupdate.xml`              | -                          |\r\n| YGOMobile 在蒲公英上的更新         | `https://node2.feed43.com/ygomobliepgy.xml`           | 有点小问题，但能用，懒得修 |\r\n\r\n","cover":"","link":"rss2021.html","preview":"\u003cp\u003e简单说一下目前（2021年）主要使用的 RSS 订阅源生成服务。\u003c/p\u003e\n","title":"2021 年我的 RSS 订阅方式"},{"content":"\r\n\r\n### 给 Double Commander 增加查看 EXE 文件版本信息的功能\r\n\r\n我个人有保留常用软件的安装包的习惯，并且会定期进行相关安装包的更新，以往进行更新操作时，我通过 `Alt + Enter` 打开文件属性窗口查看版本信息，但属性窗口默认显示的`常规`标签页并未显示相关版本信息，近期改为在 Double Commander(以下简称 DC)通过 Total Commander(以下简称 TC)的 fileinfo 插件来实现类似的功能，更方便。\r\n\r\n- fileinfo：在 [TC 官网的插件页面](https://www.ghisler.com/plugins.htm)，搜索 fileinfo 即可找到对应插件，点击 fileinfo 就可以进入 [fileinfo 插件官网](http://fg.tcplugins.free.fr/fileinfo.htm) 进行下载。\r\n\r\n#### 安装 fileinfo\r\n\r\nTC 安装插件只需要按回车打开下载的插件的压缩包，但是 DC 需要手工添加。\r\n\r\n- 解压插件官网下载的 fileinfo 压缩包，会出现几个不同的压缩包，对应不同的版本\r\n\r\n| 解压出来的文件        | 说明                                                     |\r\n|-----------------------|----------------------------------------------------------|\r\n| plugins.txt           | 对 unaspack-sources.zip 的插件的说明文档                 |\r\n| ReadMe.eze            | fileinfo 插件的说明                                      |\r\n| unaspack-sources.zip  | fileinfo 的一个插件的源代码，我没用。                    |\r\n| wlx_fileinfo32.zip    | 32 位的版本，没有额外的 DLL 依赖。                       |\r\n| wlx_fileinfo32_DL.zip | 32 位的版本，有额外的 DLL(MFC90.dll, MSVCR90.dll) 依赖。 |\r\n| wlx_fileinfo64.zip    | 64 位的版本，没有额外的 DLL 依赖。                       |\r\n| wlx_fileinfo64_DL.zip | 64 位的版本，有额外的 DLL(MFC90.dll, MSVCR90.dll)依赖。  |\r\n\r\n- 个人选择的是 wlx_fileinfo32.zip 解压文件放到 DC 目录下的 Plugins 目录下的 WLX 文件夹。\r\n\r\n- 在 DC 界面的 Configuration→Options→Plugins→Plugins WLX 页面点击 ADD，选择解压的 wlx_fileinfo32 文件夹中的 fileinfo.wdx，64 位 DC 请选择对应的版本，即可完成插件安装，需要注意的是，如果和 ulister 这个插件同时使用，需要将 fileinfo 这个插件放到 ulister 这个插件上面去，否则可能无法生效（类似下图）。\r\n\r\n![fileinfo 配置](/images/DoubleCMDfileinfo1.png)\r\n\r\n#### 使用 fileinfo\r\n\r\n在 EXE 或是 DLL 文件上使用 DC 的 Viewer 功能，就能看到类似下图的页面，可以直接看到版本等信息。\r\n\r\n![fileinfo 信息显示](/images/DoubleCMDfileinfo2.png)\r\n","cover":"","link":"doublecmdfileinfo.html","preview":"\u003cp\u003e借助 fileinfo 插件给 Double Commander 增加查看 EXE 文件版本信息的功能。\u003c/p\u003e\n","title":"给 Double Commander 增加查看 EXE 文件版本信息的功能"},{"content":"\r\n\r\n### 自制的 uBlock Origin 的内容农场规则\r\n\r\n\u003e 2023-12-02 更新规则地址。\r\n\r\n\u003e 2021-12-12 调整部分文本。\r\n\r\n\u003e 2021-12-12 调整部分文本。\r\n\r\n\u003e 2020-09-09 更新个人精简规则地址。\r\n\r\n我个人很喜欢 [终结内容农场][addon-content-farm-terminator] 这个扩展，但是目前在 Android 上的 Firefox Fenix 版中，只支持 uBlock Origin 等少数几个扩展，终结内容农场这个扩展无法使用，于是我就想着把终结内容农场的规则搬到 uBlock Origin 上用。\r\n\r\n- 终结内容农场的默认规则是这个：[Github][content-farm-terminator-default]。\r\n\r\n- 但是其中很大一部分是 随意窝Xuite、痞客邦、FC2博客、WordPress 的页面，我个人日常上网的时候遇不到，于是我将相关的条目移除，同时合并 [假新闻网站清单][content-farm-terminator-fake-news] 和 [诈骗网站清单][content-farm-terminator-scam-sites] 等规则，形成了一个可以在 uBlock Origin 上用的规则。\r\n\r\n- 规则的地址是：[Github](https://raw.githubusercontent.com/JPLiu/TestFiles/main/Browser/uBlock-Origin/More-Rule/Content-Farms-Lite.list)。\r\n\r\n- 但是这个做法也有缺点，只有当你点击进入网页的时候才会有提示，不像终结内容农场的扩展会在打开前就有一个图标提示，可以避免点击，只能算是一个临时方案，虽然不知道要猴年马月 Firefox Fenix 才会开放所有扩展。\r\n\r\n添加到 uBlock Origin 的订阅之后，一旦访问到列表内的网站，就会显示到下面这个提示。\r\n\r\n![uBlockOriginContentFarms](/images/uBlockOriginContentFarms-1.png)\r\n\r\n\r\n[addon-content-farm-terminator]:https://addons.mozilla.org/zh-CN/firefox/addon/content-farm-terminator/\r\n\r\n[content-farm-terminator-fake-news]:https://raw.githubusercontent.com/danny0838/content-farm-terminator/gh-pages/files/blocklist/fake-news.txt\r\n[content-farm-terminator-scam-sites]:https://raw.githubusercontent.com/danny0838/content-farm-terminator/gh-pages/files/blocklist/scam-sites.txt\r\n[content-farm-terminator-default]:https://raw.githubusercontent.com/danny0838/content-farm-terminator/gh-pages/files/blocklist/content-farms.txt\r\n","cover":"","link":"ublockorigincontentfarms.html","preview":"\u003cp\u003e在 uBlock Origin 中增加终结内容农场扩展的内容农场规则的精简版。\u003c/p\u003e\n","title":"自制的 uBlock Origin 的内容农场规则"},{"content":"\r\n\r\n### 无需 Lenovo Vantage，配置 ThinkPad 设备的充电阈值\r\n\r\n我现在手上用的设备是联想的 ThinkPad S2，可以配置充电阈值，但是在 Win 10 下，图形化界面配置充电阈值的方式就必须使用到 Windows 应用商店中的 Lenovo Vantage（以下简称 Vantage），这个东西安装之后开机就会挂在后台，而且会出现偶发性的高占用，我个人很不喜欢，而 Vantage 的功能中对我有用的只用充电阈值，最近在网上找到了不需要 Vantage 的一个办法：\r\n\r\n1. 在 设备管理器→系统设备 中确认 Lenovo Power Manager device 已经安装，这个驱动可以通过 Windows Update 安装。\r\n\r\n2. 下载 [ChargeThreshold.exe](https://download.lenovo.com/pccbbs//thinkvantage_en/metroapps/Vantage/ChargeThreshold/ChargeThreshold.exe)，此处的链接来自 Lenovo。\r\n\r\n3. 命令行运行 ChargeThreshold.exe on 80 可以将充电阈值设定为 80%\r\n\r\n4. 命令行运行 ChargeThreshold.exe off 可以禁用充电阈值。\r\n\r\n5. 命令行运行 ChargeThreshold.exe 可以看到更多的选项，比如 ChargeThreshold.exe on 80 40，可以将充电阈值设置为上限 80，下限 40。\r\n\r\n内容整理自 [Q\u0026A - setting a ThinkPad battery charge threshold by script](https://forums.lenovo.com/t5/Lenovo-Vantage-Knowledge-Base/Q-amp-A-setting-a-ThinkPad-battery-charge-threshold-by-script/m-p/4345631)。\r\n\r\n不愧是美帝良心想，中文区找了半天没找到，而且 Lenovo Vantage 卸载之后还有一个服务挂着，需要我手动 sc delete。\r\n\r\n补上一个简单的配置的命令行脚本，和 ChargeThreshold.exe 放在同一个文件夹就行：\r\n\r\n\t@echo off\r\n\t\r\n\tset highp=70\r\n\tset lowp=40\r\n\t\r\n\techo 当前的充电阈值配置为：\r\n\tChargeThreshold.exe status\r\n\t\r\n\techo.\r\n\techo ChargeThreshold List\r\n\techo.\r\n\techo 1. 禁用充电阈值\r\n\techo 2. 启用充电阈值（%highp% : %lowp%）\r\n\techo 3. 查看说明\r\n\t\r\n\tset /p choose=请选择相应的处理方式：\r\n\tif \"%choose%\"==\"1\" Goto ChargeThresholdOff\r\n\tif \"%choose%\"==\"2\" Goto ChargeThresholdHL\r\n\tif \"%choose%\"==\"3\" Goto ChargeThresholdNote\r\n\texit\r\n\t\r\n\t\r\n\t:ChargeThresholdOff\r\n\techo 正在禁用充电阈值\r\n\tChargeThreshold.exe off\r\n\texit\r\n\t\r\n\t:ChargeThresholdHL\r\n\techo 正在启用充电阈值\r\n\tChargeThreshold.exe On %highp% %lowp%\r\n\texit\r\n\t\r\n\t:ChargeThresholdNote\r\n\tChargeThreshold.exe\r\n\tpause\r\n\texit\r\n\r\n","cover":"","link":"lenovobatterychargethreshold.html","preview":"\u003cp\u003e在不使用 Lenovo Vantage 的前提下配置 ThinkPad 设备的充电阈值\u003c/p\u003e\n","title":"无需 Lenovo Vantage，配置 ThinkPad 设备的充电阈值"},{"content":"\r\n\r\n### 自用的 PDFtk 批处理脚本（2021-01-23 更新）\r\n\r\n\u003e 2021-01-23：脚本增加了 水印 和 加密 的功能。\r\n\r\n最初在 2017 年在 [PDF 处理工具 PDFTK 介绍](pdftk.html) 中提到过 PDFtk 这个命令行的 PDF 处理工具，以及 [PDF Builder](http://www.angusj.com/pdftkb/) 这个第三方的 GUI，但是今年年初办公用的电脑抽风，每次运行 PDF Builder，在添加需要处理的文件的时候必定奔溃，只能改用 IrfanView 或是批处理调用 PDFtk 处理，干脆就自己写了一个简单的批处理脚本。\r\n\r\n\t@echo off\r\n\t\r\n\tset PDFPath=%~1\r\n\t\r\n\tset PDFtkPath=%~dp0\r\n\tset PDFtk=%PDFtkPath%\\pdftk.exe\r\n\tset PDFtkSourcePath=%PDFtkPath%\\PDFtkSource\r\n\tset PDFtkTargetPath=%PDFtkPath%\\PDFtkTarget\r\n\r\n\t::设置加密时使用的密码\r\n\tset user_pw=123456\r\n\t\r\n\techo PDFtk List\r\n\techo.\r\n\techo 1. PDF 截取\r\n\techo 2. PDF 分拆\r\n\techo 3. PDF 合并\r\n\techo 4. PDF 压缩\r\n\techo 5. PDF 旋转\r\n\techo 6. PDF 加水印\r\n\techo 7. PDF 加密\r\n\techo.\r\n\tset /p choose=请选择处理方式：\r\n\tif \"%choose%\"==\"1\" Goto PDFtkCAT\r\n\tif \"%choose%\"==\"2\" Goto PDFtkBRUST\r\n\tif \"%choose%\"==\"3\" Goto PDFtkCOMBINE\r\n\tif \"%choose%\"==\"4\" Goto PDFtkCOMPRESS\r\n\tif \"%choose%\"==\"5\" Goto PDFtkROTATE\r\n\tif \"%choose%\"==\"6\" Goto PDFtkMULTISTAMP\r\n\tif \"%choose%\"==\"7\" Goto PDFtkPW\r\n\texit\r\n\t\r\n\t:PDFtkCAT\r\n\tif defined PDFPath ( echo 脚本启动时已带入路径： %1) else set /p PDFPath=请输入需要处理的 PDF 文件并回车:\r\n\tset /p PDFtkCAT=请输入需要截取的页数（支持 1 2 或 1-3 或 2-end）：\r\n\tcd %PDFtkTargetPath%\r\n\techo 正在处理 %PDFPath%\r\n\t::%PDFtk% %PDFPath% cat %PDFtkCAT% output %date:~0,4%%date:~5,2%%date:~8,2%%time:~0,2%%time:~3,2%%time:~6,2%-CAT.pdf\r\n\t%PDFtk% \"%PDFPath%\" cat %PDFtkCAT% output \"%PDFPath%-CAT.pdf\"\r\n\texit\r\n\t\r\n\t:PDFtkBRUST\r\n\tif defined PDFPath ( echo 脚本启动时已带入路径： %1) else set /p PDFPath=请输入需要处理的 PDF 文件并回车:\r\n\techo 正在处理 %PDFPath%\r\n\t%PDFtk% \"%PDFPath%\" burst output %PDFtkTargetPath%/page_%%04d.pdf\r\n\tdel doc_data.txt\r\n\texit\r\n\t\r\n\t:PDFtkCOMBINE\r\n\techo 请确认所有需要合并的文件已按顺序命名并放入 %PDFtkSourcePath% 内。\r\n\tpause.\r\n\tcd %PDFtkTargetPath%\r\n\t%PDFtk% %PDFtkSourcePath%\\*.pdf cat output %date:~0,4%%date:~5,2%%date:~8,2%%time:~0,2%%time:~3,2%%time:~6,2%-COMBINED.pdf\r\n\techo 正在处理 %PDFPath%\r\n\texit\r\n\t\r\n\t:PDFtkCOMPRESS\r\n\tif defined PDFPath ( echo 脚本启动时已带入路径： %1) else set /p PDFPath=请输入需要处理的 PDF 文件并回车:\r\n\tcd %PDFtkTargetPath%\r\n\techo 正在处理 %PDFPath%\r\n\t::%PDFtk% %PDFPath% output %date:~0,4%%date:~5,2%%date:~8,2%%time:~0,2%%time:~3,2%%time:~6,2%-COMPRESS.pdf compress\r\n\t%PDFtk% \"%PDFPath%\" output \"%PDFPath%-COMPRESS.pdf\" compress\r\n\texit\r\n\t\r\n\t:PDFtkROTATE\r\n\techo 实例：\r\n\techo 1east 2-end：第一页顺时针旋转 90 度。\r\n\techo 1-endsouth：整个文件旋转 180 度。\r\n\tif defined PDFPath ( echo 脚本启动时已带入路径： %1) else set /p PDFPath=请输入需要处理的 PDF 文件并回车:\r\n\tset /p PDFtkROTATECAT=请输入旋转参数：\r\n\tcd %PDFtkTargetPath%\r\n\techo 正在处理 %PDFPath%\r\n\t::%PDFtk% %PDFPath% cat %PDFtkROTATECAT% output %date:~0,4%%date:~5,2%%date:~8,2%%time:~0,2%%time:~3,2%%time:~6,2%-ROTATE.pdf\r\n\t%PDFtk% \"%PDFPath%\" cat %PDFtkROTATECAT% output \"%PDFPath%-ROTATE.pdf\"\r\n\texit\r\n\t\r\n\t:PDFtkMULTISTAMP\r\n\techo.\r\n\techo 水印 PDF 文件（watermark.pdf）请放在 PDFtk.exe 的同一目录\r\n\techo.\r\n\tpause\r\n\tfor /r %PDFtkSourcePath% %%a in (*.pdf) do (\r\n\t    echo 正在给 %%~na 加水印\r\n\t\t%PDFtk% \"%%a\" multistamp watermark.pdf output %PDFtkTargetPath%\\%%~na-WM.pdf\r\n\t\techo.\r\n\t    )\r\n\texit\r\n\t\r\n\t:PDFtkPW\r\n\techo.\r\n\techo 默认设置用户密码，且允许复制内容，如需调整密码或变更参数，请打开脚本修改。\r\n\t:: allow 后面为参数，表示允许相关功能\r\n\t:: 留空 不允许下述功能 / AllFeatures 允许下述说用功能\r\n\t:: Printing 打印（高质量）\r\n\t:: DegradedPrinting 打印（低质量）\r\n\t:: ModifyContents 修改内容\r\n\t:: CopyContents 复制内容\r\n\t:: ModifyAnnotations 修改提示\r\n\t:: FillIn 填入内容\r\n\techo.\r\n\tpause\r\n\tfor /r %PDFtkSourcePath% %%a in (*.pdf) do (\r\n\t    echo 正在给 %%~na 加密\r\n\t\t%PDFtk% \"%%a\" output %PDFtkTargetPath%\\%%~na-PW.pdf user_pw %user_pw% allow printing copycontents\r\n\t\techo.\r\n\t    )\r\n\texit\r\n\r\n\r\n\r\n实际上我自己用得并不多，毕竟遇到要处理 PDF 的情景也不多……\r\n\r\n和 PDF Builder 不同，批处理可以通过 %1 传入参数，所以可以在 Double Commander 或是 Sumatra PDF 中调用。\r\n\r\n#### Double Commander 工具栏按钮\r\n\r\n需要根据实际位置调整路径。\r\n\r\n+ Tooktips：PDFtk 处理(\u0026P)\r\n\r\n+ Command：%COMMANDER_PATH%\\..\\0-CommandLineTools\\PDFtk\\PDFtk.bat\r\n\r\n+ Parameters：%ps\r\n\r\n+ StartPath：%COMMANDER_PATH%\\..\\0-CommandLineTools\\PDFtk\r\n\r\n#### Sumatra PDF Setting\r\n\r\n在 Setting 中加入以下内容 CommandLine 是批处理文件的路径，Name 是文件名，Filter 是当 Sumatra PDF 打开什么类型的文件时会出现：\r\n\r\n\tExternalViewers [\r\n\t\t[\r\n\t\t\tCommandLine = D:\\1-Program\\0-CommandLineTools\\PDFtk\\PDFtk.bat\r\n\t\t\tName = PDFtk\r\n\t\t\tFilter = *.pdf\r\n\t\t]\r\n","cover":"","link":"pdftkbat.html","preview":"\u003cp\u003e自用的 PDFtk 批处理脚本\u003c/p\u003e\n","title":"自用的 PDFtk 批处理脚本（2021-01-23 更新）"},{"content":"\r\n\r\n### 自定义 Vim 中 QuickFix 列表的格式\r\n\r\nVim 中默认的 QuickFix 默认的格式是 **文件名|行列位置|行内容**，最近一直希望调整一下显示的格式，目标的格式是 **|行数|行内容**，在一番搜索之后，找到了一个 [Gist](https://gist.github.com/george-b/d59600bde83dd4f7353aef8011315f2f) 里面提到了可以参考的代码：\r\n\r\n    function! QuickFixFormat()\r\n      let qflist = map(getqflist(),\r\n        \\ 'extend(v:val, {\"filename\" : bufname(v:val.bufnr)})')\r\n      let prefix_len = 2 + max(map(copy(qflist),\r\n        \\ 'strchars(v:val.filename . v:val.lnum)'))\r\n      let fmt = '%-' . prefix_len . 's' . '%s'\r\n      setlocal modifiable\r\n      call setline('1', map(qflist,\r\n        \\ 'printf(fmt, v:val.filename . \":\" . v:val.lnum, \"| \" . v:val.text)'))\r\n      setlocal nomodifiable nomodified\r\n    endfunction\r\n    augroup QuickFixFormat\r\n      autocmd!\r\n      autocmd BufReadPost quickfix call QuickFixFormat()\r\n    augroup END\r\n\r\n上面的代码和我的目标有差异，但是提供了思路，QuickFix 列表本身是不支持编辑的，但是可以通过 `setlocal modifiable` 改成可编辑，有了思路就好办了，简单尝试了实现。\r\n\r\n    function! QuickFixFormat()\r\n        setlocal modifiable\r\n        setlocal nowrap\r\n        silent! %s/^.\\{-}|\\(\\d\\d*\\) col \\(\\d\\d*\\)\\D\\{-}|/|L\\1|/g\r\n        silent nohlsearch\r\n        setlocal nomodifiable nomodified\r\n    endfunction\r\n    augroup QuickFixFormat\r\n        autocmd!\r\n        autocmd BufReadPost quickfix call QuickFixFormat()\r\n    augroup end\r\n\r\n但是上面这个写法有一个问题，在显示第二个 **|** 的时候，并没有对齐，这个时候我考虑借用 [Tabular](https://github.com/godlygeek/tabular)，实现如下，基本满足了我的要求：\r\n\r\n\tfunction! QuickFixFormat()\r\n\t    setlocal modifiable\r\n\t    setlocal nowrap\r\n\t    silent! %s/^.\\{-}|\\(\\d\\d*\\) col \\(\\d\\d*\\)\\D\\{-}|/|L\\1|/g\r\n\t    silent! Tab /^|\r\n\t    silent! Tab /^| L\\d\\d*\r\n\t    silent nohlsearch\r\n\t    setlocal nomodifiable nomodified\r\n\tendfunction\r\n\taugroup QuickFixFormat\r\n\t    autocmd!\r\n\t    autocmd BufReadPost quickfix call QuickFixFormat()\r\n\taugroup end\r\n\r\n![效果](/images/Vim-QuickFix-1.png)\r\n\r\n#### 补充说明\r\n\r\n- 部分的 **silent** 后面加入 **!** 用于忽略错误。\r\n","cover":"","link":"vim-quickfix.html","preview":"\u003cp\u003e借助 Tabular 自定义 Vim 中 QuickFix 列表的格式。\u003c/p\u003e\n","title":"自定义 Vim 中 QuickFix 列表的格式"},{"content":"\r\n\r\n### 在 Vim 中使用 OpenSSL 处理 Base64 编码的文本\r\n\r\nQQ邮箱上有个**导出为eml文件**的功能，使用这个功能下载的邮件，扩展名是 txt，但很多时候邮件内容是 Base64 编码的，使用 Notepad，Vim 等工具打开看不到正文，使用 Office 中的 Word 则可以正常查看。但是我更想直接在 Vim 中查看相关文本，于是开始 Google 搜索 Vim 和 Base64 的内容。\r\n\r\n#### 参考资料\r\n\r\n- 首先是 Github 上的 [Vim Base64](https://github.com/christianrondeau/vim-base64)，这个插件需要 Python，我个人不太喜欢。\r\n\r\n- 其次是 Vim Wiki 上的 [Read base64 raw string/email in Vim](https://vim.fandom.com/wiki/Read_base64_raw_string/email_in_Vim)，但是这篇文章上提到的 decode64.zip 的链接，已经无法正常下载。\r\n\r\n- 之后是 Stack Overflow 上的 [Executing ‘base64 --decode’ on a selection in Vim](https://stackoverflow.com/questions/7845671/executing-base64-decode-on-a-selection-in-vim/7846569#7846569) 这个问题，里面提到了一个映射：\r\n\r\n\t  \tvnoremap \u003cleader\u003e64 c\u003cc-r\u003e=system('base64 --decode', @\")\u003ccr\u003e\u003cesc\u003e\r\n\r\n按照上面这个写法，我只要找到一个可以解码 Base64 的工具就可以。\r\n\r\n#### OpenSSL 与 vimrc 的配置\r\n\r\n- OpenSSL 可以解码 Base64，可在 [vszakats/generic/openssl](https://bintray.com/vszakats/generic/openssl) 下载\r\n\r\n- 解压之后 OpenSSL 的压缩包后，将以下三个文件放到 Vim.exe 所在目录。\r\n\t- libcrypto-1_1.dll\r\n\t- libssl-1_1.dll\r\n\t- openssl.exe\r\n\r\n- 之后再在 vimrc 中加入以下内容，在选中 Base64 编码的情况下，按 F3 就能解码了。\r\n\r\n\t\tvnoremap \u003cF3\u003e c\u003cc-r\u003e=system('openssl.exe base64 -d', @\")\u003ccr\u003e\r\n\t\t\r\n\r\n#### 备注\r\n\r\n- 这个做法有明显的缺点，Vim 不支持图片，所以对于内容中涉及到图片的邮件，还是需要使用 Office 来处理。\r\n\r\n![Vim 转换实例](/images/Vim-OpenSSL-Base64-1.gif)\r\n","cover":"","link":"vim-openssl-base64.html","preview":"\u003cp\u003e在 Vim 中使用 OpenSSL 转码 Base64 编码的文本。\u003c/p\u003e\n","title":"在 Vim 中使用 OpenSSL 处理 Base64 编码的文本"},{"content":"\r\n\r\n### Syncthing 设置便携化\r\n\r\n近期尝试了 Syncthing，实现在 Android 和 Windows 端同步或备份文件，以满足我在 Windows 上备份 Android 的微信接收的文件的要求，在中文的站点上我没有看到对于官方版的便携化方案，在这里补一下。\r\n\r\n在 Windows 上 Syncthing 有三个选择：\r\n\r\n- 官方的 [Syncthing](https://github.com/syncthing/syncthing/releases)\r\n\t- 命令行版本，启动后会打开一个命令行窗口，默认的配置文件在用户文件夹下，如果需要便携化的可以使用命令行参数。\r\n\t- 隐藏命令行窗口：`-no-console`\r\n\t\t- 例：`syncthing.exe -no-console`\r\n\t- 便携化：`-home + 配置路径`，其中配置路径可以是相对路径。\r\n\t\t- 例：`syncthing.exe -home data`：使用 Syncthing 所在路径下的 data 文件夹来保存和读取配置。\r\n\t- 以上参数可同时使用。\r\n\r\n- [SyncTrayzor](https://github.com/canton7/SyncTrayzor/releases)\r\n\t- Windows 的 Syncthing 包装器，默认就是便携的。\r\n\r\n- [Syncthing-GTK](https://github.com/kozec/syncthing-gtk/releases)\r\n\t- 跨平台的 Syncthing 包装器，我没有试用，此处不乱加说明。\r\n\r\n在 Android 端上可以使用 Play 商店上的 [Syncthing](https://play.google.com/store/apps/details?id=com.nutomic.syncthingandroid)。\r\n","cover":"","link":"syncthing-portable.html","preview":"\u003cp\u003eSyncthing 的一些命令行参数。\u003c/p\u003e\n","title":"Syncthing 设置便携化"},{"content":"\r\n\r\n### 使用 IrfanView 将 PDF 的各个页面保存为单独的图片\r\n\r\n近期遇到一个情况，需要将 PDF 内的各个页面保存为单独的图片，比较突然，身边也没有好用的工具，最后发现 IrfanView 可以处理，在这里记一下。\r\n\r\nIrfanView 默认是不支持 PDF 的，但 [官网插件页面](https://www.irfanview.com/plugins.htm) 显示有几个插件可以提供支持，在这里提两个，一个是 pdf.dll，下载下来的文件是 PDF.dll)，一个是 Postscript.dll。两个插件略有不同，只针对 PDF 的话，两者选一即可：\r\n\r\n+ **Postscript.dll**：需要 [Ghostscript](https://github.com/ArtifexSoftware/ghostpdl-downloads/releases) 依赖，能为 IrfanView 添加对 EPS/PS/PDF 文件的支持。\r\n\r\n\t- 实际上 Postscript.dll 只需要 Ghostscript 中的 gsdll32.dll (此处指 x86 版本) 即可，所以可以不安装 Ghostscript，解压提取相应的 dll 即可。\r\n\r\n\t- 将 Postscript.dll 放到 IrfanView 目录下面的 Plugins 文件夹下，之后在 IrfanView 的选项→设置→PlugIns→Postscript 选项 中选择上一步中提取的 dll。\r\n\r\n+ **PDF.dll**：没有其他依赖，只为 IrfanView 增加对 PDF 文件的支持。\r\n\r\n\t- 将 PDF.dll 放到 IrfanView 目录下面的 Plugins 文件夹下，之后在 IrfanView 的选项→设置→PlugIns→PDF 选项中勾选上两个选项即可。\r\n\t\r\n通过插件为 IrfanView 提供了 PDF 文件的读写功能之后，IrfanView 的选项→提取所有帧 就可以将 PDF 文件的所有页面提取成图片，另外也可以用 Irfanview 的命令行选项来转换。\r\n\r\n但是需要注意：**就我个人的使用经验而言，IrfanView 中 PDF 文件的显示和其他的 PDF 阅读器（如 Sumatra PDF）有一定差异，所以提取出来的图片也会有差异，如果有严格的质量要求，最好还是去用其他更专业的软件**。\r\n\r\n","cover":"","link":"irfanviewpdf2pic.html","preview":"\u003cp\u003eIrfanView 加载 PDF 文件的两个插件：PDF.dll 和 Postscript.dll。\u003c/p\u003e\n","title":"使用 IrfanView 将 PDF 的各个页面保存为单独的图片"},{"content":"\r\n\r\n### 使用任务计划程序定时运行程序\r\n\r\n\u003e 本文写于 2020-03-21，文中的提到的 ClashWeb 和 Clash for Windows 均不提供链接。\r\n\r\n\u003e 2020-03-22 更新，今天遇上一次更新失败，补充一个备份功能，更新失败时自动调用备份。\r\n\r\n近期从 Clash for Windows 切换到 ClashWeb 的过程中遇到了一个问题，在 Clash for Windows 中的订阅可以配置定时更新，但在 ClashWeb 中貌似无法实现，近期服务商频繁更换线路，所以只好把 Windows 中的任务计划程序拉出来实现定时更新了。\r\n\r\n在 ClashWeb.ahk 中看到涉及到订阅更新的就是两行：\r\n\r\n\tRunWait, ahkupdateconfig.bat,,Hide\r\n\tRunWait, ahkrestartclash.bat,,Hide\r\n\r\n于是新建一个 AutoUpdate.ahk （运行时需要 Autohotkey [Github](https://github.com/Lexikos/AutoHotkey_L/releases)）内容如下：\r\n\r\n\t; ClashWeb 的路径\r\n\tClashWebPath=D:\\1-Program\\CrossWall\\ClashWeb\\\r\n\t; 需要更新的配置文件的名称\r\n\tProfileName=CordCloud\r\n\t; 配置文件的大小限制，单位是 K（用于判断是否更新是否失败，小于此大小判定为更新失败，继续使用更新前的备份）\r\n\tProfileSizeLimit=100\r\n\t\r\n\tClashWebProfile=%ClashWebPath%\\Profile\r\n\tFileCopy, %ClashWebProfile%\\%ProfileName%.yaml, %ClashWebProfile%\\%ProfileName%.yaml.bak, 1\r\n\t\r\n\tSetWorkingDir, %ClashWebPath%\r\n\tRunWait, ahkupdateconfig.bat,,Hide\r\n\t\r\n\tFileGetSize, YAMLSize , %ClashWebProfile%\\%ProfileName%.yaml, K\r\n\tIF (YAMLSize \u003c ProfileSizeLimit)\r\n\tFileCopy, %ClashWebProfile%\\%ProfileName%.yaml.bak, %ClashWebProfile%\\%ProfileName%.yaml, 1\r\n\t\r\n\tRunWait, ahkrestartclash.bat,,Hide\r\n\tExitapp\r\n\r\n\r\n然后打开任务计划程序，选择右方的创建任务，在弹出的窗口中对计划任务进行编辑：\r\n\r\n![TaskSchedulerAutoUpdate](/images/TaskSchedulerAutoUpdate.png)\r\n\r\n---\r\n\r\n#### 常规\r\n\r\n+ 名称随意填，其他项可以都不动。\r\n\r\n#### 触发器\r\n\r\n+ 我配置的是每天12点，每隔1天发生一次，重复任务间隔5小时，持续时间无限期，其他项不动。\r\n\r\n#### 操作\r\n\r\n+ 启动程序，程序路径填写 Autohotkey.exe 的路径，如：`D:\\1-Program\\AutoHotkey\\AutoHotkeyA32.exe`\r\n+ 参数填写 上面新建的 AutoUpdate.ahk 的路径，如：`D:\\1-Program\\CrossWall\\ClashWeb\\Profile\\AutoUpdate.ahk`。\r\n\r\n#### 条件\r\n\r\n+ 我勾选了 **只有在以下网络连接可用时才启动** ，连接选的是任何连接。\r\n\r\n#### 设置\r\n\r\n+ 我勾选了 **允许按需运行任务**，**如果过了计划开始时间，立即启动任务**，**如果请求后任务还在运行，强行将其停止** 三项。\r\n\r\n之后保存即可，选中新建的任务，点击右方的 **运行** 即可，如有需要，也可以 **导出**。\r\n\r\n","cover":"","link":"taskschedulerautoupdate.html","preview":"\u003cp\u003e使用任务计划程序定时运行脚本，实现 ClashWeb 订阅的定时更新。\u003c/p\u003e\n","title":"使用任务计划程序定时运行程序"},{"content":"\r\n\r\n### 用 Header Editor 重定向奇形怪状的百度贴吧链接\r\n\r\n\u003e 2023-12-02 更新规则地址。\r\n\r\n\u003e 2021-01-23 移除失效的百度云链接，规则内容不变。\r\n\r\n\u003e 2020-02-18 补充 Github 链接。\r\n\r\n现在在 Google 上搜索到的贴吧的地址有各种各样奇怪的开头，包括但不限于：\r\n\r\n\twapp.baidu.com\r\n\tc.tieba.baidu.com\r\n\tdq.teiba.com\r\n\tjump.bdimg.com\r\n\tjump2.bdimg.com\r\n\r\n这些奇形怪状的开头给我带来了两个问题：\r\n\r\n+ 部分地址 [贴吧页面精简](https://greasyfork.org/zh-CN/scripts/23687) 这个脚本无法匹配（`c.tieba.baidu.com`）或是处理效果不佳（`jump.bdimg.com`）\r\n+ 部分地址对应的是移动端页面，在 PC 上显示效果极差（`wapp.baidu.com`）。\r\n\r\n我目前找到的涉及贴吧重定向的有两个工具：\r\n\r\n+ [Header Editor](https://addons.mozilla.org/zh-CN/firefox/addon/header-editor/) 这个扩展相关的 [CingList 规则](https://raw.githubusercontent.com/dupontjoy/customization/master/Rules/HeaderEditor/headereditor-CingList.json) 中有一条涉及贴吧重定向的规则。\r\n\r\n+ Greasyfork 上 [百度贴吧重定向](https://greasyfork.org/zh-CN/scripts/390955) 这个脚本。\r\n\r\n但是截止至我写这篇东西时，相关规则均并未覆盖上面所有链接，今天参照写了一下用于 Header Editor 的规则（一共三条），以下是规则内容，懒得手工加入的可以直接下载导入。\r\n\r\n  + [Github](https://raw.githubusercontent.com/JPLiu/TestFiles/main/Browser/Header-Editor/HE_2020-02-16T07-58-31Z_Tieba.json)\r\n\r\n---\r\n\r\n#### 规则内容\r\n\r\n+ 规则1\r\n\r\n| 规则1    |                                          |\r\n|----------|------------------------------------------|\r\n| 名称     | 贴吧重定向补充1                          |\r\n| 规则类型 | 重定向请求                               |\r\n| 匹配类型 | 正则表达式                               |\r\n| 匹配规则 | `^https?:\\/\\/wapp.baidu.com/mo/q/m?(.*)` |\r\n| 排除规则 |                                          |\r\n| 执行类型 | 常规                                     |\r\n| 重定向至 | `http://tieba.baidu.com/f$1`             |\r\n\r\n+ 规则2\r\n\r\n| 规则2    |                                        |\r\n|----------|----------------------------------------|\r\n| 名称     | 贴吧重定向补充2                        |\r\n| 规则类型 | 重定向请求                             |\r\n| 匹配类型 | 正则表达式                             |\r\n| 匹配规则 | `^https?:\\/\\/(.+)tieba.baidu.com/(.*)` |\r\n| 排除规则 |                                        |\r\n| 执行类型 | 常规                                   |\r\n| 重定向至 | `http://tieba.baidu.com/$2`            |\r\n\r\n+ 规则3\r\n\r\n| 规则3    | 贴吧重定向补充3                     |\r\n|----------|-------------------------------------|\r\n| 名称     | 贴吧重定向补充3                     |\r\n| 规则类型 | 重定向请求                          |\r\n| 匹配类型 | 正则表达式                          |\r\n| 匹配规则 | `^https?:\\/\\/jump2?.bdimg.com/(.*)` |\r\n| 排除规则 |                                     |\r\n| 执行类型 | 常规                                |\r\n| 重定向至 | `http://tieba.baidu.com/$1`         |\r\n\r\n加了这三条规则之后我移除了 [百度贴吧重定向](https://greasyfork.org/zh-CN/scripts/390955) 这个脚本，不过这些规则同样可能没有覆盖所有的奇形怪状地址或者存在一些问题，那些遇到再说吧。\r\n","cover":"","link":"headereditortiebaredirect.html","preview":"\u003cp\u003e用 Header Editor 重定向 c.tieba.baidu.com 等奇形怪状的贴吧链接\u003c/p\u003e\n","title":"用 Header Editor 重定向奇形怪状的百度贴吧链接"},{"content":"\r\n\r\n### 用 uBlock Origin 实现 WorkFlowy 的暗色模式（已过时）\r\n\r\n\u003e 2021-12-12：WorkFlowy 已提供暗色主题，此文已无意义。\r\n\r\n由于新型冠状肺炎防疫的问题，被迫待在家里，闲的无聊去看了一下 [uBlock Origin 的 中文 Wiki](https://github.com/fang5566/uBlock/wiki)，在**过程式修饰规则**一节中发现在 uBlock Origin 的 `:style()` 规则。突发奇想，想用 uBlock Origin 的规则实现 [UserStyles - WorkFlowy Dark](https://userstyles.org/styles/143680/workflowy-dark) 的 CSS 规则的效果。\r\n\r\n在 [UserStyles - WorkFlowy Dark](https://userstyles.org/styles/143680/workflowy-dark) 中可以看到原来的 CSS 规则，按 uBlock Origin 的 `example.com##h1:style(background-color: blue !important)` 的规则格式，改变过来的 uBlock Origin 的静态规则如下：\r\n\r\n\t! D 暗色模式 参考（https://userstyles.org/styles/143680/workflowy-dark）\r\n\tworkflowy.com##body:style(background-color: #121212!important; color: white!important)\r\n\tworkflowy.com##.page:style(background-color: #212121!important; border: 1px solid #000!important)\r\n\tworkflowy.com###header:style(background-color: #3B3B3B!important)\r\n\tworkflowy.com##.project.open.highlighted:style(background-color: #000!important)\r\n\tworkflowy.com##.project.highlighted::before:style(background-color: #3D3D3D!important)\r\n\tworkflowy.com###documentView:style(color: #d8d8d8!important)\r\n\tworkflowy.com##.children:style(border-left: 1px dashed #666!important)\r\n\r\n之前使用 Stylus 订阅的样式规则，在搜索的时候字体显示较难看清，趁着这次改写增加了一条：\r\n\r\n\t! 自定义补充规则\r\n\tworkflowy.com##.contentMatch:style(background-color: #7F7F7F!important; color: white!important)\r\n\r\n显示效果和 Stylus 的效果应该一样，估计大部分的 CSS 规则都可以用 uBlock Origin 的规则实现：\r\n\r\n![WorkFlowy Dark](/images/uBlockOriginDarkWorkFlowy-1.png)\r\n\r\n","cover":"","link":"ublockorigindarkworkflowy.html","preview":"\u003cp\u003e用 uBlock Origin 实现 WorkFlowy 的暗色模式。\u003c/p\u003e\n","title":"用 uBlock Origin 实现 WorkFlowy 的暗色模式（已过时）"},{"content":"\r\n\r\n### Firefox 扩展和脚本清单（2021-12-12 更新）\r\n\r\n\u003e 2023-02-13：时隔一年多的更新。\r\n\r\n\u003e 2021-12-12：时隔大半年的更新。\r\n\r\n\u003e 2021-01-23：时隔一年的更新。\r\n\r\n根据个人使用情况，整理一下目前 Firefox 扩展和脚本清单（部分扩展可能有 Chrome 版）。\r\n\r\n#### 扩展清单\r\n\r\n我个人选择扩展主要有三个关注点：\r\n\r\n+ 在同样满足要求的情况下，优先考虑支持多个浏览器（至少支持 Firefox 和 Chrome）的扩展。\r\n+ 在同样满足要求的情况下，优先考虑配置可以导出的扩展。\r\n+ 在同样满足要求的情况下，优先考虑开源的扩展。\r\n\r\n##### 在用扩展\r\n\r\n| 扩展名                                                                  | 用途                             | 是否在用 | 备注                                                  |\r\n|-------------------------------------------------------------------------|----------------------------------|----------|-------------------------------------------------------|\r\n| [暴力猴][addon-violentmonkey]                                           | 油猴脚本管理器                   | 是       | 配置支持导出                                          |\r\n| [快乐右键][addon-happy-right-click-2]                                   | 解除网页的右键限制               | 是       | 自动解锁站点可以复制保存                              |\r\n| [历史记录自动删除][addon-history-auto-delete]                           | 自动清理浏览历史\u003cbr\u003e（基于正则） | 是       | 清单可以复制保存\u003cbr\u003e只会清理扩展启用期间的记录        |\r\n| [沙拉查词][addon-ext-saladict]                                          | 划词翻译扩展                     | 是       | 配置支持导出                                          |\r\n| [通过 Aria2 下载][addon-download-with-aria2]                            | Aria2 调用扩展                   | 是       | 配置支持导出                                          |\r\n| [Auto Tab Discard][addon-auto-tab-discard]                              | 自动休眠不活跃标签页             | 是       | 配置支持导出                                          |\r\n| [Gesturefy][addon-auto-tab-gesturefy]                                   | 鼠标手势扩展                     | 是       | 配置支持导出                                          |\r\n| [Header Editor][addon-header-editor]                                    | 修改网页的 Header                | 是       | [CingList 规则][addon-header-editor-sub-cing]         |\r\n| [LocalCDN][addon-localcdn]                                              | 将请求重定向到本地资源           | 是       | 配置支持导出                                          |\r\n| [uBlock Origin][addon-ublock-origin]                                    | 广告过滤、样式调整               | 是       | 配置支持导出                                          |\r\n| [Video Speed Controller][addon-videospeed]                              | HTML5 视频播放速度调整           | 是       | -                                                     |\r\n| [Vimium][addon-vimium-ff]                                               | 类 Vim 式操作                    | 是       | 配置支持导出                                          |\r\n| [Firefox Multi-Account Containers][addon-multi-account-containers]      | 多开小号挂课程                   | 是       | -                                                     |\r\n| [集装箱][addon-onejzx]                                                  | 比价、网盘等多个功能             | 否       | 配置支持导出                                          |\r\n| [终结内容农场][addon-content-farm-terminator]                           | 避免误入内容农场                 | 否       | 可用 [uBlacklist](addon-ublacklist) 代替              |\r\n| [Absolute Enable Right Click \u0026 Copy][addon-absolute-enable-right-click] | 解除网页的右键限制               | 否       | 同类扩展很多                                          |\r\n| [History AutoDelete][addon-history-autodelete]                          | 自动清理浏览历史                 | 否       | 支持导出，但正则的匹配似乎有问题                      |\r\n| [History Cleaner][addon-history-cleaner]                                | 自动清理浏览历史                 | 否       | 用 [历史记录自动删除][addon-history-auto-delete] 代替 |\r\n| [pakku：哔哩哔哩弹幕过滤器][addon-pakkujs]                              | 合并过滤哔哩哔哩弹幕             | 否       | 配置支持导出                                          |\r\n| [RSSHub Radar][addon-rsshub-radar]                                      | RSSHub 检索网页订阅源            | 否       | 貌似 Firefox 不能正常使用                             |\r\n| [smartUp手势][addon-smartup]                                            | 手势，拖拽，二维码               | 否       | 配置支持导出                                          |\r\n| [Stylus][addon-styl-us]                                                 | 样式管理器                       | 否       | 配置支持导出                                          |\r\n| [Text Link][addon-text-link]                                            | 文本链接转成可点击链接           | 否       | 貌似触发后占用的内存不会释放                          |\r\n| [uBlacklist][addon-ublacklist]                                          | 隐藏 Google 搜索中无意义的结果   | 否       | 需要自定义或订阅规则                                  |\r\n| [uGet Integration][addon-ugetintegration]                               | uGet 下载调用                    | 否       | 偶尔会出现重复下载的情况                              |\r\n\r\n#### 油猴脚本\r\n\r\n+ 此处脚本名的地址，均为 Greasyfork 或是 脚本自身的官网，Github 等地址。\r\n\r\n| 脚本名                                      | 用途                      | 是否在用 | 备注                                     |\r\n|---------------------------------------------|---------------------------|----------|------------------------------------------|\r\n| [Bilibili Evolved][userjs-Bilibili-Evolved] | 哔哩哔哩 使用优化         | 是       | 配置支持导出                             |\r\n| [RSS+][userjs-rss]                          | 显示当前页面的 RSS 订阅源 | 是       |                                          |\r\n| [去繁留简-繁简转换][userjs-yawf]            | 页面繁简转换              | 是       | 在扩展中设置只在自己常用的繁体站点生效   |\r\n| [药方][userjs-yawf]                         | 微博页面优化              | 否       | 配置支持导出，对微博 V7 的支持还有待提高 |\r\n\r\n\r\n#### 网页样式\r\n\r\n+ 此处脚本名的地址，均为 userstyles 的地址。\r\n\r\n| 样式名                                                  | 用途 | 是否在用 | 备注                           |\r\n|---------------------------------------------------------|------|----------|--------------------------------|\r\n| [Bilibili直播界面调整][userstyles-Bilibili直播界面调整] | -    | 否       | 使用 Bilibili Evolved 脚本代替 |\r\n\r\n\r\n[addon-violentmonkey]:https://addons.mozilla.org/zh-CN/firefox/addon/violentmonkey/\r\n[addon-onejzx]:https://addons.mozilla.org/zh-CN/firefox/addon/onejzx/\r\n[addon-ext-saladict]:https://addons.mozilla.org/zh-CN/firefox/addon/ext-saladict/\r\n[addon-absolute-enable-right-click]:https://addons.mozilla.org/zh-CN/firefox/addon/absolute-enable-right-click/\r\n[addon-auto-tab-discard]:https://addons.mozilla.org/zh-CN/firefox/addon/auto-tab-discard/\r\n[addon-header-editor]:https://addons.mozilla.org/zh-CN/firefox/addon/header-editor/\r\n[addon-header-editor-sub-cing]:https://raw.githubusercontent.com/dupontjoy/customization/master/Rules/HeaderEditor/headereditor-CingList.json\r\n[addon-history-autodelete]:https://addons.mozilla.org/zh-CN/firefox/addon/history-autodelete/\r\n[addon-history-cleaner]:https://addons.mozilla.org/zh-CN/firefox/addon/history-cleaner/\r\n[addon-localcdn]:https://addons.mozilla.org/zh-CN/firefox/addon/localcdn/\r\n[addon-pakkujs]:https://addons.mozilla.org/zh-CN/firefox/addon/pakkujs/\r\n[addon-smartup]:https://addons.mozilla.org/zh-CN/firefox/addon/smartup/\r\n[addon-text-link]:https://addons.mozilla.org/zh-CN/firefox/addon/text-link/\r\n[addon-ublacklist]:https://addons.mozilla.org/zh-CN/firefox/addon/ublacklist/\r\n[addon-ublock-origin]:https://addons.mozilla.org/zh-CN/firefox/addon/ublock-origin/\r\n[addon-ugetintegration]:https://addons.mozilla.org/zh-CN/firefox/addon/ugetintegration/\r\n[addon-videospeed]:https://addons.mozilla.org/zh-CN/firefox/addon/videospeed/\r\n[addon-vimium-ff]:https://addons.mozilla.org/zh-CN/firefox/addon/vimium-ff/\r\n[addon-multi-account-containers]:https://addons.mozilla.org/zh-CN/firefox/addon/multi-account-containers/\r\n[addon-happy-right-click-2]:https://addons.mozilla.org/zh-CN/firefox/addon/happy-right-click-2/\r\n[addon-history-auto-delete]:https://addons.mozilla.org/zh-CN/firefox/addon/history-auto-delete/\r\n[addon-download-with-aria2]:https://addons.mozilla.org/firefox/addon/download-with-aria2/\r\n[addon-auto-tab-gesturefy]:https://addons.mozilla.org/zh-CN/firefox/addon/gesturefy/\r\n[addon-content-farm-terminator]:https://addons.mozilla.org/zh-CN/firefox/addon/content-farm-terminator/\r\n[addon-rsshub-radar]:https://addons.mozilla.org/zh-CN/firefox/addon/rsshub-radar/\r\n[addon-styl-us]:https://addons.mozilla.org/zh-CN/firefox/addon/styl-us/\r\n\r\n[userjs-Bilibili-Evolved]:https://github.com/the1812/Bilibili-Evolved\r\n[userjs-yawf]:https://tiansh.github.io/yawf/\r\n[userjs-rss]:https://greasyfork.org/zh-CN/scripts/373252-rss-show-site-all-rss\r\n\r\n[userstyles-Bilibili直播界面调整]:http://userstyles.org/styles/169578\r\n","cover":"","link":"firefoxaddonlist.html","preview":"\u003cp\u003e个人向的 Firefox 扩展和脚本清单\u003c/p\u003e\n","title":"Firefox 扩展和脚本清单（2023-02-13 更新）"},{"content":"\r\n\r\n### Double Commander 的 Toolbar 自定义命令\r\n\r\n\u003e 2022.11.04 修正了 NewFiles 的调用参数。\r\n\r\nDouble Commander（以下简称“DC”）的 Toolbar，允许用户添加自定义命令，类似 Total Commander 的 usercmd.ini，这里简单说一下相关的配置。\r\n\r\n+ 由于我个人一直使用英语的 DC，所以下述涉及到的说明以英语为准。\r\n+ Toolbar 的配置可以在 Configuration→Options→Toolbar 中看到，可以配置的 Toolbar Button（工具栏按钮）有四种：\r\n\t- Separator 即分割线，是用来调整显示效果的。\r\n\t- Internal command 即内置命令，主要是用来配置 DC 自身提供的命令的。\r\n\t- External command 即外部命令，主要是用来调用外部工具的。\r\n\t- Menu 即菜单，菜单按钮在点击之后，会显示一个菜单，菜单内可以包括其他的 Toolbar Button。\r\n\r\n#### Button 的配置\r\n\r\nToolbar Button 的配置主要包括以下几项：\r\n\r\n| 配置项     | 内容               | 备注                                                                                   |\r\n|------------|--------------------|----------------------------------------------------------------------------------------|\r\n| Icon       | 显示在工具栏的按钮 | 可以使用调用的外部程序的图标。                                                         |\r\n| Tooltip    | 按钮的提示         |                                                                                        |\r\n| Command    | 命令的内容         | 对于 External command 来说就是调用的外部程序的路径。                                   |\r\n| Parameters | 命令的参数         | 对于命令行工具来说，可以调用 DC 内置的各种参数，\u003cbr\u003e 比如 `%fs` 代表当前面版的文件夹。 |\r\n| Start path | 初始路径           |                                                                                        |\r\n| Hot key    | 热键               |                                                                                        |\r\n\r\n以上参数中，Icon、Command、Start path 都支持相对路径。\r\n\r\n#### 可能会用得上的 External command\r\n\r\nInternal command 本身就没有多少有参数的，这里就不说了。以下是一些我个人配置的 External command，请注意：\r\n\r\n- Command 在表格中只写程序名，实际配置需写程序路径（可使用 DC 的相对路径）。\r\n- Icon 统一和 Command 一致，表格中不再列出，\r\n\r\n| Tooltip                   | Command      | Parameters                                |\r\n|---------------------------|--------------|-------------------------------------------|\r\n| 压缩/更新到来源文件夹 rar | WinRAR.exe   | `u -ma4 -ep1 %ds\\%os.rar  %ps`            |\r\n| 压缩/更新到来源文件夹 7z  | 7zG.exe      | `u %ds\\%os.7z -uq0r2x2y2z1 @%Ls`          |\r\n| 压缩/更新到来源文件夹 zip | 7zG.exe      | `u %ds\\%os.zip -uq0r2x2y2z1 -mcu=on @%Ls` |\r\n| 解压到当前文件夹          | 7zG.exe      | `x %ps -o%Ds\\`                            |\r\n| IrfanView 转换图片为 png  | i_view32.exe | `%ps /convert=$D$N_convert.png`           |\r\n| IrfanView 压缩图片 jpg    | i_view32.exe | `%ps /jpgq=50 /convert=$D$N_convert.jpg`  |\r\n| 使用 Vim 比较文件         | gVim.exe     | `-d %p`                                   |\r\n| NewFiles 新建文件         | NewFiles.exe | `%/1%Ds`                                  |\r\n| NewFiles 新建文件夹       | NewFiles.exe | `-onlyDir %/1%Ds`                         |\r\n| NirCmd 创建快捷方式       | nircmd.exe   | `shortcut %ps %Dt %os`                    |\r\n\r\n这些命令有些还是有问题的，比如压缩的命令就不支持选中多个文件压缩，NewFiles 的命令在空文件夹会报错等，对部分程序的参数我也不熟，先凑合着用，之后看看有没有办法改……\r\n\r\n#### Menu\r\n\r\n最后说一下一点关于 Menu 的，假设 Menu 按钮配置了对应热键，在 DC 中本身配置为隐藏 Toolbar 的情况下，Menu 依然会正常显示，显示效果如下：\r\n\r\n![Menu 显示](/images/DoubleCMDToolbar1.png)\r\n","cover":"","link":"doublecmdtoolbar.html","preview":"\u003cp\u003e说一下 Double Commander 的 Toolbar 的一些配置。\u003c/p\u003e\n","title":"Double Commander 的 Toolbar 自定义命令"},{"content":"\r\n\r\n### 在 Vim 中使用 Open-browser.vim 来替换自带的 gx 命令\r\n\r\n\u003e 2021-12-26 Vim 已解决此问题，没有特殊需要的话，不需要安装 Open-browser.vim 了。\r\n\r\n在 Vim 中，使用 `gx` 命令是可以打开当前光标下的链接的，但是从大约8.1.1800的版本开始，Vim 更新了自带的 netrw 插件之后，在 Vim 中 `gx` 命令就不正常了，还有不少人和我一样 Github 上开了 issue，Vim 最近更新了8.2的版本，但是截止至目前，这个问题也还没有得到解决……\r\n\r\n在 Github 上有人给出了一个处理方案：安装 [Open-browser.vim](https://github.com/tyru/open-browser.vim)，代替 Vim 自带的 `gx` 命令。\r\n\r\n- 使用 Vim-Plug 之类的插件管理器，安装 Open-browser.vim 插件。使用 Vim-Plug 的话可以在配置文件上加一行，使用其他插件管理器的就不说了。\r\n\r\n        Plug 'tyru/open-browser.vim'\r\n\r\n- 安装完成之后，在 Vim 的配置文件中增加以下内容：\r\n\r\n        let g:netrw_nogx = 1 \" disable netrw's gx mapping.\r\n        nmap gx \u003cPlug\u003e(openbrowser-smart-search)\r\n        vmap gx \u003cPlug\u003e(openbrowser-smart-search)\r\n\r\n- 之后，在链接上使用 `gx` 命令，应该就能正常打开光标下的链接了\r\n","cover":"","link":"vim-open-browser.html","preview":"\u003cp\u003e在 Vim 中使用 Open-browser.vim 来替换自带的 gx 命令，解决目前 Vim 中 gx 命令不正常的问题。\u003c/p\u003e\n","title":"在 Vim 中使用 Open-browser.vim 来替换自带的 gx 命令"},{"content":"\r\n\r\n### 用火绒拦截指定程序的联网\r\n\r\n我在大学期间使用过接近一年的 VSE，当时曾经根据卡饭上面的贴子去配置 VSE 的规则实现程序联网控制的功能，上一次遇上 QQ拼音弹双十一广告的时候，为了拦截广告安装了火绒，最近尝试使用火绒对程序的联网进行控制，在这里写一下记录。\r\n\r\n首先，火绒本身是支持程序的联网控制的，在 防护→系统防护→联网控制 处可以打开，然后在 安全设置→系统防护→联网控制 可以看到相应的规则，但是启用这个功能之后我遇到了两个问题：\r\n\r\n- 弹窗太多，启用这个功能之后，所有程序联网火绒都会弹一次提示，对我这种懒人不太友好，特别是我的绝大部分软件都是允许联网的情况下。\r\n\r\n- 对于程序的判定，火绒使用程序的路径来判定的，一旦程序所在的文件夹有变化，火绒又会重新弹窗，最典型的就是 WPS，每更新一个版本，文件夹都会变一次，严格来说这不是火绒的问题或是缺点，但是对我这种只需要拦截特定程序联网的用户来说，比较麻烦，而且备份之后也很难保证在其他电脑上能用。\r\n\r\n后来我找到了一个间接的解决方法，下面以拦截 ShareX 联网为例简单说下步骤：\r\n\r\n- 打开火绒 防护中心→高级防护→IP协议控制 的功能。\r\n\r\n- 打开 安全设置→高级防护→IP协议控制 中选择新增规则\r\n\r\n\t- 配置模版：保持默认即可\r\n\t- 规则名称：随意\r\n\t- 应用程序：按类似 `*\\ShareX.exe` 的格式添加需要拦截的程序名（在程序名前面加`*\\`）\r\n\t- 操作：阻止\r\n\t- 方向：所有\r\n\t- 协议：TCP/UDP\r\n\t- 本地IP、本地端口、远程IP、远程端口：留空\r\n\t- 优先级：保持默认\r\n\r\n- 保存规则之后，ShareX 应该就无法联网了。\r\n\r\n\r\n![新增规则页面](/images/huorongblockconnection-1.png)\r\n\r\n![拦截日志页面](/images/huorongblockconnection-2.png)\r\n\r\n","cover":"","link":"huorongblockconnection.html","preview":"\u003cp\u003e简单说一下用火绒拦截指定程序的联网的间接方法\u003c/p\u003e\n","title":"用火绒拦截指定程序的联网"},{"content":"\r\n\r\n### QQ拼音也弹双11的广告了\r\n\r\n10月22日发现晚上在哔哩哔哩看视频看到一半，桌面右下角突然弹出来一个大大的双十一红包的广告，第一反应以为是 WPS 的广告，但看了看我还没过期的 WPS 的超会，WPS 应该还不至于无下限到给会员弹这么大的广告……\r\n\r\n拉出 Everything，搜索 `*.jpg|png`，按修改时间排序，结果看了半天看到 QQ拼音的文件夹里面最近多了个 DownLoadImg.png，一打开就是一张广告图片……\r\n\r\nGoogle 上一搜索，发现已经有不少人遇到这个广告，之后在卡饭上看到了 [这个帖子](https://bbs.kafan.cn/thread-2162732-1-1.html)……\r\n\r\n好吧，还是要用国产对付国产，安装火绒。\r\n\r\n+ 拉黑 `dl.qqpy.sogou.com/business/`。\r\n\r\n+ 禁止写入，读取，修改 `C:\\ProgramData\\Tencent\\QQPinyin\\Pop\\*`。\r\n\r\n收工，火绒的自定义规则真是让我想起了大学玩 VSE 的日子。\r\n","cover":"","link":"qqpinyin1111.html","preview":"\u003cp\u003e用火绒的自定义规则拦截QQ拼音双十一右下弹窗\u003c/p\u003e\n","title":"QQ拼音也弹双11的广告了"},{"content":"\r\n\r\n### 在 foobar2000 中使用 FFmpeg 作为格式转换的编码器\r\n\r\n\u003e 2020-09-29 更新 [FFmpeg](https://ffmpeg.org/download.html) 链接。\r\n\r\n在 [foobar2000](http://www.foobar2000.org/download) 官网的安装包中，自带了一个 `foo_converter.dll` 的插件，但是当你尝试使用右键菜单中的 `Convert` 的功能时，foobar2000 会提示没有编码器，foobar2000 的官方上实际上提供了一个[编码器包](https://www.foobar2000.org/encoderpack)下载，只需要下载安装或解压到 foobr2000 文件夹下的 encoder 文件夹即可。\r\n\r\n但是由于在上一篇文章中提到的，我选择了 [FFmpeg Decoder Wrapper](http://www.foobar2000.org/components/view/foo_input_ffmpeg) 加 FFmpeg 来播放 foobar2000 本身不支持的格式，而 FFmpeg 同时也可以作为 foobr2000 的格式转换编码器使用，本文主要是说一下具体的配置。\r\n\r\n#### 涉及文件\r\n\r\nFFmpeg: [FFmpeg](https://ffmpeg.org/download.html)\r\n\r\n#### 插件配置\r\n\r\n和上一篇文章一样，本文的描述以官网的英文版 foobar2000 为准。\r\n\r\n+ 解压下载回来的 FFmpeg Build。\r\n\r\n+ 在 foobar2000 中对任意音频文件点击右键→`Convert`→`Quick Convert`→在弹出的窗口中点击 `Add New`→在配置中按下述配置（以 320kbps 的 MP3 为例）。\r\n\r\n| 选择                       | 填写内容                         |\r\n|----------------------------|----------------------------------|\r\n| Encoder                    | Custom                           |\r\n| Encoder file               | 填写 FFmpeg 中 ffmpeg.exe 的路径 |\r\n| Extension                  | MP3（需要转换的格式的文件后缀）  |\r\n| Parameters                 | `-i - -acodec mp3 -ab 320k %d`   |\r\n| Format is                  | lossy                            |\r\n| Highest BPS mode supperted | 32                               |\r\n| Encoder name               | 随意，这个是显示上的             |\r\n| Bitrate (kbps)             | 随意，这个是显示上的             |\r\n| Setting                    | 随意，这个是显示上的             |\r\n\r\n![配置页](/images/foobar2000ffmpegencoder-1.png)\r\n\r\n设置完成后保存，在 `Quick Convert` 页面，选择自己输入的 Encoder name 的编码器，点击 `Convert` 就可以进行格式转换了。\r\n","cover":"","link":"foobar2000ffmpegencoder.html","preview":"\u003cp\u003e简单介绍一下在 foobar2000 中使用 FFmpeg 作为格式转换编码器的方法\u003c/p\u003e\n","title":"在 foobar2000 中使用 FFmpeg 作为格式转换的编码器"},{"content":"\r\n\r\n### FFmpeg Decoder Wrapper 简单介绍\r\n\r\n\u003e 2020-09-29 更新 [FFmpeg](https://ffmpeg.org/download.html) 链接。\r\n\r\n[foobar2000](http://www.foobar2000.org/download) 是我个人很喜欢的音频播放器，[FFmpeg Decoder Wrapper](http://www.foobar2000.org/components/view/foo_input_ffmpeg) 是 foobar2000 官网上提供的一个允许 foobar2000 调用 FFmpeg 来播放一些 foobar2000 自带解码器无法播放的音频格式（比如：官网的版本不支持播放 APE 文件）。\r\n\r\n#### 涉及文件\r\n\r\nFFmpeg Decoder Wrapper: [foobar2000 官网链接](http://www.foobar2000.org/components/view/foo_input_ffmpeg)\r\n\r\nFFmpeg: [FFmpeg](https://ffmpeg.org/download.html)\r\n\r\n#### 插件安装\r\n\r\n以下描述以官网的英文版为准（[Asion-Wu 博客](http://blog.sina.com.cn/go2spa) 提供的汉化版本身就带有一些比较常见的 APE，DTS 的解码器，基本不需要这个 FFmpeg Decoder Wrapper 这个插件）。\r\n\r\n+ 解压下载回来的 FFmpeg Build。\r\n\r\n+ 在 foobar2000 的 `Library`→`Configure`→`Components`→点击右侧的 `Install` 按钮→选择下载回来的 `FFmpeg Decoder Wrapper.fb2k-component`→点击 `Apply`→重启 foobar2000。\r\n\r\n+ 在 foobar2000 的 `Library`→`Configure`→`Playback`→`Decoding`→`FFmpeg Decoder Wrapper`→右侧 `FFmpeg installation folder` 填入解压的 FFmpeg Build 解压后的文件夹中的 Bin 文件夹的路径→路径下方显示 ffmpeg.exe and ffprobe.exe found in the specified folder 即表示配置成功。\r\n\r\n+ 在 foobar2000 的 `Library`→`Configure`→`Playback`→`Decoding`→`FFmpeg Decoder Wrapper`→右侧选择 foobar2000 自带解码器不支持的格式，如 `*.APE`，foobar2000 就可以正常播放了。\r\n\r\n\r\n+ 如有有默认配置中没有的格式，亦可以尝试自行添加，一般情况下 FFmpeg 应该都可以播放。\r\n\r\n![配置页](/images/foobar2000ffmpegdecoderwrapper.png)\r\n\r\n#### 附注\r\n\r\n实际上和汉化版一样去安装 [Monkey's Audio Decoder](http://www.foobar2000.org/components/view/foo_input_monkey) 等几个解码器插件也可以，但我感觉 FFmpeg 可能会更通用些，不需要一个解码器一个解码器去安装，只要配置就好，也可以当成编码器用，缺点是 FFmpeg 的体积会比那些解码器插件要大得多。\r\n","cover":"","link":"foobar2000ffmpegdecoderwrapper.html","preview":"\u003cp\u003e简单介绍一下 foobar2000 的 FFmpeg Decoder Wrapper 插件\u003c/p\u003e\n","title":"FFmpeg Decoder Wrapper 简单介绍"},{"content":"\r\n\r\n### You-Get 和 Youtube-DL 使用本地播放器播放在线视频\r\n\r\n最近在尝试用 You-Get 和 Youtube-DL 识别在线网站的视频链接并使用本地播放器进行（如 VLC）播放，看了一下文档，两者的写法基本如下：\r\n\r\n+ You-Get\r\n\r\n    不需代理：\r\n\r\n        you-get.exe -p %player% %URL%\r\n\r\n    使用代理（播放器需要单独设置代理）：\r\n\r\n        you-get.exe --http-proxy 127.0.0.1:1080 -p %player% %URL%\r\n\r\n+ Youtube-DL\r\n\r\n    不需代理：\r\n\r\n        youtube-dl.exe -o - \"%URL%\" | %player% -\r\n\r\n    使用代理（播放器不需要单独设置代理）：\r\n\r\n        youtube-dl.exe --proxy socks5://127.0.0.1:1080/ -o - \"%URL%\" | %player% -\r\n\r\n其中，`%player%` 为播放器路径，`%URL%` 为视频链接，但是实测并不是所有视频网站都支持。\r\n\r\n\r\n按我个人的理解，You-Get 和 Youtube-DL 两者在传递视频流时的做法略有不同。\r\n\r\n+ You-Get 的做法实际上是传递文件链接由播放器自己下载播放；而 Youtube-DL 的做法则是自行下载文件并使用视频播放器进行播放。\r\n\r\n+ 上一点的差异主要影响两点。\r\n\r\n    + 一是对于 YouTube 这类需要代理访问的视频网站的视频，在为 You-Get 设置代理的同时，由于 You-Get 只传递链接，播放器需要设置使用代理之后才能下载并播放；Youtube-DL 的做法则只需要配置 Youtube-DL 使用代理即可，因为播放器实际播放的是 Youtube-DL 下载回来的文件。\r\n\r\n    + 二是在使用 You-Get 解析并使用播放器播放时，播放的视频是分段的，而且只要视频网站的解析后地址支持，播放器的进度条可以随意拖动；而 Youtube-DL 由于传递的是下载回来的文件，拖动进度条仅能在已下载的部分拖动。\r\n\r\n放两张图片：\r\n\r\n![You-Get 本地播放 Youku](/images/yougetyoutubedlvlc1.jpg)\r\n\r\n![Youtube-DL 本地播放 Youku](/images/yougetyoutubedlvlc2.jpg)\r\n","cover":"","link":"yougetyoutubedlvlc.html","preview":"\u003cp\u003e调用本地播放器来直接播放部分在线网站视频的方法。\u003c/p\u003e\n","title":"You-Get 和 Youtube-DL 使用本地播放器播放在线视频"},{"content":"\r\n\r\n### All in One Runtimes 简要介绍\r\n\r\n在[我的软件清单](mylist.html)中提到过 IT 天空出品的 [IT天空一键运行库（GoRuntime）](https://www.itsk.com/idata/redirect.php?id=goruntime)，GoRuntime 在安装时默认会锁定主页，需要在右上角的位置点击取消，由于运行库这种东西一般就是装系统的时候安装一次，之后很少会再变动，也不算很麻烦。最近发现了 All in One Runtimes（[官网](https://www.sereby.org/site/All%20in%20One%20Runtimes\u0026lang=en)，个人感觉更好。\r\n\r\nAll in One Runtimes（[官网](https://www.sereby.org/site/All%20in%20One%20Runtimes\u0026lang=en)是一款运行库整合包，整合了 VC 运行库，Net，DirectX 9.0c 等一些常用的运行库，还包括 JRE8，Adobe Flash 等，但是**没有中文**。\r\n\r\nAll in One Runtimes 的界面如下（由于我已经安装了 VC 等运行库，这里看到的项目会少一点）：\r\n\r\n![All in One Runtimes 界面](/images/AiO-Runtimes1.png)\r\n\r\n- 右上角的 Alle 是全选，下方的两个按钮分别是立即安装和暂停。\r\n\r\n#### 使用建议\r\n\r\n以下的使用建议基于我个人的观点，可能不适用于所有人。\r\n\r\n- All in One Runtimes 在双击安装包后会解压所有运行库到 C 盘下的 AiO-Files 文件夹，我个人不太喜欢，更推荐新建文件夹，然后直接用解压软件解压 All in One Runtimes 的安装包，然后双击解压的文件中的 WinPKG.exe。\r\n\r\n- 双击之后，All in One Runtimes 会倒计时（时间在 暂停 按钮旁边），倒计时结束会自动安装当时勾选的内容，如果有不需要的内容，最好先暂停倒计时，勾选之后再点击立即安装。\r\n\r\n#### 关于 WinPKG.xml。\r\n\r\n- All in One Runtimes 对每一个可选安装项目都有一个默认的配置，比如对于 Adobe Shockwave Player 默认是勾选的，而 Adobe Flash Player 是默认不勾选的。而对于这个默认配置是可以通过一个建立叫 WinPKG.xml 的文件进行修改，这个文件需要放置在 WinPKG.exe 的所在目录下。\r\n\r\n- WinPGK.xml 的格式如下：\r\n\r\n        \u003csettings maximized=\"0\"\u003e\r\n        \u003ctimer value=\"40\" enabled=\"1\" /\u003e\r\n        \u003cset component=\"basicruntimes\" checked=\"0\" /\u003e\r\n        \u003cset component=\"jre8\" checked=\"0\" /\u003e\r\n        \u003cset component=\"AdobeFlash\" checked=\"0\" /\u003e\r\n        \u003cset component=\"AdobeShock\" checked=\"0\" /\u003e\r\n        \u003cset component=\"msjsharp\" checked=\"0\" /\u003e\r\n        \u003cset component=\"silver\" checked=\"0\" /\u003e\r\n        \u003c/settings\u003e\r\n\r\n其中 第一行是 maximized 控制界面显示的，我个人推荐是 0，第二行的 value 是倒计时的时长，enabled 是是否启用倒计时，后边的 component 则是对每个可选安装项目的是否勾选（0 为不勾选，1 为勾选）。\r\n\r\n需要注意的是，如 All in One Runtimes 可选安装项目在 WinPKG.xml 中未设置是否勾选时，All in One Runtimes 会使用默认的配置，比如我在上方没有对 VC运行库进行设置，而 All in One Runtimes 对 VC运行库 是默认安装的，则在系统未安装 VC 运行库时，会显示并自动勾选对应选项。\r\n\r\n可选安装项目对应的 component id 名可以在安装界面的 Detailliert（详细）页面看到，也可以在解压后的对应的 Net 或 Packages 中对应项目文件夹下的 package.xml 中找到，部分可选安装项目的对应 component id 如下：\r\n\r\n| 安装项目                               | 对应 component id |\r\n|----------------------------------------|-------------------|\r\n| Allgemeine Runtime Dateien             | basicruntimes     |\r\n| Microsoft DirectX 9.0c Redistributable | msdx9             |\r\n| Adobe Flash Player                     | AdobeFlash        |\r\n| Java Runtime Environment 8             | jre8              |\r\n| Microsoft Visual J-Sharp               | msjsharp          |\r\n| VC Runtimes 2005                       | msvc2005          |\r\n| VC Runtimes 2008                       | msvc2008          |\r\n| VC Runtimes 2010                       | msvc2010          |\r\n| VC Runtimes 2012                       | msvc2012          |\r\n| VC Runtimes 2013                       | msvc2013          |\r\n| VC Runtimes 2017                       | msvc2017          |\r\n| Adobe Shockwave Player                 | AdobeShock        |\r\n| Microsoft Silverlight                  | silver            |\r\n\r\n","cover":"","link":"aio-runtimes.html","preview":"\u003cp\u003e简单介绍一下 All in One Runtimes，以及其相关的 WinPKG.xml 配置。\u003c/p\u003e\n","title":"All in One Runtimes 简要介绍"},{"content":"\r\n\r\n### KeePass 中文语言包\r\n\r\n\u003e 2021-01-23：KeePass 每次更新，各个位置的热键都会变，懒得跟进了，我个人直接改用英文版，故停止更新。\r\n\r\n\u003e 2024-01-23：移除下载链接。\r\n\r\n我使用 KeePass 作为密码管理器到目前大约有 6 年了，KeePass 近期更新了 2.42 的版本，而 KeePass 中文语言包目前的版本仍然是 2.40 的版本，由于 2.42 版本的 KeePass 使用 2.40 的版本中文语言包界面有些地方显示是英文，于是抽空更新了一下 KeePass 的 2.42 的中文语言包自用。\r\n\r\n大部分的翻译都是直接沿用 2.40 版本的翻译，另外：\r\n\r\n- 修正了一些没有翻译和翻译文本位置不对的地方。\r\n- 补充了一些之前没有的在英文版本中可用 ALT 键触发的字母热键。\r\n- 一些和英文版不一样的字母热键全部参考英文版修改，所以有些地方和官网目前的 2.40 不一致。\r\n\r\n+ 190607 调整了部分文字输入框覆盖的问题\r\n\r\n+ 190911 更新至 2.43。\r\n\r\n+ 200121 更新至 2.44。\r\n\r\n+ 200508 更新至 2.45，更新下载链接为 Github 的链接。\r\n\r\n+ 200911 更新至 2.46，下载链接不变。\r\n\r\n目前没有计划长期更新，也没有和目前的维护人联系，在这里对之前所有中文语言包维护人表示感谢。\r\n\r\n下载链接: （已移除）\r\n\r\n放两张图吧：\r\n\r\n![官网目前 2.40 语言包的效果](/images/KeePassLanguage-1.png)\r\n\r\n![我私自更新的语言包的效果](/images/KeePassLanguage-2.png)\r\n\r\n","cover":"","link":"keepasslanguageupdate.html","preview":"\u003cp\u003e私自更新了 KeePass 的中文语言包。\u003c/p\u003e\n","title":"私自更新的 KeePass 中文语言包（停止更新）"},{"content":"\r\n\r\n### 2019年我的 RSS 订阅方式\r\n\r\n+ 2021 年 1 月更新：\r\n    - 本文提到的部分内容已过时，新方式请见[2021 年我的 RSS 订阅方式](RSS2021.html)。\r\n\r\n自从 Google 关闭 Google Reader 以来，RSS 这种阅读方式是日渐式微了，国内很多的内容平台原生并不支持 RSS，需要通过各种各样奇怪的方式解决，我个人目前仍然很喜欢使用 RSS，本文主要整理一下目前我个人对于常用平台的 RSS 订阅方式。\r\n\r\n#### 前提\r\n\r\n本人使用的 RSS 阅读器是 Inoreader，在 PC 上会用的是网页版，在 Android 使用的是第三方的 FeedMe，所以以下部分内容可能并不适用于其他的阅读器。\r\n\r\n#### 常见 RSS 订阅源生成服务\r\n\r\n- [RSSHub](https://docs.rsshub.app/)\r\n    - RSSHub 可以说是目前最强的 RSS 订阅源生成服务，支持微信，知乎，哔哩哔哩，微博，简书等大批平台，还有一些网站，大学的通知等。\r\n    - 对于微信，我个人目前推荐的是 RSSHub 的 WeMP 订阅源，输出的订阅是全文的。\r\n    - 对于微博，我个人目前推荐的是 RSSHub 的方案2。\r\n\r\n- [Reabble](http://reabble.com/help)\r\n    - 这个页面上也提供了一些微信和网站的 RSS 订阅源，基本上都是全文输出的。\r\n\r\n- [各种转 RSS 服务](https://rss.lilydjwg.me/)\r\n    - 这个页面提供知乎专栏和知乎动态的 RSS 订阅，目前我个人使用过程中发现专栏的订阅偶尔会无法输出全文，动态则不会。\r\n    - Inoreader 本身是支持知乎专栏的订阅的，但是大约是在18年年末，19年初的时候开始就不支持全文输出了。\r\n\r\n- 其他平台\r\n    - Github：Inoreader 本身支持。\r\n    - SourceForge：平台本身提供 RSS。\r\n\r\n#### 不常见的网站的RSS订阅源生成服务\r\n- [FEED43](https://feed43.com/)\r\n    - 按照需要给网页生成订阅源，但是需要有一点点的HTML基础，教程：[利用 Feed43，将任意网页制作成 RSS 订阅源 - 少数派](http://sspai.com/34320)\r\n\r\n#### 小技巧\r\n\r\nAndroid 端上我使用的 FeedMe 客户端，可以设置过滤条件，将符合条件的条目自动标记为已读或者未读，功能类似于 Inoreader 专业版上提供的规则功能，也不需收费。\r\n\r\n![Inoreader](/images/RSS2019-1.jpg)\r\n\r\n","cover":"","link":"rss2019.html","preview":"\u003cp\u003e简单说一下目前（2019 年）主要使用的 RSS 订阅源生成服务。\u003c/p\u003e\n","title":"2019 年我的 RSS 订阅方式（已过时）"},{"content":"\r\n\r\n### 在 Firefox 中默认使用网页版QQ邮箱处理邮箱链接\r\n\r\nFirefox 在默认配置下，提供有以下四个处理邮箱链接的选项：\r\n\r\n1. 使用系统的默认程序（默认）\r\n\r\n2. 使用 Gmail\r\n\r\n3. 使用 Yahoo!邮箱\r\n\r\n4. 使用其他\r\n\r\n但是我个人并不使用本地的邮箱客户端，所以选项1和4对我来说无用，在 Windows 10 上，选项1还会打开系统自带的邮件应用，需要手工关闭，而选项2和选项3的 Gmail 和 Yahoo!邮箱均不是我的主力邮箱，对我也不适用。\r\n\r\n最近找到了一个还不错的处理方法，请注意，我个人使用一般常用的只有QQ邮箱，所以以下方案只保证对QQ邮箱有用，不保证适用于其他邮箱。\r\n\r\n- 登录 QQ 邮箱网页版→设置→常规→点击“电子邮件链接打开方式”栏目下的“使用QQ邮箱打开…”按钮。\r\n![QQ邮箱](/images/FirefoxQQMail1.png)\r\n\r\n- 点击后，Firefox 会提示使用增加 使用QQ邮箱 处理的选项，确认。\r\n\r\n- 打开 Firefox 的选项→常规页面，下拉到“应用程序”→对 mailto 内容类型选择“使用 QQ邮箱”这个选项。\r\n![Firefox mailto](/images/FirefoxQQMail2.png)\r\n\r\n之后再点击网页上的邮箱链接时，Firefox 会自动打开QQ邮箱写邮件的页面。\r\n\r\n","cover":"","link":"firefoxqqmail.html","preview":"\u003cp\u003e在 Firefox 的应用程序页面，配置使用QQ邮箱处理 mailto 链接。\u003c/p\u003e\n","title":"在 Firefox 中默认使用网页版QQ邮箱处理邮箱链接"},{"content":"\r\n\r\n### 配置 Double Commander 压缩 rar 压缩文件的功能\r\n\r\n我个人是不喜欢使用 rar 格式，习惯上更喜欢 7z，可是问题是公司购买了 WinRAR 的使用许可，日常工作中也基本上以 rar 格式进行流转，导致我不得不考虑压缩为 rar 文件，而在 Double Commander(以下简称 DC)中，默认是没有压缩为 rar 的功能的，需要配置。\r\n\r\n配置需要用到 WinRAR，具体可以在 [中文官网](http://www.winrar.com.cn/)，这里我放的地址是中文版的官网，下载安装的话会有广告，请知悉。\r\n\r\n如果是已经安装 WinRAR 的电脑，DC 应该是直接可以压缩处理 rar 文件的。但是我个人并不希望安装 WinRAR，所以以下做法是我仅使用 rar.exe 这个文件实行命令行压缩的方案，方案同时适用于不愿意安装 WinRAR，但是又不希望使用命令行的 rar.exe，希望使用 WinRAR.exe 的情况。\r\n\r\n#### rar 压缩配置\r\n\r\n- 解压下载的 WinRAR 安装包，注意是解压，不是安装，保留解压的到 rar.exe，其他文件全部删除。\r\n    - 如果希望使用图形界面的 WinRAR.exe，解压其他文件不要删除。\r\n\r\n- 在 DC 界面的 Configuration→Options→Plugins→Plugins WCX 页面，选中自带的 unrar.wcx，点击 Configure 配置。\r\n\r\n- 在弹出的窗口中的 Path to WinRAR executable 配置为 rar.exe 的路径。\r\n    - 如果希望使用图形界面的 WinRAR.exe，路径配置应该为 WinRAR.exe 的路径。\r\n\r\n- 请注意，由于目前的 WinRAR 默认配置是压缩为 rar5，如果是要压缩为 WinRAR 较为兼容的老格式，需要在 Additional parameters 中输入 `-ma4`。\r\n\r\n![配置窗口](/images/DoubleCMDrar1.png)\r\n\r\n- 保存配置，此时 DC 应该可以正常处理 rar 文件了。\r\n\r\n![压缩窗口](/images/DoubleCMDrar2.png)\r\n\r\n![命令行压缩](/images/DoubleCMDrar3.png)\r\n\r\n图形界面的压缩界面就不放了。\r\n","cover":"","link":"doublecmdrar.html","preview":"\u003cp\u003e使用 rar.exe 配置 Double Commander 压缩 rar 压缩文件的功能。\u003c/p\u003e\n","title":"配置 Double Commander 压缩 rar 压缩文件的功能"},{"content":"\r\n\r\n### 解决 Double Commander 部分 zip 压缩包文件名乱码的问题（部分内容已过时）\r\n\r\n\u003e 2020.05.23 发现这个方法并不能完全解决乱码的问题，部分压缩包可以，部分压缩包不行，暂时还没有找到更好的方案。\r\n\r\n\u003e 2021.01.24 新版的 Double Commander 已经可以不依赖插件，正常处理我之前提到的有问题的文件，本文的配置仍然可用。\r\n\r\n使用 Double Commander 替换 Total Commander 已有一段时间了，使用过程中发现了一个针对 zip 压缩文件的问题，Double Commander(以下简称 DC)自带的 zip 插件 zip.wcx，无法正常处理某一些 zip 包，文件名显示乱码，我个人试着排查了一下，应该与 zip 压缩文件中针对中文文件名编码的选择有关，以命令行 7-Zip 压缩的 Zip 包为例，如果压缩参数中没有 `-mcu=on`，且压缩文件中的文件名有中文，DC 默认配置的情况下，文件名会乱码，如下图：\r\n\r\n![zip 包内的中文文件名 乱码](/images/DoubleCMDTotal7zip1.png)\r\n\r\n\u003e 我在 DC 上提了这个问题，作者的反馈是：没有以 UTF-8 编码的 ZIP 压缩包，在系统的区域设置与 ZIP 的区域设置不一致的情况下，DC 是不能正常打开的。\r\n\r\n本身我使用 zip 包的情况很少，但是，坚果云下载多个文件生成的压缩包正好就是这种 DC 无法处理的 zip 包，每次我都要用右键菜单去找压缩工具解压，有点麻烦，针对这个问题，我曾经尝试过两个解决办法：\r\n\r\n- 方法 1：停用 zip.wcx，并在 DC 自带的 sevenzip.wcx 配置 zip 的处理。\r\n    - 这个方法有一个问题，配置之后 DC 可以正常解压 zip 压缩包，但是无法压缩文件为 zip，同时其他的删除 zip 包内文件的功能也做不到。\r\n\r\n- 方法 2：停用 zip.wcx，安装 Total7zip 插件替代 zip.wcx。\r\n    - [Total7zip](https://www.ghisler.com/plugins.htm)：点击链接可以进入 TC 官网的插件页面，搜索 Total7Zip 即可找到对应插件。\r\n\r\n这里主要说一下方法 2：\r\n\r\n#### 安装 Total7zip\r\n\r\nTC 安装插件只需要按回车打开下载的插件的压缩包，但是 DC 需要手工添加。\r\n\r\n- 解压下载的 Total7zip 压缩包，个人建议解压到 DC 目录下的 Plugins 目录下的 WCX 文件夹。\r\n\r\n- 在 DC 界面的 Configuration→Options→Plugins→Plugins WCX 页面点击 ADD，选择解压的 Cloud 插件的文件夹中的 Total7zip.wcx，64 位 DC 请选择 Total7zip.wcx64，即可完成插件安装，此时会提示关联的扩展名，输入 zip。\r\n\r\n- Total7zip 自带的 7-Zip 套件的版本比较旧，可以自行下载最新的 [7-Zip](https://www.7-zip.org/) 安装包，右键解压后复制对应文件替换更新。\r\n\r\n#### 配置 Total7zip 处理 zip\r\n\r\n- 在 DC 界面的 Configuration→Options→Plugins→Plugins WCX 页面，选中自带的 zip.wcx，Disable 停用。\r\n\r\n- 在 DC 界面的 Configuration→Options→Plugins→Plugins WCX 页面，选中自带的 zip.wcx，点击 Tweak，在配置页面配置 zip 的处理，我个人的配置是参照 zip.wcx 对 zip 格式的配置设置的。\r\n\r\n![zip 处理配置](/images/DoubleCMDTotal7zip2.png)\r\n\r\n- 需要注意的是，在 DC 自带的 zip.wcx 中，处理 zip 之外，还有配置其他格式的处理，停用 zip.wcx之后，相关格式的处理也会失效，可以参照配置到 Total7zip，有兴趣的话，自带的 sevenzip.wcx 也可以停用配置到 Total7zip 中，这里就不单独提了。\r\n\r\n- 保存配置后，DC 应该就可以正常显示和处理之前乱码的 zip 压缩包了，对压缩包文件的更新，删除也正常。\r\n\r\n![中文正常显示](/images/DoubleCMDTotal7zip3.png)\r\n","cover":"","link":"doublecmdtotal7zip.html","preview":"\u003cp\u003e借助 Total7zip 插件解决 Double Commander 部分 zip 压缩包文件名乱码的问题。\u003c/p\u003e\n","title":"解决 Double Commander 部分 zip 压缩包文件名乱码的问题（部分内容已过时）"},{"content":"\r\n\r\n### 给 Double Commander 增加访问坚果云等支持 WebDAV 的云存储的功能\r\n\r\n上一篇提到在 Double Commander(以下简称 DC)中增加对 Google Drive 的访问，由于我个人少数情况也会使用坚果云，所以我也希望在 DC 加上访问坚果云的功能，而坚果云本身是支持 WebDAV 的，通过 Total Commander(以下简称 TC)的 WebDAV 插件，即可实现在 DC 中访问坚果云的功能，同样简单写一下操作。\r\n\r\n- [WebDAV](https://www.ghisler.com/plugins.htm)：点击链接可以进入 TC 官网的插件页面，搜索 WebDAV 即可找到对应插件。\r\n\r\n#### 安装 WebDAV\r\n\r\nTC 安装插件只需要按回车打开下载的插件的压缩包，但是 DC 需要手工添加。\r\n\r\n- 解压下载的 WebDAV 压缩包，个人建议解压到 DC 目录下的 Plugins 目录下的 WFX 文件夹。\r\n\r\n- 在 DC 界面的 Configuration→Options→Plugins→Plugins WFX 页面点击 ADD，选择解压的 WebDAV 插件的文件夹中的 davplug.wfx，64 位 DC 请选择 davplug.wfx64，即可完成插件安装。\r\n\r\n#### 配置 WebDAV 访问 坚果云\r\n\r\n- 在坚果云中打开 WebDAV 功能，打开坚果云→账户信息→安全选项，下拉到第三方应用管理，添加应用，生成密码，然后复制该密码。\r\n\r\n- 打开 DC 界面的 Network→Network Connect 页面，WebDAV 安装成功后，此页面应该会有一个 WebDAV 的选项，进入 WebDAV 页面，然后在其他页面新建一个文件夹，文件夹名会是后面在 WebDAV 页面上看到的名字，复制粘贴到 WebDAV 页面中，DC 会显示一个配置对话框。\r\n\r\n![WebDAV 配置](/images/DoubleCMDWebDav1.png)\r\n\r\n- 在 WebDAV 存储配置页，选择对应的 WebDAV 存储服务提供商，输入相关信息。以坚果云为例：\r\n    - Load default setting for：选为 `Microsoft IIS(Secure)`。\r\n    - Connect to：输入坚果云的服务器地址 `https://dav.jianguoyun.com/dav/`。\r\n    - User name：输入坚果云的登录账号。\r\n    - Password：输入上一步复制的授权密码。\r\n\r\n- 配置完成后，点击 OK，会要求设置 Master Password。\r\n\r\n- 之后在 WebDAV 页面，点击之前粘贴的文件夹名，DC 会要求输入 Master Password，输入后即可正常访问坚果云，文件同样支持 F3 查看等功能。\r\n\r\n![坚果云访问界面](/images/DoubleCMDWebDav2.jpg)\r\n","cover":"","link":"doublecmdwebdav.html","preview":"\u003cp\u003e借助 webdav 插件给 Double Commander 增加访问坚果云等支持 WebDAV 的云存储的功能。\u003c/p\u003e\n","title":"给 Double Commander 增加访问坚果云等支持 WebDAV 的云存储的功能"},{"content":"\r\n\r\n### 给 Double Commander 增加访问 Google Drive 等云存储的功能\r\n\r\n目前我个人使用的云存储服务主要是 Google Drive 和坚果云，之前一直使用的是网页版，但是网页版的操作我个人觉得不太方便，在 Total Commander(以下简称 TC)的官网的插件页面上，有一个 Cloud 插件显示功能是“不需要安装对应的客户端即访问对应的云服务”，近期尝试在 Double Commander(以下简称 DC)中安装该插件，确实可实现访问 Google Drive 的功能，于是简单写一下相关的操作。\r\n\r\n- [Cloud](https://www.ghisler.com/plugins.htm)：点击链接可以进入 TC 官网的插件页面，搜索 Cloud 即可找到对应插件，Cloud 支持 Box、Dropbox、Google Drive、OneDrive 等云存储服务。\r\n\r\n#### 安装 Cloud\r\n\r\nTC 安装插件只需要按回车打开下载的插件的压缩包，但是 DC 需要手工添加。\r\n\r\n- 解压下载的 Cloud 压缩包，个人建议解压到 DC 目录下的 Plugins 目录下的 WFX 文件夹。\r\n\r\n- 在 DC 界面的 Configuration→Options→Plugins→Plugins WFX 页面点击 ADD，选择解压的 Cloud 插件的文件夹中的 cloudplugin.wfx，64 位 DC 请选择 cloudplugin.wfx64，即可完成插件安装。\r\n\r\n#### 配置 Cloud 访问 Google Drive\r\n\r\n- 打开 DC 界面的 Network→Network Connect 页面，Cloud 安装成功后，此页面应该会有一个 Cloud 的选项，进入 Cloud 页面，然后在其他页面新建一个文件夹，文件夹名会是后面在 Cloud 页面上看到的名字，复制粘贴到 Cloud 页面中，DC 会显示一个云存储的配置对话框。\r\n\r\n![云存储配置](/images/DoubleCMDCloud1.png)\r\n\r\n- 在云存储配置页，选择对应的云存储服务提供商，输入账号。\r\n    - Store login credentials：勾选后，DC 会要求用户设置一个 Master Password，后续访问时，只需要输入 Master Password 即可。\r\n    - Login：Google Drive 需要网页认证，我个人的话选为 Default Windows Web browser (external)，使用系统当前默认的浏览器。\r\n    - 如果是国内已墙的服务，需要同时配置代理设置 Proxy Setting。\r\n\r\n- 配置完成后，点击 OK，会要求设置 Master Password 并打开 Google 的链接页面，授权访问即可。\r\n\r\n- 之后在 Cloud 页面，点击之前粘贴的文件夹名，DC 会要求输入 Master Password（我个人在配置页上勾选了 Store login credentials），输入后即可正常访问 Google Drive，文件同样支持 F3 查看等功能。\r\n\r\n![Google Drive 访问界面](/images/DoubleCMDCloud2.jpg)\r\n","cover":"","link":"doublecmdcloud.html","preview":"\u003cp\u003e借助 Cloud 插件给 Double Commander 增加访问 Google Drive 等云存储的功能。\u003c/p\u003e\n","title":"给 Double Commander 增加访问 Google Drive 等云存储的功能"},{"content":"\r\n\r\n### 给 Double Commander 增加文档内容文本搜索功能\r\n\r\n在我的记忆中，Windows 大约是在 Windows 7 之后，系统的搜索已经支持搜索文档内的内容了（即在搜索栏输入 text 可以搜索到目录下名称中没有 text，但是文档内部正文中有 text 字样的 Word 文档等），这个功能 Double Commander(以下简称 DC)自身是不支持的，但是可以通过 Total Commander(以下简称 TC)的 [TextSearch](https://www.ghisler.com/plugins.htm) 插件来实现类似的功能。\r\n\r\n- [TextSearch](https://www.ghisler.com/plugins.htm)：点击链接可以进入 TC 官网的插件页面，搜索 TextSearch 即可找到对应插件。\r\n\r\n#### 安装 TextSearch\r\n\r\nTC 安装插件只需要按回车打开下载的插件的压缩包，但是 DC 需要手工添加。\r\n\r\n- 解压下载的 TextSearch 压缩包，个人建议解压到 DC 目录下的 Plugins 目录下的 WDX 文件夹。\r\n\r\n- 在 DC 界面的 Configuration→Options→Plugins→Plugins WDX 页面点击 ADD，选择解压的 TextSearch 文件夹中的 TextSearch.wdx，64 位 DC 请选择 TextSearch.wdx64，即可完成插件安装。\r\n\r\n#### 使用 TextSearch\r\n\r\n- 打开 DC 界面的 Command→Search 页面。\r\n\r\n- 在 Find files 对话框中，切换到 Plugins 标签页，勾选 Use content plugins，AND 和 OR 根据具体需要勾选，前者表示结果需要满足添加的所有搜索规则，后者表示结果只需要满足其中一条规则即可。\r\n\r\n- 点击 More rules 按钮，在出现的规则中，Plugin 选为 TextSearch，Operator 根据需要选择，Value 输入需要搜索的文字，之后点击 Search 按钮，就会显示结果。\r\n\r\n![搜索配置](/images/DoubleCMDTextSearch1.png)\r\n![搜索结果](/images/DoubleCMDTextSearch2.png)\r\n\r\n可以看到，搜索结果中的 WorkingCondition.xlsx 的文件名中并没有更新字样。\r\n\r\n#### 附注\r\n\r\n文本文件的搜索 DC 本身就支持，TextSearch 并不支持搜索纯粹的文本文件。\r\n\r\n![文本文件配置：搜索含 del 的文件](/images/DoubleCMDTextSearch3.png)\r\n![文本文件结果](/images/DoubleCMDTextSearch4.png)\r\n\r\n可以看到，搜索结果中的 clean.bat 的文件名中并没有 del 字样。\r\n","cover":"","link":"doublecmdtextsearch.html","preview":"\u003cp\u003e借助 TextSearch 插件给 Double Commander 增加文档内容的搜索功能。\u003c/p\u003e\n","title":"给 Double Commander 增加文档内容文本搜索功能"},{"content":"\r\n\r\n### Firefox 目前可用的去广告方案（2022-09-17 更新）\r\n\r\n\u003e 此处的方案适用于 Firefox，所使用的扩展可能有 Chrome 版，Chrome 可参考，但不保证效果一致。\r\n\r\n\u003e 此处的方案不一定是最好的方案。\r\n\r\n211002 更新：修正 乘风视频规则 的地址。\r\n\r\n210710 更新：Firefox 89 上下列方案仍然可用。\r\n\r\n210124 更新：移除之前提到的 Nana Adblocker 的方案。\r\n\r\n220303 更新：uBlock Origin + Header Editor\r\n\r\n220917 更新：移除了关于视频站的部分。\r\n\r\n| 扩展                                 | 必需 | 备注                                                                                       |\r\n|--------------------------------------|------|--------------------------------------------------------------------------------------------|\r\n| [uBlock Origin][url-ublockorigin-01] | 必须 | 基础扩展，需订阅扩展自带的 uBlock filters 和 [乘风视频规则-卡饭][url-ublockorigin-rule-01] |\r\n| [Header Editor][url-headerediter-01] | 可选 | 按需设置重定向，比如：[重定向规则][url-headerediter-rule-01]                           |\r\n\r\n注：\r\n\r\n1. Header Editor 的重定向规则 仅限 Firefox 57+ \u0026 最新版的 Header Editor。\r\n\r\n[url-ublockorigin-01]:https://addons.mozilla.org/en-US/firefox/addon/ublock-origin\r\n\r\n[url-ublockorigin-rule-01]:https://bbs.kafan.cn/thread-1866845-1-1.html\r\n\r\n[url-headerediter-01]:https://addons.mozilla.org/zh-CN/firefox/addon/header-editor\r\n\r\n[url-headerediter-rule-01]:https://bbs.kafan.cn/forum.php?mod=viewthread\u0026tid=2171691\u0026page=1#pid45734014\r\n","cover":"","link":"blockbrowserad.html","preview":"\u003cp\u003e简单说一下目前 Firefox 可用的去广告方案，个人使用 Firefox，所以方案适用于 Firefox，Chrome 用户亦可参考。\u003c/p\u003e\n","title":"Firefox 目前可用的去广告方案（2022-09-17 更新）"},{"content":"\r\n\r\n### Windows Installer 2755错误的解决方法\r\n\r\n昨天在尝试安装 LibreOffice 6.2.0.3 时（我一直用便携版，之前没有安装），Windows Installer 报了一个无法访问文件或设备，内部错误2755。在网上找到的解决方法一般是修改文件的访问权限，但我实测不成功，最后在 Youtube 上找到了一个视频，成功解决，整理一下相关步骤：\r\n\r\n- 删除C盘 Windows 文件夹下的 Installer 文件夹；\r\n    - 如果在 Windows 文件夹内找不到 Installer 文件夹的话，可以使用 [Everything](https://www.voidtools.com/zh-cn/) 进行搜索。\r\n\r\n- 打开C盘的 Windows 文件夹，右键新建一个名为 Installer 的文件夹；\r\n    - 在 Windows 文件夹内新建文件夹需要管理员权限。\r\n\r\n- 重启，问题即可解决。\r\n\r\n源自 Youtube 视频 [FIX: Error Code 2755](https://www.youtube.com/watch?v=4k5Us-UpEr0)，视频中还有调整权限的步骤，但我这边重启后没有调整也能正常安装。\r\n","cover":"","link":"fixerror2755.html","preview":"\u003cp\u003eWindows Installer 2755错误的解决方法\u003c/p\u003e\n","title":"Windows Installer 2755错误的解决方法"},{"content":"\r\n\r\n### 在 Double Commander 中调用 WinMerge 作为比较工具\r\n\r\n在之前的 [另一篇文章](DoubleCMDVim.html) 中，我提到过使用 Vim 作为 Double Commander 的文本比较工具，但是近期遇到一个问题，我需要比较两个 Word 文档，而 Vim 是不支持对 Word 文档的比较，试着在网上找了一下，结果找到了 WinMerge。\r\n\r\nWinMerge（[官网](http://winmerge.org/)、[Github](https://github.com/WinMerge/winmerge-v2/releases)、[SourceForge](https://sourceforge.net/projects/winmerge/)） 是一款开源的文件夹/文件比较工具。之前我寻找 Beyond Compare 的替代品时曾试用过，但是由于当时 WinMerge 的最后更新时间是2013年，界面也不支持高分屏，导致看起来并不舒服，最后只能作罢。结果这次发现它2018年年末居然更新了。\r\n\r\nWinMerge 的使用比较简单，只要选择需要比较的文件（支持两个以上），WinMerge 就会自动打开一个对比窗口，标识出其中的不同。\r\n\r\n#### 一些设置调整\r\n\r\n- WinMerge 的默认设置在比较文件夹时，会比较文件的内容，这导致在比较较大的文件的时候文件缓慢。个人建议是在`编辑`→`选项`→`对比`→`文件夹`中，将比较模式（Compare Method）调整为修改日期。\r\n\r\n- WinMerge 比较 Word 文档需要插件（自带）的支持，但是默认设置需要用户自行选择才会使用插件，个人建议是在`插件`中，选择`自动解包`，这样 WinMerge 会自动识别文件内容。\r\n\r\n- 需要特别注意的是 WinMerge 免安装版的配置文件默认是在用户文件夹下的，有需要的话在修改完成后可在`编辑`→`选项`→`导出`进行备份。\r\n\r\n#### 在 Double Commander 中调用\r\n\r\n在 Double Commander 的 `配置`→`选项`→`工具`→`比较程序`：勾选`使用外部程序`，程序执行路径选择 WinMerge 文件夹下 的 WinMergeU.exe，`其他参数`处填写`/r /s`，`/r`代表比较文件夹时同时比较子文件夹，`/s`代表只允许使用一个 WinMerge 窗口。\r\n\r\n#### 一些截图\r\n\r\n![WinMerge 主界面 doc](/images/WinMerge1.png)\r\n\r\n`注意：WinMerge 只能比较 Word 的文本，不支持修改，Excel 工作簿、PowerPoint 演示文稿也一样。`\r\n\r\n![WinMerge 主界面 png](/images/WinMerge2.png)\r\n\r\n![WinMerge 主界面 txt](/images/WinMerge3.png)\r\n","cover":"","link":"doublecmdwinmerge.html","preview":"\u003cp\u003e在 Double Commander 中使用 WinMerge 作为比较工具。\u003c/p\u003e\n","title":"在 Double Commander 中调用 WinMerge 作为比较工具"},{"content":"\r\n\r\n### ShareX 简单介绍\r\n\r\n\u003e 2023.02.13 修改关于 FFmpeg 的内容。\r\n\r\n在[**我的软件清单**](mylist.html)的截图录屏工具中，我提到过 FastStone Capture 和 [ShareX](https://github.com/ShareX/ShareX/releases)，由于前者是共享软件，我并未提供下载链接，但实际上，开源与免费截图和录屏工具也有很多，[ShareX](https://github.com/ShareX/ShareX/releases) 就是其中之一，实际上，我用 ShareX 替换 FastStone Capture 也有一段时间了，这里简单介绍下 ShareX。\r\n\r\n[ShareX](https://github.com/ShareX/ShareX/releases) 是一款开源的截图录屏工具，支持截图，录制视频，录制 Gif，也支持图片上传，拾色器等功能。\r\n\r\n- 其官网为：[https://getsharex.com/](https://getsharex.com/)，但我个人更加推荐在 [Github Release](https://github.com/ShareX/ShareX/releases) 上下载，因为在此页面上提供有便携版，本文所有可点击的`ShareX`字样，均跳转至后者。\r\n\r\n![ShareX 主界面](/images/ShareX1.png)\r\n\r\n在打开 ShareX 后，其主界面如上图。我个人主要使用的是左侧`屏幕截图`菜单和`工具`菜单，所以以下只会简单提相关的部分。\r\n\r\n- 左侧的`屏幕截图`菜单可以选择截图和录屏的功能。ShareX 目前自带 x64 的 FFmpeg。\r\n\r\n- 左侧的`工具`菜单提供拾色器，生成二维码等功能。\r\n\r\n各个功能的用法都比较简单，此处就不再提及了。\r\n\r\nShareX 的主界面可以很方便的看到截图的内容，但是在不使用快捷键的情况下，各个截图的功能隐藏到菜单中，我更多的使用的是 ShareX 的工作栏。\r\n\r\n![ShareX 工具栏](/images/ShareX2.png)\r\n\r\n#### 一些个人的设置。\r\n\r\n此处的设置是按我个人喜好的设置，仅供参考。\r\n\r\n- 启动 ShareX 时，不打开主窗口，只显示置顶工作栏。\r\n    - 在`应用程序设置`→`常规`中，勾选`开始时最小化到托盘`。\r\n    - 右键 ShareX 的托盘图标，点击`显示工作栏`。\r\n    - 在工作栏中的 ShareX 字样处右键，勾选`保持在其他窗口前端`、`和 ShareX 一同打开`。另外，`编辑`可以调整工具栏的按钮。\r\n","cover":"","link":"sharex.html","preview":"\u003cp\u003e简单介绍一下 ShareX 这个截图录屏工具以及我个人的一些个性化设置。\u003c/p\u003e\n","title":"ShareX 简单介绍"},{"content":"\r\n\r\n### CopyQ 简单介绍\r\n\r\nWindows 10 1809 自带了一个的多重剪贴板（ `Win + V`），但其功能很简单，除了可以固定粘贴项外基本没有其他的功能，与我之前用的第三方的多重剪贴板工具，如 [Ditto](https://ditto-cp.sourceforge.io/) 和 CLCL 相差甚远，[CopyQ](https://github.com/hluk/CopyQ/releases) 是我近期在 Github 发现的一款多重剪贴板工具，支持 Windows/Linux/OS X，也有便携版。目前 CopyQ 是我最喜欢的多重剪贴板工具（我用它替换了 Ditto），主要原因有两点：\r\n\r\n#### 第一点：CopyQ 支持 Vi 模式的操作。\r\n\r\n- 在设置中勾选“Vi 风格导航键”选项后，在主窗口中，可以使用`h、j、k、l`来移动，`/`来搜索，我是 Vim 用户，这个功能很符合我的习惯。\r\n\r\n#### 第二点：CopyQ 自定义命令很方便。\r\n\r\n- 在 CopyQ 的主界面按 F6，可以进入 CopyQ 命令窗口，在此窗口中，可以自定义新增命令，比如，CopyQ 自带的命令中，并没有粘贴第二项的功能。用户可以自行添加命令，并配置对应热键来实现，在下图中，我自定义了此功能，并指定了热键为 `Alt + 1`。\r\n\r\n![CopyQ 命令窗口](/images/CopyQ2.png)\r\n\r\n- 简单说一下这个命令 `copyq: select(1); paste()`\r\n\r\n    - `copyq: `：不能省略。\r\n    - `select(1); `：代表操作的是多重剪贴板中的序号为1的项。（分号是分隔符，CopyQ 的序号从0开始排，所以序号1代表第二项）\r\n    - `paste()`：进行粘贴操作。\r\n    - 其他比如 `copyq: hide(); select(1); paste(); select(2); paste()`：顺序粘贴第二项和第三项，自定义还是挺方便的。\r\n\r\n- 关于命令的热键配置，在 Advanced 页面中，勾选**全局热键**代表热键是全局的；勾选**菜单中**则热键仅在 CopyQ 中生效。\r\n\r\n最后放一张 CopyQ 的界面图。\r\n\r\n![CopyQ](/images/CopyQ.png)\r\n","cover":"","link":"copyq.html","preview":"\u003cp\u003e介绍一下多重剪贴板工具 CopyQ，顺带提一下其自定义命令的功能。\u003c/p\u003e\n","title":"CopyQ 简单介绍"},{"content":"\r\n\r\n### WinPython 自动更新 You-Get 和 Youtube-dl\r\n\r\n+ 2019年2月更新：调整了一下脚本，关闭脚本位置的警告。\r\n\r\n之前在 [You-Get 和 Youtube-dl](mediadown.html) 中提供过一个调用的脚本，当时 You-Get 还是提供 Windows 下的预编译版本的，但是17年10月之后，官方的 [Github](https://github.com/soimort/you-get/releases) 上已经不再更新 Windows 下的预编译版本，但是仍在可以通过 Python 和 Pip 来使用新版。\r\n\r\n近期找到了 [WinPython](https://github.com/winpython/winpython/releases), 一个可便携的 Python 环境，于是萌生了一个用 WinPython 来自动更新 You-Get 和 Youtube-dl，实现完全便携化的想法。实测确实可行，以下是操作流程。\r\n\r\n- 下载 [WinPython](https://github.com/winpython/winpython/releases) ，我个人选择的是 Winpython32-3.7.1.0Zero.exe。\r\n\r\n- 双击安装，由于没有捆绑，可以一直点下一步，有需要的可以调整安装路径。\r\n    - 虽然需要安装，但是 WinPython 安装完成后目录可以随意移动到其他位置。\r\n\r\n- 将以下内容保存为 MediaDown.bat (名字任意，此处为示例)，放到 WinPython 安装目录下。\r\n\r\n\r\n        @echo off\r\n        \r\n        for /d %%i in (*python-*) do set Winpython=%%~dpi%%i\r\n        \r\n        cd %Winpython%\r\n        set youget=%Winpython%\\scripts\\you-get.exe\r\n        set youtubedl=%Winpython%\\scripts\\youtube-dl.exe\r\n        set pip=%Winpython%\\scripts\\pip.exe\r\n        \r\n        echo.\u0026echo.通用流媒体下载工具，整合了 You-Get 与 Youtube-DL\r\n        echo.\u0026echo.正在尝试更新 You-Get 与 Youtube-DL\r\n        \r\n        :: 利用 pip 更新 pip、You-Get 和 Youtube-DL\r\n        %pip% install --upgrade you-get --no-warn-script-location\r\n        %pip% install --upgrade youtube_dl --no-warn-script-location\r\n        \r\n        set /p URL=请输入需要下载的 URL 并回车:\r\n        \r\n        :MediaDownMenu\r\n        echo.\u0026echo.\r\n        echo You-Get List\r\n        echo 11.You-Get   下载到 D:\\ZeroDown ，不使用代理\r\n        echo 12.You-Get   下载到 D:\\ZeroDown ，使用代理\r\n        echo.\u0026echo.\r\n        echo YoutubeDL List\r\n        echo 21.YoutubeDL 下载到 D:\\ZeroDown ，不使用代理\r\n        echo 22.YoutubeDL 下载到 D:\\ZeroDown ，使用代理\r\n        echo.\u0026echo.\r\n        set /p choose=请选择相应的处理方式：\r\n        if \"%choose%\"==\"11\" set OP=-o D:\\ZeroDown \u0026Goto YouGetDown\r\n        if \"%choose%\"==\"12\" set OP=--http-proxy 127.0.0.1:1080 -o D:\\ZeroDown\\ \u0026Goto YouGetDown\r\n        if \"%choose%\"==\"21\" set OP=-o \"D:\\ZeroDown\\%%(title)s.%%(ext)s\" \u0026Goto youtubedlDown\r\n        if \"%choose%\"==\"22\" set OP=-o \"D:\\ZeroDown\\%%(title)s.%%(ext)s\" --proxy socks5://127.0.0.1:1080/ \u0026Goto youtubedlDown\r\n        \r\n        :YouGetDown\r\n        %youget% %OP% %URL%\r\n        exit\r\n        \r\n        :youtubedlDown\r\n        %youtubedl% %OP% %URL%\r\n        exit\r\n\r\n- 双击运行 MediaDown.bat，第一次运行需要使用 pip 新增 YouGet 和 Youtube-DL，耗时会比较长，之后只是检查更新会更快。\r\n\r\n- 更新完成后，输入要下载的 URL，在选择保存的路径即可。\r\n\r\n![WinPythonMediaDownYouGet](/images/WinPythonMediaDownYouGet.png)\r\n\r\n![WinPythonMediaDownYoutubeDL](/images/WinPythonMediaDownYoutubeDL.png)\r\n","cover":"","link":"winpythonmediadown.html","preview":"\u003cp\u003e利用 WinPython (便携的 Python 环境)实现 You-Get 和 Youtube-DL 两个命令行在线视频下载工具的自动更新，同时附带调用批处理。\u003c/p\u003e\n","title":"WinPython 自动更新 You-Get 和 Youtube-dl"},{"content":"\r\n\r\n### Aria2 Tracker 更新脚本\r\n\r\n之前由于使用长城宽带，BT 需要走代理才能有一点速度，但是 Aria2 我没能找到 BT 下载走代理的方法，10月换了联通宽带，Aria2 的 BT 也能跑起来了，在4个月前的[ Aria2 BT 下载的一些小细节](aria2-bt.html)一文中，我提到过在[ Github 上有一个项目](https://github.com/ngosang/trackerslist)提供自动更新的Tracker列表，这里提供了一个脚本用来自动更新 Aria2 配置文件中的 TrackersList，脚本需要用到 Aria2 和 Sed。\r\n\r\n\r\n    :: Aria2 更新 Trackers\r\n    @echo off\r\n    \r\n    ::本 Bat 需要使用 aria2 和 sed 。\r\n    ::这里使用的相对路径，有需要的可以改成绝对路径。\r\n    set aria2=aria2c.exe\r\n    ::sed 需要在以下两个链接的文件，解压到同一文件夹，Bin 文件内的 sed.exe 和 dll 不能删除。\r\n    ::https://sourceforge.net/projects/gnuwin32/files/sed/4.2.1/sed-4.2.1-bin.zip/download\r\n    ::https://sourceforge.net/projects/gnuwin32/files/sed/4.2.1/sed-4.2.1-dep.zip/download\r\n    set sed=sed.exe\r\n    \r\n    ::设置当前的aria2配置文件的名称，如配置在子文件夹下，请自行修改。\r\n    set conf=aria2n.conf\r\n    \r\n    ::设置选择的 trackerlist （可选 trackers_all.txt trackers_best.txt trackers_all_ip.txt trackers_best_ip.txt）\r\n    set trackerfile=trackers_all.txt\r\n    set downloadfile=https://raw.githubusercontent.com/ngosang/trackerslist/master/%trackerfile%\r\n    \r\n    :: 删除可能之前存在的残留文件\r\n    del %temp%\\tracker*.*\r\n    del %temp%\\aria*.*\r\n    \r\n    ::下载 trackerlist\r\n    %aria2% --dir=%temp% \"%downloadfile%\"\r\n    \r\n    ::用 sed 整理 trackerlist 格式\r\n    %sed% \":a;N;s/\\n/ /; ta;\" %temp%\\%trackerfile% \u003e %temp%\\trackerstemp.txt\r\n    %sed% \"1s/^/bt-tracker=/g; s/  /,/g; s/ $//;\" %temp%\\trackerstemp.txt \u003e %temp%\\trackers.txt\r\n    \r\n    ::删除当前 aria2 配置 中的 trackerlist\r\n    %sed% \"/^bt-tracker=/d\" %conf% \u003e %temp%\\aria2n.conf\r\n    \r\n    ::合并 trackerlist 和 aria2 配置\r\n    copy %temp%\\aria2n.conf + %temp%\\trackers.txt %temp%\\aria2bt.txt\r\n    %sed% \"$d\" %temp%\\aria2bt.txt \u003e %conf%\r\n    \r\n    :: 删除残留的临时文件\r\n    del %temp%\\tracker*.*\r\n    del %temp%\\aria*.*\r\n    exit\r\n\r\n还是放一个下载速度的图片吧，资源好的话是可以跑满的，宿舍合租不能影响别人，我在 uGet 上限制了6MB/s。\r\n\r\n![Aria2 BT 下载速度](/images/aria2UpdateTracker.png)\r\n\r\n这个脚本在家里用了差不多有一年了，看到小众软件上提到 Github 上那个清单心血来潮的发到这里来，懒到没救了。\r\n","cover":"","link":"aria2updatetracker.html","preview":"\u003cp\u003eAria2 Tracker 更新脚本\u003c/p\u003e\n","title":"Aria2 Tracker 更新脚本"},{"content":"\r\n\r\n### 简单说下 LibreOffice 的字体替换表\r\n\r\n近期由于一些个人原因，尝试在个人的电脑上用 LibreOffice 替换 MS Office（当然我的电脑上目前还是有安装 MS Office 的）。但是遇到了一个问题，由于我公司对于文档的格式要求比较严格，写的文档的标题对字体必须要求为固定的一种字体，但我的电脑上没有这种字体，在这种情况下，MS Office 会自动调整字体，但是 LibreOffice 并不会自动这样做，对应的字体显示大小格式都不一致。如下图：\r\n\r\n![LibreOfficeFontReplacementTable1](/images/LibreOfficeFontReplacementTable1.png)\r\n\r\n后来在 LibreOffice 的选项中看到了一个字体替换表的功能，解决了我的问题，字体替换表实际上是在加载文档时，自动将文档的一种字体以另外一种字体显示，以保障在没有对应字体的设备上也能得到较好的显示效果。\r\n\r\n![LibreOfficeFontReplacementTableSetting](/images/LibreOfficeFontReplacementTableSetting.png)\r\n\r\n在上图的设置中，我将 LibreOffice 中“创艺简标宋”、“方正黑体_GBK”、“方正小标宋_GBK”三种字体进行了替换。\r\n\r\n以下是替换后的同一个文档显示的结果：\r\n\r\n![LibreOfficeFontReplacementTable2](/images/LibreOfficeFontReplacementTable2.png)\r\n\r\n","cover":"","link":"libreofficefontreplacementtable.html","preview":"\u003cp\u003eLibreOffice 的字体替换表功能，可以用来解决 LibreOffice 在缺失字体时显示文档字体大小格式不统一的问题。\u003c/p\u003e\n","title":"简单说下 LibreOffice 的字体替换表"},{"content":"\r\n\r\n### gImageReader 简要介绍\r\n\r\n在之前的文章中曾经提到过利用 CAJViewer 对 PDF 文件进行 OCR，但是这种做法有个比较大的问题，就是 CAJViewer 的 OCR 是需要手工去选择 OCR 范围的，不能自动的 OCR 全文。近期因为需要 OCR 一份有几十页的文件，不得不寻找替代方案，最终找到了 gImageReader。\r\n\r\n[Tesseract Open Source OCR Engine](https://github.com/tesseract-ocr/tesseract) 是一个开源的 OCR 引擎（以下简称“Tesseract”），支持包括中文（简体）、中文（繁体）在内的多种文字的 OCR，具体的支持清单可以在 [Data Files](https://github.com/tesseract-ocr/tesseract/wiki/Data-Files) 上查看\r\n\r\n[gImageReader](https://github.com/manisandro/gImageReader) 是一个开源的基于 Tesseract Open Source OCR Engine 的跨平台的 GUI，\r\n\r\n#### 下载安装\r\n\r\n- 在 gImageReader 项目的 [Releases页](https://github.com/manisandro/gImageReader/releases) 上下载对应的安装包，个人比较推荐基于 Tesseract 4.0的版本，OCR 的效率较3.0的版本高。\r\n\r\n- 双击安装，没有捆绑，可以一直点下一步，但是有两个地方需要注意。\r\n\r\n    - 在 Choose Components 页面，选择 Standard (localized)，否则安装完成之后是英文界面。\r\n    - 在 Choose Users 页面，选择 Install just for me，否则之后下载中文识别包时，需要以管理员权限运行 gImageReader。\r\n\r\n#### 下载中文识别包\r\n\r\n- 安装完成后，在开始屏幕中启动 gImageReader，如果安装时没有选择错误，此时的界面应该是中文的，虽然有些地方汉化不完整。\r\n\r\n![gImageReader 界面 1](/images/gimagereader-1.png)\r\n\r\n- 点击 gImageReader 右上角的设置按钮，选择 “管理语言”，在弹出的窗口中勾选需要OCR的语言，我选择的是“简体字”、“简体字 纵”、“繁体字”、“繁体字 纵”，然后点击“应用(Apply)”。gImageReader 会自动下载对应的语言识别包。\r\n\r\n#### OCR 使用\r\n\r\n- 在 gImageReader 中打开需要识别的 PDF 或图片文件，然后在上方选择你需要OCR的语言，点击辨认按钮，gImageReader 会自动开始 OCR，OCR 的结果就和文件的具体质量有关系，识别率我个人还是可以接受的。\r\n\r\n![gImageReader 界面 2](/images/gimagereader-2.png)\r\n","cover":"","link":"gimagereader.html","preview":"\u003cp\u003e简要介绍基于 Tesseract Open Source OCR Engine 的 OCR 软件 gImageReader。\u003c/p\u003e\n","title":"gImageReader 简要介绍"},{"content":"\r\n\r\n### uGet Download Manager 简要介绍\r\n\r\n[uGet Download Manager](https://ugetdm.com/)（以下简称 uGet） 是一个跨平台的下载工具，支持 Windows，Linux，Andorid，BSD 等系统，本文主要介绍其在 Windows 下将 uGet 作为 Aria2 的前端使用。\r\n\r\n#### 下载与便携化，界面调整\r\n\r\n1. uGet 在 Windows 下提供免安装的压缩包，可在**[官网](https://ugetdm.com/downloads/windows/)**下载\r\n    - 需要下载两个压缩包，一个是 uGet 的本体，一个是 uGet 的语言包。\r\n    - 压缩包内包含 Aria2，但是 Aria2 可能不是最新版。\r\n\r\n2. 下载完成后解压两个压缩包，将语言包（Locale）解压出来的文件放到 uGet 本体压缩包解压出来的Share目录下。\r\n    - 为描述方便，下面将 uGet 解压出来的文件夹成为 uGet 本体目录。\r\n\r\n3. 将 uGet 本体目录下的 **uget-portable-mode** 这个文件复制或移动到 uGet 本体目录下的 Bin 目录下，即可实现配置的便携化。\r\n    - uGet 官方提供的下载包中默认保存配置的位置是在用户文件夹下，但是只要 **uget-portable-mode** 和 **uget.exe** 两个文件在同一文件夹下就可实现便携。\r\n    - 便携版的配置在 uGet 本体目录下的 config 文件夹中，运行第一次后会自动生成。\r\n\r\n4. 界面调整（可选调整），由于在我的电脑上，uGet 默认的界面字体会显得比较模糊（估计和高分屏有关），我进行了小部分的调整。\r\n    - 进入 uGet 本体目录下的 etc 文件夹，在 gtk-3.0 文件夹下的 setting.ini 中加入下面一行，将字体调整为微软雅黑。\r\n\r\n        `gtk-font-name = Microsoft YaHei 10`\r\n\r\n    - 进入 uGet 本体目录下的 Bin 文件夹，打开 uget.exe 的属性，将兼容性页面下的 更改高 DPI 设置 中的 替代高 DPI 缩放行为 设置为 应用程序。\r\n\r\n以上几步设置完成的 uGet 大致是下面这个样子的。\r\n\r\n![uGet](/images/uGet1.png)\r\n\r\n#### 使用 uGet 作为 Aria2 的前端\r\n\r\nuGet 在 Windows 上自带 Aria2，但是默认是不使用的，可以设置中开启。\r\n\r\n- 编辑→设置→插件→插件匹配顺序，我调整为 Aria2，这样 uGet 就只会使用 Aria2 进行下载了。\r\n- 在 编辑→设置→插件 这个页面还可以配置 uGet 启动时自动启动 Aria2，关闭 uGet 时同时关闭 Aria2，不过我电脑上的 Aria2 是常驻后台的，所以这个地方我都没有使用。\r\n- uGet 其他的配置页面的选项与迅雷等常见下载工具没有太大不同，此处就不在说明了。\r\n\r\nPS：打开 Aria2 后，uGet是支持 BT 下载的，可以用它来打开 torrent 文件。\r\n\r\n#### uGet 的分类\r\n\r\n在 uGet 中有一个叫做 分类 的概念（可以看看界面图的左下角），实质上是一个添加任务时的预设值，在分类框内右键可新建方案，uGet 第一打开时会有一个新建方案，这个方案的下载目录是在用户文件夹下，线程为1，如果不去调整的话每次都是这个样子。\r\n\r\n我个人建议新建两个方案，一个正常普通用，一个走代理。\r\n\r\n- 方案1：线程为16，不使用代理。\r\n- 方案2：线程为16，使用 Http 代理，主机127.0.0.1，端口1080\r\n    - 这些参数视你实际使用的代理而定。\r\n\r\n#### Firefox 调用\r\n\r\n使用 uGet 接管 Firefox 的下载包括几个步骤。\r\n\r\n1. 添加 uget-integrator，这个东西可以在 [Github](https://github.com/ugetdm/uget-integrator/releases) 上下载到。\r\n    - Github 上建议使用安装版的 uGet 和 uget-integrator，我个人更喜欢便携版，下载完之后将解压出来的 uget-integrator 文件夹复制到 uGet 本体目录下，之后打开 uGet 本体目录下的 uget-integrator 文件夹，编辑 uget-integrator.py 文件内的第38行，修改为以下内容。\r\n\r\n`UGET_COMMAND = join(os.path.dirname(os.path.realpath(__file__)), \"..\\\\bin\\\\uget.exe\")`\r\n\r\n2. 允许 uget-integrator 文件夹下的 add_config.bat，这一步会在 uget-integrator 文件夹下生成两个文件，同时写入两个注册表项。\r\n\r\n3. 在 Firefox 上添加 uGet Integration 扩展，然后调整 uGet Integration 接管的文件大小即可。\r\n    - 点击一个下载的文件，在 Firefox 弹出的窗口中选择“保存”，uGet Integration 会根据文件大小判断是否调用 uGet 进行下载。\r\n    - uGet Integration 在 YouTube 上可以在右键菜单中选择下载当前页面的视频，不过除 YouTube 外貌似都不行。\r\n\r\n下载个 WPS Office 测个速吧。\r\n\r\n![uGet](/images/uGet2.png)\r\n","cover":"","link":"uget.html","preview":"\u003cp\u003e说一下 uGet 这个下载工具，同时简单说一下 Firefox 调用 uGet 的方法。\u003c/p\u003e\n","title":"uGet Download Manager 简要介绍"},{"content":"\r\n\r\n### 在 Double Commander 中使用 Vim\r\n\r\n9 个月之前我曾经[另外一篇文章](doublecmd.html)中提到我使用开源的 Double Commander（简称 DC）替换了一直使用的 Total Commander（简称TC）。\r\n\r\n当时由于刚刚开始使用 DC，很多地方并不熟悉，以至于在该文中提到一些 DC 无法实现而 TC 可以实现的功能，部分功能后续其实陆续发现有相应的解决方案，今天主要讲两个。\r\n\r\n#### 文本比较\r\n\r\nTC 中自带的比较工具可以比较两个文件的差异，且可以比较方便的跳转，但是在 DC 中的自带的比较工具，在我这边实测并不能显示比较的差异，很多时候左右面板都是默认的白底黑字，连哪些地方有差异都看不出来，有天偶尔想起几年前入坑 TC 是看到的善用佳软上[结合total-commander与vim.htm](https://xbeta.info/%E7%BB%93%E5%90%88total-commander%E4%B8%8Evim.htm)一文，想到用 Vim 作为 DC 的文本比较工具或许可行，一试确实成功，配置见下图如下：\r\n\r\n![文本比较配置](/images/DoubleCMDVim-Diff.png)\r\n\r\n注：这个方法会在比较开始时打开一个一闪而过的 cmd 窗口。\r\n\r\n#### 文本重命名\r\n\r\n刚转到 DC 的一段时间，我偶尔会怀念 TC 的重命名功能，实质上 DC 的重命名功能与 TC 并无不同，只是我个人偶尔会用到 TC 中“在编辑器中编辑文件名”（TC 会调用系统默认的文本编辑器）的功能，在 DC 中，不加配置的话会调用默认的内置编辑器，对于习惯使用 Vim 的我来说很不方便，经常是到 Vim 中编辑完成在复制回去。\r\n\r\n后面发现，只要在配置中将 DC 的默认编辑器修改为 Vim，DC 就会调用 Vim 作为重命名时编辑文件名的工具，更符合我的习惯。配置如下：\r\n\r\n![编辑器配置](/images/DoubleCMDVim-Editor.png)\r\n\r\n注：这个方法会在功能开始时打开一个一闪而过的 cmd 窗口。\r\n\r\n另外，在之前的文章中提到的中文汉化不完全的问题，在今年5月份有热心人士更新了中文的翻译，目前已经接近完全汉化了，但是有些热键的翻译由于没有加`(%s)`这样的提示，无法使用英文状态下可以使用的快捷热键，所以我仍然坚持使用英文界面。\r\n\r\n","cover":"","link":"doublecmdvim.html","preview":"\u003cp\u003e在 Double Commander 中使用 Vim 作为文本比较和重命名编辑的工具\u003c/p\u003e\n","title":"在 Double Commander 中使用 Vim 作为文本比较和重命名编辑工具"},{"content":"\r\n\r\n### Aria2 BT 下载的一些小细节\r\n\r\nAria2 是一个很不错的命令行下载工具，支持 HTTP / FTP / BT 等，本文来说说一些使用 Aria2 下载 BT 的小细节，基本上都是我的个人感受，由于个人并非专业，此处所提到的内容不一定准确，仅供参考。\r\n\r\n#### 1. BT-Tracker\r\n\r\n添加Tracker服务器往往对BT下载有提高作用，更多的Tracker意味着可能找到更多下载统一种子的Client，Tracker并不好找，但是现在在[Github上有一个项目](https://github.com/ngosang/trackerslist)提供自动更新的Tracker列表，我们需要将Tracker加入到Aria2的配置中，格式如下，我个人是加了前20的Tracker。\r\n\r\n    bt-tracker=udp://tracker.coppersurfer.tk:6969/announce,udp://tracker.open-internet.nl:6969/announce\r\n\r\n#### 2. DHT网络\r\n\r\nAria2有DHT的功能，且默认Aria2是打开DHT功能的，第一次使用Aria2下载需要选择热门的种子，后续Aria2会对DHT的数据进行缓存，记录在一个dht.dat的文件中，后续下载较为冷门的种子，由于有DHT的缓存数据，速度也会有所提升。\r\n\r\n需要注意的是，Aria2并不是每次完成BT下载后立即就会保存dht数据，如果你使用的Ariang前端，可以在Aria2状态页，点击保存会话后在点击管理Aria2，这样就会立即保存，但是之后需要手工重新启动Aria2。我个人由于Aria2常驻后台且常年不关机，一般都是由Aria2自动保存的。\r\n\r\n#### 3. 强制加密\r\n\r\n我一般会在Aria2对BT设置强制加密来防止迅雷……\r\n\r\n    bt-force-encryption\r\n\r\n#### 4. 添加时不下载\r\n\r\n在通过网页前端（如Ariang，YAAW）添加BT任务是，选择`只添加不下载`的选项后，可以在任务也对 BT 种子中需要下载的文件进行勾选。\r\n\r\n","cover":"","link":"aria2-bt.html","preview":"\u003cp\u003eAria2 BT 下载的一些小细节。\u003c/p\u003e\n","title":"Aria2 BT 下载的一些小细节"},{"content":"\r\n\r\n### AriaNg 网页参数切换 RPC 的参数\r\n\r\n之前在[Firefox 扩展 Aria2 下载器集成组件](aria2-integration.html)一文中提到，在 AriaNg 中，可以添加多个 RPC，通过点击页面的左上角进行切换，但是实际上切换操作上还是比较麻烦。\r\n\r\n最近在 AriaNg 的 Github 上发现，可以通过配置网址参数的方式设定 RPC 的参数，所以，只需要保存两个配置好网址的书签，就可以通过点击不同的书签直接进入不同 RPC 的 AriaNg 界面。\r\n\r\n- AriaNg Default（端口为 6800，方式为 WebSocket）：\r\n\r\n        http://ariang.mayswind.net/latest/#!/settings/rpc/set/ws/127.0.0.1/6800/jsonrpc\r\n\r\n- AriaNg Proxy（端口为 6801，方式为 WebSocket）：\r\n\r\n        http://ariang.mayswind.net/latest/#!/settings/rpc/set/ws/127.0.0.1/6801/jsonrpc\r\n\r\n下面仔细说明一下：\r\n\r\n- `http://ariang.mayswind.net/latest/`是 AriaNg Github 提供的 Demo，可以替换为自己的指定的网址。\r\n\r\n- `settings/rpc/set/[RPC协议]/[RPC Host]/[RPC Port]/jsonrpc` 是配置的参数，RPC 协议可选项包括 http、https、ws、wss，RPC Host 和 RPC Port 也可自行修改。\r\n\r\n以上内容参考自 [AriaNg 的文档](http://ariang.mayswind.net/command-api.html)，另外还有通过网址新建下载的参数。\r\n","cover":"","link":"ariang.html","preview":"\u003cp\u003e同时使用多个RPC时，通过AriaNg网页参数切换aria2的RPC\u003c/p\u003e\n","title":"AriaNg 网页参数切换 RPC 的参数"},{"content":"\r\n\r\n### VLC 播放器设置便携化\r\n\r\n这两年一直在尽量将手机，电脑上的破解版 APP 替换为免费的 APP ，恰逢3月末换了手机，就尝试将手机上使用的破解版 MX Player Pro 替换为 VLC ，除了有些地方不如 MX Player 方便外，VLC 基本能满足我的需要，于是心血来潮，也尝试使用 VLC 在 Windows 上的播放器。\r\n\r\nVLC 播放器：[官网Windows版本](https://www.videolan.org/vlc/download-windows.html)\r\n    - 官网提供有安装包，7z 或 zip 压缩的免安装版。\r\n\r\n测试期间发现一个问题，VLC 播放器的设置默认是放在用户文件夹下面的，Google 了一下才在一个论坛上看到便携化的方法。\r\n\r\n**只需要在免安装版的 VLC 的目录下新建一个名为 `portable` 的文件夹，VLC 自己就会把配置放到那个文件夹里。**\r\n\r\n最后吐槽一句，这个便携化的方法我在 VLC 的 Wiki ，论坛上都找不到。\r\n","cover":"","link":"vlc-portable.html","preview":"\u003cp\u003e将 VlC 播放器的设置保存到 VLC 的程序目录\u003c/p\u003e\n","title":"VLC 播放器设置便携化"},{"content":"\r\n\r\n### 一键生成适用于 Via 浏览器的 Hosts.txt\r\n\r\n\u003e 2023.02.13 本文内容已过时，Via 已不使用此方式过滤广告。\r\n\r\n也许是开始工作之后没有太多多余的精力了，3 月更换了手机（小米 5S→红米 Note5）之后，续航持久，不说刷机，连解锁的动力都没有，但是我习惯必须使用 Google 作为默认的搜索引擎，国内版的 MIUI 浏览器不能设置 Google 为默认搜索引擎，之后重新用起来 Via 浏览器。\r\n\r\n之前刷机的时候，通常使用 AdAway 来更新系统的 Hosts 去广告，由于懒得解锁，只好使用 Via 浏览器自带的在 Download 文件夹下的 Hosts.txt 中增加拦截地址的方式间接实现去广告，写了一个脚本来生成适用于 Via 浏览器的 Hosts.txt\r\n\r\n\r\n    @echo off\r\n    ::设定aria2的位置\r\n    set aria2=D:\\1-Program\\0-CommandLineTools\\Aria2\\aria2c.exe\r\n\r\n    ::设定需要整合的hosts的链接\r\n    set url1=https://raw.githubusercontent.com/vokins/yhosts/master/hosts\r\n    set url2=https://raw.githubusercontent.com/jdlingyu/ad-wars/master/hosts\r\n\r\n    ::下载合并hosts文件\r\n    %aria2% --dir=%~dp0 %url1%\r\n    rename hosts url1hosts\r\n    %aria2% --dir=%~dp0 %url2%\r\n    rename hosts url2hosts\r\n    copy url1hosts + url2hosts hosts\r\n\r\n    ::利用Sed合并下载下来的多个hosts\r\n    sed.exe -e \"s/127.0.0.1 //g;\" -e \"/ \\|:\\|#\\|^$|^2\\|^localhost$\\|^XiaoQiang$/d\" -n -e \"G;s/\\n/\u0026\u0026/;/^\\(.*\\n\\).*\\n\\1/d; s/\\n//;h;P\" hosts \u003e hosts.txt\r\n    ::删除临时文件\r\n    del /s /q  url*hosts*\r\n    del /s /q  hosts\r\n    ::退出\r\n    exit\r\n    \r\n","cover":"","link":"viahostsgenerate.html","preview":"\u003cp\u003e通过利用 sed，aria2 来下载和生成适用于 Android 上 Via 浏览器的 hosts.txt\u003c/p\u003e\n","title":"一键生成适用于 Via 浏览器的 Hosts.txt（已过时）"},{"content":"\r\n\r\n### Firefox 扩展 Aria2下载器集成组件\r\n\r\n在 Firefox 57 之前我一直使用 Firefox 加 FlashGot 加 Aria2 作为默认的下载方式，Firefox 更新到 57 之后 FlashGot 不能用了，后续发现了 Firefox 上的一个新扩展：[Aria2下载器集成组件](https://addons.mozilla.org/zh-CN/firefox/addon/aria2-integration/)，本次就来介绍下这个扩展。\r\n\r\n- 安装这个扩展后，Firefox 上会增加一个控制按钮，其中蓝色滑块可以选择启用或停用此应用；详情按钮可以打开 AriaNg 查看下载情况。\r\n\r\n- 在 about:addons 页面中此扩展也提供传递 Useragent ，添加例外地址，文件大小限制（多大的文件才会调用 Aria2 下载等）等设置，这里不作详细介绍了，主要还是说一下关于代理的问题。\r\n\r\n之前使用 FlashGot 加 Aria2 方案的时候，FlashGot 内可以配置代理地址，但是 Aria2下载器集成组件 在添加下载任务的时候是不能修改代理地址的，但是 Aria2下载器集成组件 可以配置多个 RPC。\r\n\r\n我通过 VBS 的方式启动两个 Aria2（一个跑代理，一个不跑代理），在 aria2p.conf 中，设置 `all-proxy=127.0.0.1:1080`，`rpc-listen-port=6801`(6800已经被不跑代理的aria2占用了)\r\n\r\n    CreateObject(\"WScript.Shell\").Run \"d:\\1-Program\\0-CommandLineTools\\Aria2\\aria2c.exe --conf-path=d:\\1-Program\\0-CommandLineTools\\Aria2\\aria2.conf --dir=D:\\\",0\r\n    CreateObject(\"WScript.Shell\").Run \"d:\\1-Program\\0-CommandLineTools\\Aria2\\aria2c.exe --conf-path=d:\\1-Program\\0-CommandLineTools\\Aria2\\aria2p.conf --dir=D:\\\",0\r\n\r\n确认后台两个 aria2 均运行后，在 about:addons 页面中此扩展的 RPC 服务器配置页中，修改 RPC 服务器 2 的配置中的端口为 6801。\r\n\r\n![RPC 服务器 2 配置页](/images/aria2-integration1.png)\r\n\r\n之后在AriaNg的页面添加6801的控制页面，并保存，之后可以在左上角切换控制页面。\r\n\r\n![AriaNg 配置页](/images/aria2-integration2.png)\r\n\r\n之后在 Aria2下载器集成组件下载时，如果需要使用代理，勾选 RPC 服务器 2 即可。\r\n","cover":"","link":"aria2-integration.html","preview":"\u003cp\u003eFirefox 57 之后较好的 Aria2 使用方案\u003c/p\u003e\n","title":"Firefox 扩展 Aria2下载器集成组件"},{"content":"\r\n\r\n### MPC-BE 实现加速播放\r\n\r\n16 到 17 年中，在[我的软件清单](mylist.html)一文中我称 MPC-HC，MPC-BE 的加速播放有声音变得尖锐的问题，由于一些考虑，近期将笔记本上的默认播放器从 PotPlayer 修改为了 MPC-BE，加速播放对我来说是刚需，于是在网上寻找了解决的办法，整理如下：\r\n\r\n+ [MPC-BE](https://sourceforge.net/projects/mpcbe/)，对应的页面中可以找到 Standalone Filters。\r\n\r\n#### 音频加速后变得尖锐的问题\r\n\r\n解决方法：`选项→音频→音频渲染器：MPC Audio Renderer`\r\n\r\n#### 外挂字幕加速不同步的问题\r\n\r\n解决方案：安装 VSFilter.dll\r\n\r\nVSFilter.dll 包含在 MPC-BE 的 Standalone Filters 中，但是解决字幕加速播放的问题只需要 VSFilter.dll 的问题。\r\n\r\n1. 选项→扩展滤镜→添加滤镜→浏览→选择 VSFilter.dll\r\n\r\n2. 添加完成后，应该可以看到 `DirectVobSub(auto-loading version)` 和 `DirectVobSub`，通过调整将 `DirectVobSub(auto-loading version)` 移动到 `DirectVobSub` 上面。\r\n\u003e 不调整顺序的话可能会发生视频不会自动加载字幕。\r\n\r\n3. 之后只需要将字幕和视频的名字修改为一致，字幕即可自动加载，加速播放字幕也同样同步。\r\n\r\n\u003e VSFilter.dll 的字幕显示效果需要在 VSFilter 的设置中调整，在 MPC-BE 选项→字幕→默认风格的调整无效。\r\n","cover":"","link":"mpc-be-speed.html","preview":"\u003cp\u003e解决 MPC-BE 加速播放字幕不同步的问题\u003c/p\u003e\n","title":"MPC-BE 实现加速播放"},{"content":"\r\n\r\n### 从 Total Commander 到 Double Commander\r\n\r\n我大致从 2012 年年末开始使用盗版的 Total Commander（以下简称 TC），近期由于公司的一些原因，决定换掉自己使用的盗版软件，其中最重要的一个就是替换掉 TC。在的另外一篇文章[我的软件清单](MYLIST.html)中，提到过 Double Commander（以下简称 DC），而实质上，在我使用过的类 TC 文件管理器中，DC 是最为接近 TC 的一个。\r\n\r\n首先必须强调，DC 并不能完全实现 TC 的功能，而且也有很多不足，包括但不限于：\r\n\r\n- 界面未完全翻译，中英混杂；\r\n- 对高分屏支持一般，部分按钮，图标会明显缩小；\r\n- 批量重命名无法使用外部编辑器编辑文件名再重新导入；\r\n- 没有自带生成快捷方式的功能；\r\n- 没有 TC 9.0 增加的 Everything 搜索功能；\r\n- 无法实现 Listary→TC→Listary 的功能；\r\n- …………\r\n\r\n接下来简单说说我用 DC 替换 TC 的过程：\r\n\r\n- 第一步：配置 TC 的插件到 DC\r\n    - 之所以说 DC 是最为接近 TC 的文件管理器，最重要的一点就是 DC 支持 TC 的 wcx、wdx、wfx、wlx 插件，所以我可以将我在 TC 的插件直接转移到DC，不需要重新寻找和配置插件。\r\n        - ulister：万能的文件查看插件\r\n        - wdx_anytag：可以显示音乐的作者，曲名等信息，重命名音频时可以用。\r\n        - Total7zip：DC 自带的 7z 功能不能实现 `Ctrl-PageDn` 打开 exe，msi 文件，安装后可以。\r\n\r\n- 第二步：配置 TC 的自定义命令到 DC\r\n    - TC 中可以通过 USERCMD.ini 配置用户自定义的命令，很遗憾，DC 中并没有对应的功能，但是可以通过配置工具栏按钮来`曲线救国`。以我使用的几个命令为例：\r\n        - NewFiles：新建文件\r\n            - Command：`%COMMANDER_PATH%\\plugins\\NewFiles\\NewFiles.exe`\r\n            - Parameters：`%p`\r\n        - FastCopy：同步文件夹\r\n            - Command：`%COMMANDER_PATH%\\plugins\\FastCopy\\FastCopy.exe`\r\n            - Parameters：`/cmd=sync /open_window /no_exec /estimate /error_stop /bufsize=128 /log=FALSE /disk_mode=auto /speed=full /auto_close %ds\\%fs /to=%dt\\%ft`\r\n        - NirCMD：新建快捷方式\r\n            - Command：`%COMMANDER_PATH%\\plugins\\NirCmd\\nircmd.exe`\r\n            - Parameters：`shortcut %ps %Dt %fs`\r\n\r\n- 第三步：根据 TC 的配置调整 DC 的配置，此部分相对简单，但是由于 DC 界面大部分中英混杂，需要一点英语水平，主要包括：\r\n    - Ctrl-D 文件夹列表；\r\n    - 界面字体，配色；\r\n    - 调整 DC 的内部文件关联等；\r\n\r\n整个流程下来大致耗费 2 天左右，目前我仍在适应 DC 中。\r\n","cover":"","link":"doublecmd.html","preview":"\u003cp\u003e简单说一下用 Double Commander 替换 Total Commander 的经历\u003c/p\u003e\n","title":"从 Total Commander 到 Double Commander"},{"content":"\r\n\r\n### PDF 处理工具 PDFtk 介绍\r\n\r\n由于偶尔会遇到合并 PDF 或者分割 PDF 的需求，我的电脑中一般会留有一个 PDF 的处理软件，比如 Tracker PDF-Tools，PDF Shaper（[官网](http://www.pdfshaper.com/)）等。\r\n\r\n- Tracker PDF-Tools 网上的便携版很长时间没有更新了，这里就不再说了。\r\n\r\n- PDF Shaper：这个软件分为 Free 和 Pro 两个版本，Free 版的功能上会有一定的限制，比如分割只能按照分割文件的数量（split by number of files）和按照页数（split by number of pages），如果希望提取一个 50 页的 PDF 文件的 1-22，44-45 作为另一个 PDF 文件，有以下两个方法：\r\n    - 第一个，用 Pro 版，付费或用盗版。\r\n    - 第二个，用 Free 版，需要多处理几次，比如把所有页分割成单页的 PDF，再合并等。\r\n\r\n\r\n由于我近期在公司电脑分割文件时，公司的杀毒软件敬业地把我的盗版 PDF Shaper 给删了，我觉得还是需要找一个相应的替代品，一番搜索之后，[PDFtk](https://www.pdflabs.com/) 进入了我的视线，这是一个命令行的 PDF 处理工具，官方提供两个版本的 GUI，但是并没有涵盖 PDFtk 命令行的全部功能，但对我来说，已经足够用。，除官方的 GUI 外，也还有一些第三方的 GUI。\r\n\r\n**需要注明的是，一部分 PDF Shaper 有的功能 PDFtk 没有，但日常我只会用到分割合并，所以用 PDFtk 替换了 PDF Shaper，如果有其他需求，需要再加考虑。**\r\n\r\n- [PDFtk Free](https://www.pdflabs.com/)：官方 GUI，只有合并和分割 PDF 的功能可用，其他需付费升级到 Pro 才能使用。\r\n![PDFtk Free](/images/pdftk-free-screenshot.png)\r\n\r\n- [PDFtk Pro](https://www.pdflabs.com/)：官方 GUI，除合并，分割 PDF 外，还有加水印，加密，旋转等功能。\r\n![PDFtk Pro](/images/pdftk-pro-screenshot.png)\r\n\r\n- **[PDF Builder](http://www.angusj.com/pdftkb/)**（推荐）：第三方 GUI，有合并，分割 PDF，加水印，加密，旋转等功能。\r\n![PDFtk Builder](/images/PDFTK-Builder-screenshot.png)\r\n\r\n- [PDF PDF4ALL](http://pdftk4all.sourceforge.net/)：第三方 GUI，有合并，分割 PDF，加水印，加密，旋转等功能。\r\n![PDFtk PDF4ALL，请无视最后的任务栏](/images/PDFTK-PDF4ALL-screenshot.png)\r\n","cover":"","link":"pdftk.html","preview":"\u003cp\u003ePDFtk，一个简单好用的 PDF 处理工具\u003c/p\u003e\n","title":"PDF 处理工具 PDFtk 介绍"},{"content":"\r\n\r\n### 一键更新广告屏蔽大师 ADbyby 的规则\r\n\r\n\u003e 2023.02.13 本文内容已过期，ADbyby 目前已无法正常使用。\r\n\r\n[广告屏蔽大师](http://www.adbyby.com/)是近两年来使用的广告屏蔽软件，效果很不错，近期规则更新的服务器貌似被攻击，规则更新不正常，讨论群内的大佬给了个规则的更新地址，于是写了个脚本用来双击更新，放到广告屏蔽大师目录即可。\r\n\r\n    @echo off\r\n    :: 脚本使用aria2作为下载工具\r\n    set aria2=d:\\1-Program\\0-CommandLineTools\\Aria2\\aria2c.exe\r\n    :: 删除原有备份规则\r\n    del /s /q SSLLIST.ini.bak\r\n    del /s /q data\\lazy.txt.bak\r\n    del /s /q data\\video.txt.bak\r\n    :: 备份现有规则\r\n    move /y SSLLIST.ini SSLLIST.ini.bak\r\n    move /y data\\lazy.txt data\\lazy.txt.bak\r\n    move /y data\\video.txt data\\video.txt.bak\r\n    :: 指定下载地址\r\n    set sslistlink=https://raw.githubusercontent.com/adbyby/SSLLIST/master/SSLLIST.ini\r\n    set lazylink=https://raw.githubusercontent.com/adbyby/xwhyc-rules/master/lazy.txt\r\n    set videolink=https://raw.githubusercontent.com/adbyby/xwhyc-rules/master/video.txt\r\n    \r\n    %aria2% --split=15 --max-connection-per-server=15 --dir=data %sslistlink%\r\n    %aria2% --split=15 --max-connection-per-server=15 --dir=data %lazylink%\r\n    %aria2% --split=15 --max-connection-per-server=15 --dir=data %videolink%\r\n    \r\n    move /y data\\ssllist.ini ssllist.ini\r\n    exit\r\n\r\n攻击快点停吧，我懒得双击更新……\r\n","cover":"","link":"adbybyupdate.html","preview":"\u003cp\u003e因为近期广告屏蔽大师的更新不稳定，根据讨论群内提到的更新地址写了个更新脚本。\u003c/p\u003e\n","title":"一键更新广告屏蔽大师 ADbyby 的规则（已失效）"},{"content":"\r\n\r\n#### Vim 插件 popup.vim\r\n\r\n[popup.vim](https://github.com/luzhlon/popup.vim) 是一个 Vim 的一个菜单插件，通过对应的配置，可以添加自定义的菜单。\r\n\r\n支持子菜单等，有一些常用的命令放进去挺方便，具体的配置可以到插件的 Github 上面去看，很详细。\r\n\r\n![Vimplugin-popup.vim1](/images/Vimplugin-popup.vim1.gif)\r\n\r\n    \" Popup\r\n    let plug = [\r\n            \\['q', '清理插件', \":PlugClean\\\u003ccr\u003e\"],\r\n            \\['e', '清理Undofiles', \":!d:/1-Program/Vim/Vimconf/clean.bat\\\u003ccr\u003e\"]]\r\n    \r\n    let sub = [['s', '重复行', [\r\n                  \\['q', '删除重复行（相同的留下一行）', \":call Sgdd()\\\u003ccr\u003e\"], \r\n                  \\['w', '删除重复行（相同的保留最后的一行，保持顺序）', \":call Sgndd()\\\u003ccr\u003e\"],\r\n                  \\['e', '删除重复行（相同的保留最初的一行，保持顺序）', \":call Sgudd()\\\u003ccr\u003e\"],\r\n                  \\['r', '删除重复行（相同的完全删除）', \":call Sgdj()\\\u003ccr\u003e\"],\r\n                  \\['t', '删除非重复行', \":call Svdd()\\\u003ccr\u003e\"]]],\r\n              \\['x', '全角转半角（部分）', \":call FtoH()\\\u003ccr\u003e\"],\r\n              \\['c', '通话录音重命名', \":%s/\\\\(.*\\\\)_\\\\(.*\\\\)_\\\\(.*\\\\).amr/\\\\2_\\\\3_\\\\1.amr/g\\\u003ccr\u003e\"]]\r\n    \r\n    let sting= [\r\n            \\['q', '显示菜单栏', \":set guioptions=m\\\u003ccr\u003e\"],\r\n            \\['w', '临时长行切换', \":call LonglineJK()\\\u003ccr\u003e\"],\r\n            \\['e', '折叠切换', \":call Foldtoggle()\\\u003ccr\u003e\"],\r\n            \\['r', '文件比较', \":browse vert diffsplit\\\u003ccr\u003e\"],\r\n            \\['t', '转换为十六进制', \":%!xxd\\\u003ccr\u003e\"],\r\n            \\['y', '从十六进制转回', \":%!xxd -r\\\u003ccr\u003e\"]]\r\n    \r\n    let Alc = [\r\n            \\['a', '插件相关', plug],\r\n            \\['s', '常用替换' , sub],\r\n            \\['d', '临时设置' , sting],\r\n            \\['q', '更新插件', \":PlugUpdate \\| PlugUpgrade\\\u003ccr\u003e\"]]\r\n    call popup#add('Alc', 'Alc', Alc)\r\n    nmap \u003cexpr\u003e\u003cm-a\u003e Popup('Alc')\r\n    \r\n    \" ### 重复行相关 {{{1\r\n    \" **** Sgdd 删除重复行（相同的留下一行） {{{2\r\n    function! Sgdd()\r\n        silent sort u\r\n    endfunction\r\n    \r\n    \" **** Sgndd 删除重复行（相同的保留最后的一行，保持顺序） {{{2\r\n    function! Sgndd()\r\n        silent %s/^/\\=line('.').' '\r\n        silent sort /\\d\\+ /\r\n        silent g/^\\d\\+ \\(.*\\)\\n^\\d\\+ \\1/d\r\n        silent sort n\r\n        silent %s/^\\d\\{-} //\r\n    endfunction\r\n    \r\n    \" **** Sgudd 删除重复行（相同的保留最初的一行，保持顺序） {{{2\r\n    function! Sgudd()\r\n        silent g/^/m 0\r\n        silent %s/^/\\=line('.').' '\r\n        silent sort /\\d\\+ /\r\n        silent g/^\\d\\+ \\(.*\\)\\n^\\d\\+ \\1/d\r\n        silent sort n\r\n        silent %s/^\\d\\{-} //\r\n        silent g/^/m 0\r\n    endfunction\r\n    \r\n    \" **** Sgdj 删除重复行（相同的完全删除） {{{2\r\n    function! Sgdj()\r\n        silent sort\r\n        silent g/^\\(.*\\)$\\n\\1$/normal dj\r\n    endfunction\r\n    \r\n    \" **** Svdd 删除非重复行 {{{2\r\n    function! Svdd()\r\n        silent sort\r\n        silent v/^\\(.*\\)$\\n\\1$/d\r\n    endfunction\r\n    \r\n    \" ### FtoH 全角转半角（部分） {{{1\r\n    function! FtoH()\r\n        silent %s/\\v(１|２|３|４|５|６|７|８|９|０)/\\={'１':'1','２':'2','３':'3','４':'4','５':'5','６':'6','７':'7','８':'8','９':'9','０':'0'}[submatch(0)]/ge\r\n        silent %s/\\v(Ａ|Ｂ|Ｃ|Ｄ|Ｅ|Ｆ|Ｇ|Ｈ|Ｉ|Ｊ|Ｋ|Ｌ|Ｍ|Ｎ|Ｏ|Ｐ|Ｑ|Ｒ|Ｓ|Ｔ|Ｕ|Ｖ|Ｗ|Ｘ|Ｙ|Ｚ)/\\={'Ａ':'A','Ｂ':'B','Ｃ':'C','Ｄ':'D','Ｅ':'E','Ｆ':'F','Ｇ':'G','Ｈ':'H','Ｉ':'I','Ｊ':'J','Ｋ':'K','Ｌ':'L','Ｍ':'M','Ｎ':'N','Ｏ':'O','Ｐ':'P','Ｑ':'Q','Ｒ':'R','Ｓ':'S','Ｔ':'T','Ｕ':'U','Ｖ':'V','Ｗ':'W','Ｘ':'X','Ｙ':'Y','Ｚ':'Z'}[submatch(0)]/ge\r\n        silent %s/\\v(ａ|ｂ|ｃ|ｄ|ｅ|ｆ|ｇ|ｈ|ｉ|ｊ|ｋ|ｌ|ｍ|ｎ|ｏ|ｐ|ｑ|ｒ|ｓ|ｔ|ｕ|ｖ|ｗ|ｘ|ｙ|ｚ)/\\={'ａ':'a','ｂ':'b','ｃ':'c','ｄ':'d','ｅ':'e','ｆ':'f','ｇ':'g','ｈ':'h','ｉ':'i','ｊ':'j','ｋ':'k','ｌ':'l','ｍ':'m','ｎ':'n','ｏ':'o','ｐ':'p','ｑ':'q','ｒ':'r','ｓ':'s','ｔ':'t','ｕ':'u','ｖ':'v','ｗ':'w','ｘ':'x','ｙ':'y','ｚ':'z'}[submatch(0)]/ge\r\n        normal gg\r\n    endfunction\r\n    \r\n    \" 临时长行 {{{1\r\n    function! LonglineJK()\r\n    \tif !exists(\"b:longlinestatus\")\r\n            nnoremap j gj\r\n            nnoremap k gk\r\n    \t\tsilent let b:longlinestatus = 1\r\n    \telse\r\n            nnoremap j j\r\n            nnoremap k k\r\n            silent unlet b:longlinestatus\r\n    \tendif\r\n    endfunction\r\n    \r\n    \" 折叠设置 {{{1\r\n    function! Foldtoggle()\r\n    \tif !exists(\"b:foldstatus\")\r\n    \t\tsilent set foldmethod=marker\r\n    \t\tnormal zN\r\n    \t\tsilent let b:foldstatus = 1\r\n    \telse\r\n    \t\tnormal zn\r\n    \t\tsilent unlet b:foldstatus\r\n    \tendif\r\n    endfunction\r\n    \r\n","cover":"","link":"vimplugin-popup.vim.html","preview":"\u003cp\u003epopup.vim，Vim 的一个菜单插件。\u003c/p\u003e\n","title":"Vim 插件 popup.vim"},{"content":"\r\n\r\n### Firefox WebExtension 扩展与油猴\r\n\r\nFirefox 计划在今年年底发布 Firefox57 中取消对旧的扩展的支持，只支持 WebExtension 的扩展，趁着最近有空提前尝试替换目前使用的扩展为 WebExtension 的扩展。总体上来说，对使用习惯有一定影响，如 WebExtension 的鼠标手势不能像之前的UC脚本一样在`about:addons`上生效，但总体还在可以接收的范围内。以下将会以 旧扩展→新扩展 的形式简单说一下替换的扩展，顺带记一下目前在使用的油猴脚本。\r\n\r\n#### FlashGot → ???\r\n\r\n目前没有替代品，虽然之前提到过 WebExtension 的版本正在开发，目前看不见踪影，近期改用 Internet Download Manager 作为下载工具，IDM 的扩展支持 Firefox57。\r\n\r\n#### Greasemonkey → Tampermonkey\r\n\r\nTampermonkey 用起来已经很不错了，貌似无法直接导入在Greasemonkey中的脚本，我的几个油猴脚本都重新安装了一遍，发现Tampermonkey的配置可以备份到Google Drive，估计就算Greasemonkey的WebExtension版本出来了我也不会退回去了。\r\n\r\n- [iqiyi-player-switch](https://github.com/gooyie/userscript-iqiyi-player-switch)：爱奇艺强制使用HTML5播放器\r\n- [百度网盘直接下载助手](https://greasyfork.org/zh-CN/scripts/23635-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B)：百度网盘增加一个下载功能\r\n- [视频站启用html5播放器](http://bbs.kafan.cn/thread-2093014-1-1.html)\r\n    - 优酷，腾讯等视频网站强制使用HTML5播放器，不切换UA的话，土豆会提示未安装Flash。\r\n- [Text To link](https://lkytal.github.io/)\r\n    - 将网页内的文本链接转换成可点击的链接，用来替代之前的TextLink，但是效果不如UC的TextLink效果好。\r\n\r\n#### VimFX → Saka Key\r\n\r\n之前这里写的是Vimium-FF的，发现Saka Key的更新更活跃，配置支持导入导出，在新标签页中打开的功能需要关闭Firefox的禁止弹出窗口功能才能正常工作。\r\n\r\n#### UserChromeJS\r\n\r\n之前我一直使用的UC脚本其实只有几个：\r\n\r\n- 鼠标手势脚本，鼠标拖拽脚本→smartUp手势\r\n\r\n- 标签页右键关闭→乖乖改用中键\r\n\r\n- TextLink→用油猴脚本替代\r\n\r\n---\r\n\r\n所有替换后的扩展就可在[Firefox附加组件](https://addons.mozilla.org)上找到。\r\n\r\n中途再试了一次，还是没能转去用Chrome。\r\n","cover":"","link":"firefoxmore.html","preview":"\u003cp\u003e尝试一下 WebExtension，整理一下 Firefox，为 Firefox57 做准备\u003c/p\u003e\n","title":"Firefox WebExtension 扩展与油猴"},{"content":"\r\n\r\n### Youtube-DL与You-Get\r\n\r\n+ 2019.01.01 由于 You-Get 官方长时间不更新 Windows 版的，本文的部分内容已过时，请见[WinPython 自动更新 You-Get 和 Youtube-dl](winpythonmediadown.html)。\r\n\r\n去年7月曾经写过一片文章 [You-Get 简介](you-get.html)来介绍You-Get这个命令行的视频下载工具，使用了一段时间之后发现偶尔会下载失败（可能是视频网站更新后You-Get没能很快跟上），最近发现了另一个命令行的视频下载工具，[Youtube-DL](https://rg3.github.io/youtube-dl/)，于是写了个批处理来调用这两个工具，设定好两个工具的位置，双击运行脚本，粘贴入视频地址即可，按回车，输入数字选择调用的工具和是否使用代理即可。\r\n\r\n    @echo off\r\n    ::设定You-Get和Youtube-DL的位置\r\n    set youget=d:\\1-Program\\0-CommandLineTools\\MediaDown\\You-Get.exe\r\n    set youtubedl=d:\\1-Program\\0-CommandLineTools\\MediaDown\\youtube-dl.exe\r\n    \r\n    echo.\u0026echo.视频下载工具，整合了You-Get与Youtube-DL\r\n    echo.\u0026echo.\r\n    set /p URL=请输入要URL并回车:\r\n    \r\n    :MediaDownMenu\r\n    echo.\u0026echo.\r\n    echo You-Get List\r\n    echo 11.You-Get   下载到D:\\ZeroDown，不使用代理\r\n    echo 12.You-Get   下载到D:\\ZeroDown，使用代理\r\n    echo.\u0026echo.\r\n    echo YoutubeDL List\r\n    echo 21.YoutubeDL 下载到D:\\ZeroDown，不使用代理\r\n    echo 22.YoutubeDL 下载到D:\\ZeroDown，使用代理\r\n    echo.\u0026echo.\r\n    set /p choose=请选择相应的处理方式：\r\n    if \"%choose%\"==\"11\" set OP=-o D:\\ZeroDown \u0026Goto YouGetDown\r\n    if \"%choose%\"==\"12\" set OP=--http-proxy 127.0.0.1:1080 -o D:\\ZeroDown\\ \u0026Goto YouGetDown\r\n    if \"%choose%\"==\"21\" set OP=-o \"D:\\ZeroDown\\%%(title)s.%%(ext)s\" \u0026Goto youtubedlDown\r\n    if \"%choose%\"==\"22\" set OP=-o \"D:\\ZeroDown\\%%(title)s.%%(ext)s\" --proxy socks5://127.0.0.1:1080/ \u0026Goto youtubedlDown\r\n    ::相关的一些比如代理的设置都写到了上面\r\n    \r\n    :YouGetDown\r\n    %youget% %OP% %URL%\r\n    exit\r\n    \r\n    :youtubedlDown\r\n    %youtubedl% %OP% %URL%\r\n    exit\r\n\r\n最近真是越来越懒了。\r\n","cover":"","link":"mediadown.html","preview":"\u003cp\u003e两个命令行在线视频下载工具\u003c/p\u003e\n","title":"Youtube-DL与You-Get（2019.01.01 部分内容已过时）"},{"content":"\r\n\r\n### Excel - 根据指定列拆分文件\r\n\r\n写本文的原因是因为在知乎上面看到了[饼干数数的专栏](https://zhuanlan.zhihu.com/p/25010939?refer=Latelegance)中的一篇文章，公众号中提供了按指定列拆分文件的 VBA 代码。\r\n\r\n    Sub Main()\r\n        '创建文件夹\r\n        Dim iPath As String\r\n        iPath = ThisWorkbook.Path \u0026 \"\\拆分结果\"\r\n        If Dir(iPath, vbDirectory) = \"\" Then\r\n            MkDir iPath\r\n        ElseIf MsgBox(\"　　目标文件夹已存在，若继续操作将覆盖同名文件，是否继续？\", vbOKCancel) = vbCancel Then\r\n            Exit Sub\r\n        End If\r\n        iPath = iPath \u0026 \"\\\"\r\n        '自定义排序\r\n        With ActiveSheet.Sort\r\n            .SortFields.Clear\r\n            .SortFields.Add _\r\n                Key:=[A1], _\r\n                SortOn:=xlSortOnValues, _\r\n                Order:=xlAscending, _\r\n                DataOption:=xlSortNormal\r\n            .SetRange [A1].CurrentRegion\r\n            .Header = xlYes\r\n            .MatchCase = False\r\n            .Orientation = xlTopToBottom\r\n            .SortMethod = xlPinYin\r\n            .Apply\r\n        End With\r\n        '主体循环\r\n        Dim iWkb As Workbook, nWkb As Integer\r\n        Dim i As Integer, j As Integer\r\n        Application.DisplayAlerts = False\r\n        nWkb = 0\r\n        With ActiveSheet\r\n            j = 2\r\n            For i = 2 To .[A1].CurrentRegion.Rows.Count\r\n                If .Range(\"A\" \u0026 i) \u003c\u003e .Range(\"A\" \u0026 i + 1) Then\r\n                    Set iWkb = Workbooks.Add\r\n                    .[A1].Resize(1, 3).Copy [A1]\r\n                    .Range(\"A\" \u0026 j).Resize(i - j + 1, 3).Copy [A2]\r\n                    iWkb.SaveAs iPath \u0026 .Range(\"A\" \u0026 i)\r\n                    iWkb.Close False\r\n                    j = i + 1\r\n                    nWkb = nWkb + 1\r\n                End If\r\n            Next\r\n        End With\r\n        Application.DisplayAlerts = True\r\n        MsgBox (\"　　本次共拆分了 \" \u0026 nWkb \u0026 \" 份~\")\r\n    End Sub\r\n\r\n\r\n因为上面的代码中筛选选定的是 A 列，试着改了一下，增加通用性，需要将参数写在第二张表的 B3 和 B4 的单元格，而需要拆分的数据放在第一张表，而且筛选项必须放在第一行。\r\n\r\n![拆分参数](/images/Excel2 - 1.png)\r\n\r\n\r\n    Sub Main()\r\n        Application.ScreenUpdating = False\r\n        Worksheets(1).Activate\r\n        apc = Worksheets(2).Range(\"B3\").Value\r\n        apr = Worksheets(2).Range(\"B4\").Value\r\n        '创建文件夹\r\n        Dim iPath As String\r\n        iPath = ThisWorkbook.Path \u0026 \"\\拆分结果\"\r\n        If Dir(iPath, vbDirectory) = \"\" Then\r\n            MkDir iPath\r\n        ElseIf MsgBox(\"　　目标文件夹已存在，若继续操作将覆盖同名文件，是否继续？\", vbOKCancel) = vbCancel Then\r\n            Exit Sub\r\n        End If\r\n        iPath = iPath \u0026 \"\\\"\r\n        '自定义排序\r\n        With ActiveSheet.Sort\r\n            .SortFields.Clear\r\n            .SortFields.Add _\r\n                Key:=Range( apc \u0026 apr), _\r\n                SortOn:=xlSortOnValues, _\r\n                Order:=xlAscending, _\r\n                DataOption:=xlSortNormal\r\n            .SetRange [A1].CurrentRegion\r\n            .Header = xlYes\r\n            .MatchCase = False\r\n            .Orientation = xlTopToBottom\r\n            .SortMethod = xlPinYin\r\n            .Apply\r\n        End With\r\n        '主体循环\r\n        Dim iWkb As Workbook, nWkb As Integer\r\n        Dim i As Integer, j As Integer, k As Integer\r\n        Application.DisplayAlerts = False\r\n        nWkb = 0\r\n        With ActiveSheet\r\n            j = 2\r\n            k = WorksheetFunction.CountA(Range(\"1:1\"))\r\n            For i = 2 To .[A1].CurrentRegion.Rows.Count\r\n                If .Range(apc \u0026 i) \u003c\u003e .Range(apc \u0026 i + 1) Then\r\n                    Set iWkb = Workbooks.Add\r\n                    .[A1].Resize(1, k).Copy [A1]\r\n                    .Range(\"A\" \u0026 j).Resize(i - j + 1, 3).Copy [A2]\r\n                    iWkb.SaveAs iPath \u0026 .Range(apc \u0026 i)\r\n                    iWkb.Close False\r\n                    j = i + 1\r\n                    nWkb = nWkb + 1\r\n                End If\r\n            Next\r\n        End With\r\n        Application.DisplayAlerts = True\r\n        MsgBox (\"　　本次共拆分了 \" \u0026 nWkb \u0026 \" 份~\")\r\n        Worksheets(2).Activate\r\n        Application.ScreenUpdating = False\r\n    End Sub\r\n\r\n![源数据](/images/Excel2 - 2.png)\r\n\r\n![按A列拆分](/images/Excel2 - 3.png)\r\n\r\n![按B列拆分](/images/Excel2 - 4.png)\r\n\r\n在实际工作中测试发现当条目很多的时候会溢出，可以考虑将多条目的文件用排序后手工先分成两个，之后分别拆分。\r\n\r\n","cover":"","link":"excel2.html","preview":"\u003cp\u003e快速拆分文件\u003c/p\u003e\n","title":"Excel - 根据指定列拆分文件"},{"content":"\r\n\r\n### RSS 相关的网站\r\n\r\n+ 2019 年 5 月更新：\r\n    - 本文提到的部分服务已关停，新方式请见[2019 年我的 RSS 订阅方式](RSS2019.html)。\r\n\r\n+ 2017 年 4 月更新：\r\n    - 去除微广场，服务已经关闭，RSS订阅公众号似乎没有什么好的平台了。\r\n\r\nRSS 是个好东西，可以将不同地方的信息聚合在一起，方便筛选阅读，但是自从微信公众号这样的平台出现之后，可用的 RSS 的订阅源是越来越少了，幸好现在还有一些服务可以生成 RSS 订阅源。\r\n\r\n#### RSS 阅读器\r\n- [InoReader](http://www.inoreader.com/)\r\n    - 个人感觉还不错的 RSS 服务，安卓端可以用 FeedMe 来阅读，效果比官方的客户端要好。\r\n- [Blogtrottr](https://blogtrottr.com/)\r\n    - 这并不是一般概念上的 RSS 阅读器，它会将订阅的 RSS 源的内容以邮件的形式发送到指定的邮箱，我曾经试用过一段时间，但是发现由于获取的内容是 PC 端的格式，在手机上面看效果并不太好。\r\n\r\n#### 常见的网站的 RSS 订阅源生成服务\r\n- [微博看看](http://weibo.wbdacdn.com/)\r\n    - 生成指定的微博账号的 RSS Feed。\r\n- [知乎专栏](https://rss.lilydjwg.me/)\r\n    - 生成指定的知乎专栏的 RSS Feed。\r\n- [简书](http://jianshu.milkythinking.com/)\r\n    - 生成指定的简书的 RSS Feed。\r\n\r\n#### 不常见的网站的 RSS 订阅源生成服务\r\n- [FEED43](https://feed43.com/)\r\n    - 按照需要给网页生成订阅源，但是需要有一点点的 HTML 基础，我用它生成了一个订阅源，用来每天将上一天的楼盘交易量推送给我，方便做统计。\r\n    - 教程：[利用 Feed43，将任意网页制作成 RSS 订阅源 - 少数派](http://sspai.com/34320)\r\n\r\n![RSS](/images/RSS.png)\r\n","cover":"","link":"rss2017.html","preview":"\u003cp\u003e罗列一下一些和RSS相关的网站\u003c/p\u003e\n","title":"RSS 相关的网站（已过时）"},{"content":"\r\n\r\n### 一个 Excel 函数实例\r\n\r\n最近遇到一个需求，有和下面类似的一张表，最左列的序号不管是否进行记录都会更新，右侧的数据只有我统计的时候才会更新，但是每次我统计之后都需要计算比上一次统计时的数值增加了多少，最简单的方法当然是`=单元格-单元格`这种方式，但是有一个问题，这些公式毫无规律可循，很多时候并不能直接填充，不能一条公式拉到底，作为一个懒人，这实在是……\r\n\r\n![样板](/images/Excel1-1.png)\r\n\r\nGoogle 了一下，获取行或列中最后一个非空单元格数值，可以用这样一条公式：`LOOKUP(9E+307,A1:A100)`（`9E+307`一般用来Excel中最大的数值），于是小改一下，再加上求增加了多少（注意这个是放在 B3 单元格对应的单元格里的）：\r\n\r\n`B3-LOOKUP(9E+307,B$1:B2)`\r\n\r\n![图片2](/images/Excel1-2.png)\r\n\r\n下拉之后就出现了第二个问题，有一些没有做统计的单元格，也会出现有数值的情况（如上图），同时新增合计那边一直有数值，这个时候需要再加个 IF （注意这个是放在 B3 单元格对应的单元格里的）：\r\n\r\n`IF(B3\u003c\u003e\"\",B3-LOOKUP(9E+307,$B$1:B2),\"\")`\r\n\r\n然后新增合计列有出现了新的问题，之前使用的是`=C3+E3`这个样子的公式，但是由于前文中给出的公式中在未进行统计的行的运算结果是空，用`单元格+单元格`的方式会报错，于是改用 SUM\r\n\r\n`SUM(C3,E3)`\r\n\r\n![图片3](/images/Excel1-3.png)\r\n\r\n之后就剩下两个问题了，自动获取最后更新时间并且填写在 I1 单元格，最后更新时间就是最后添加的数据在 A 列的对应日期，首先要确定 B 列最后一个有数值的单元格的位置，下面这个公式可以确定 B 列最后一个单元格的行数（样表输出数值为 15）\r\n\r\n`MATCH(9E+307,B:B)`\r\n\r\n之后我们需要将 A 列这个列值和 15 这个行数合并在一起，这个时候用 INDIRECT：\r\n\r\n`INDIRECT(\"A\"\u0026MATCH(9E+307,B:B))`\r\n\r\n![图片4](/images/Excel1-4.png)\r\n\r\n当然你也需要将 I1 单元格格式设置成日期，和 A 列一样。至于 I2 的更新间隔，可以用上面提到的几个函数组合一下\r\n\r\n`MATCH(E9+307,B:B)-MATCH(E9+307,B$1:INDIRECT(\"B\"\u0026(MATCH(E10+307,B:B)-1)))-1\u0026\"天\"`\r\n\r\n![图片5](/images/Excel1-5.png)\r\n\r\n稍微解释一下：\r\n\r\n- `MATCH(E9+307,B:B)`：获取 B 列最后一个非空单元格的行值\r\n- `MATCH(E10+307,B:B)-1`：获取 B 列最后一个非空单元格的上一行的行值\r\n- `INDIRECT(\"B\"\u0026(MATCH(E10+307,B:B)-1))`：用 INDIRECT 构成 B 列最后一个非空单元格的上一个单元格的位置\r\n- `MATCH(E9+307,B$1:INDIRECT(\"B\"\u0026(MATCH(E10+307,B:B)-1)))`：获取 B 列最后一个非空单元格上的最后一个单元格，即 B 列倒数第二个非空单元格的行值\r\n- 最后就是做一个减法而已，不用说了\r\n\r\n最后放一个 GIF 测试一下效果，注意右边的时间和更新间隔会自动更新。\r\n\r\n![图片6](/images/Excel1-6.gif)\r\n","cover":"","link":"excel1.html","preview":"","title":"一个 Excel 函数实例"},{"content":"\r\n\r\n## FFmpeg 调用脚本\r\n\r\nFFmpeg 是一个通用的视频音频转换工具，自由度比较高，因为之前处理视频的时候使用的是格式工厂（其实安装格式工厂之后在安装的文件夹中也有 FFmpeg），但是格式工厂转换出来的文件画质变化较大，后来改用 FFmpeg 感觉不错，于是写了个脚本来调用。\r\n\r\n    :: FFmpeg转换脚本\r\n    @echo off\r\n    \r\n    :: 音频参数 {{{1\r\n    set aformat=mp3\r\n    set acodec=mp3\r\n    set ar=44100\r\n    set ab=128K\r\n    set ac=2\r\n    set vol=\r\n    \r\n    set AO=-c:a %acodec% -ar %ar% -ac %ac% -ab %ab% -y\r\n    set AOM=-vn -f %aformat% -ss 00:00:10 -t 00:00:50 -vol %vol% -strict -2\r\n    set AOM=-vn\r\n    \r\n    :: 视频参数 {{{1\r\n    set vformat=mp4\r\n    set vcodec=h264\r\n    set crf=24\r\n    set resize=\r\n    set aspect=\r\n    set bv=\r\n    \r\n    set VO=-c:v %vcodec% -c:a aac -strict -2 -ar %ar% -ac %ac% -ab %ab% -f %vformat% -crf %crf% -y\r\n    set VOM=-threads 0 -ss 00:00:10 -t 00:00:5 -s %resize% -aspect %aspect% -vol %vol% -b:v %bv% -an\r\n    set VOM=-threads 0\r\n    set VOHP=-preset veryslow -refs 4 -bf 3 -g 360 -keyint_min 1 -sc_threshold 60 -deblock 1:1 -qcomp 0.5 -psy-rd 0.3:0 -aq-mode 2 -aq-strength 0.8 -me_method umh -me_range 24 -subq 10 -flags loop\r\n    \r\n    :: GIF参数 {{{1\r\n    set videofir=fps=5,scale=iw*2/3:ih*2/3:flags=lanczos,palettegen\r\n    set videogif=fps=5,scale=iw*2/3:ih*2/3:flags=lanczos[x];[x][1:v]paletteuse\r\n    \r\n    :: 路径设置 {{{1\r\n    set ffmpeg=d:\\1-Program\\0-CommandLineTools\\ImageMagick\\ffmpeg.exe\r\n    set input=d:\\3-FastStone\\InPut\r\n    set output=d:\\3-FastStone\\OutPut\r\n    set outputpath=%output%\\\r\n    md %outputpath%\r\n    \r\n    :: 显示选项 {{{1\r\n    :Menu\r\n    echo 1.音频 - 转换\r\n    echo 2.视频 - 转换\r\n    echo 3.视频 - 转换 HP\r\n    echo 4.视频 - 复制 源\r\n    echo 5.视频 - GIF\r\n    echo.\u0026echo.\r\n    set /p choose=输入数字回车：\r\n    if \"%choose%\"==\"1\" set AU=%AO% %AOM%\u0026Goto Audio\r\n    if \"%choose%\"==\"2\" set VU=%VO% %VOM%\u0026Goto Video\r\n    if \"%choose%\"==\"3\" set VU=%VO% %VOM% %VOHP%\u0026Goto Video\r\n    if \"%choose%\"==\"4\" set VU=-c:v copy -c:a copy\u0026Goto Video\r\n    if \"%choose%\"==\"5\" Goto VideoGIF\r\n    \r\n    :: 具体命令 {{{1\r\n    :Audio\r\n    for /r %input% %%a in (*.*) do (%ffmpeg% -i \"%%a\" %AU% \"%outputpath%%%~na%ab%.%aformat%\")\r\n    pause\r\n    Exit\r\n    \r\n    :Video\r\n    for /r %input% %%a in (*.*) do (%ffmpeg% -i \"%%a\" %VU% \"%outputpath%%%~na.%vformat%\")\r\n    pause\r\n    Exit\r\n    \r\n    :VideoGIF\r\n    for /r %input% %%a in (*.*) do (\r\n        %ffmpeg% -y -i \"%%a\" -vf %videofir% %temp%palette.png\r\n        %ffmpeg% -y -i \"%%a\" -i %temp%palette.png -filter_complex \"%videogif%\" \"%outputpath%%%~na.gif\")\r\n    pause\r\n    Exit\r\n    \r\n","cover":"","link":"ffmpeg.html","preview":"\u003cp\u003eFFmpeg 用来转换音频，视频的格式很不错\u003c/p\u003e\n","title":"FFmpeg 调用脚本"},{"content":"\r\n\r\n### Candy 简介\r\n\r\n[Candy](https://github.com/aamii/Candy) 是万年书妖用 AutoHotKey 开发的一款快速操作工具，主要功能有以下几个：\r\n\r\n- 根据配置文件，调用不同程序打开当前光标选择的文件，在不同情况下我们可能需要用不同的程序来打开同一个文件，比如，对于图片文件，大部分时间我会选择使用 IrfanView 来查看，但是有时候我也会使用 GIMP 来进行编辑：\r\n\r\n        Candy 的这个功能最大的好处是和系统的文件关联并不冲突，\r\n        即使重装系统之后，只要配置中的程序能正常使用，\r\n        Candy 就可以正常实现调用功能。\r\n\r\n![Candy1](/images/Candy1.png)\r\n\r\n- 我使用比较多的 Candy 的另一个功能是对文本的操作，比如选择文字后用 Candy 调用浏览器用指定的搜索引擎进行搜索等，又或者是对网页链接进行相应处理。\r\n\r\n![Candy2](/images/Candy2.png)\r\n\r\n![Candy3](/images/Candy3.png)\r\n\r\n除了搜索引擎外，Candy 还可以调用的在线服务：\r\n\r\n    1. 调用 FLVCD 解析当前选中的网页链接\r\n    \u0026FLVCD                      = Web|http://www.flvcd.com/parse.php?kw={text:utf-8}\r\n\r\n    2. 通过 980.so 生成当前选择的网页链接的短链接，通过网盘分享文件的时候会用来缩短链接。\r\n    \u0026D短网址                    = Web|http://980.so/api.php?url={text:utf-8}\r\n\r\n","cover":"","link":"ahk-candy.html","preview":"\u003cp\u003e简单介绍一下 Candy，顺便记录一些可以通过 Candy 来调用的服务，作备份用\u003c/p\u003e\n","title":"Candy 简介"},{"content":"\r\n\r\n### VBA - Excel 切换工作表\r\n\r\n通过 VBA 实现用 Ctrl-Tab 和 Ctrl-Shift-Tab 来切换工作表的功能，可能用得上。\r\n\r\n    Sub Auto_Open()\r\n        Application.OnKey \"^{tab}\", \"DownSheet\"\r\n        Application.OnKey \"^+{tab}\", \"UpSheet\"\r\n    End Sub\r\n    Sub DownSheet()\r\n        Dim i As Integer\r\n        i = Worksheets.Count\r\n        If ActiveSheet.Index \u003c i Then\r\n            Worksheets(ActiveSheet.Index + 1).Activate\r\n      Else\r\n            Worksheets(1).Activate\r\n        End If\r\n    End Sub\r\n    Sub UpSheet()\r\n        Dim i As Integer\r\n        i = Worksheets.Count\r\n        If ActiveSheet.Index \u003e 1 Then\r\n            Worksheets(ActiveSheet.Index - 1).Activate\r\n        Else\r\n            Worksheets(i).Activate\r\n        End If\r\n    End Sub\r\n\r\n### VBA - Excel 清除 R1C1 格式\r\n\r\n有些时候遇到的数据是 R1C1 格式的，用这个宏来整理一下\r\n\r\n    Sub RCFix()\r\n    Dim rng As Range\r\n    For Each rng In Intersect(Selection, ActiveSheet.UsedRange)\r\n        With rng\r\n            .FormulaR1C1 = .Value\r\n            .NumberFormat = \"General\"\r\n        End With\r\n    Next\r\n    End Sub\r\n","cover":"","link":"vba-useful.html","preview":"\u003cp\u003e用 Ctrl-Tab 和 Ctrl-Shift-Tab 来切换工作表、清除 R1C1 格式等\u003c/p\u003e\n","title":"Excel 常用 VBA"},{"content":"\r\n\r\n### FastCopy 的几种操作模式\r\n\r\n![FastCopy](/images/FastCopy.png)\r\n\r\n对我来说，FastCopy 属于那种平常根本感觉不到有什么用，但是一旦有机会用上了就不太愿意删的软件。\r\n\r\n试想一下，你在电脑上做一个项目，这个项目的文件需要定期复制到移动硬盘中进行存档，同时，这个项目的文件很乱，文件（夹）结构每天都在改变：\r\n\r\n+ 如果这个项目的总体积很小：\r\n    + 用 Total Commander 的同步文件夹功能也可以（这个功能当两边不在同一硬盘上的时候会比较慢）\r\n    + 每次都之间删掉文件夹重新复制也可以。\r\n\r\n+ 如果这个项目的总体积很大：\r\n    + FastCopy 是一个更好的选择，只要设定好源路径和目标路径，操作模式选择为“同步”即可。\r\n\r\nFastCopy 的帮助文件中提到的操作模式有以下几种：\r\n\r\n| 模式                  | 详细                                                                                                                    |\r\n|-----------------------|-------------------------------------------------------------------------------------------------------------------------|\r\n| 差分复制（不覆盖）    | 不覆盖任何目标目录的重名文件。                                                                                          |\r\n| 差分复制（大小/日期） | 如果重名，只复制文件大小和时间不同的文件。(默认)                                                                        |\r\n| 差分复制（最新日期）  | 如果重名，保留时间最新的文件。                                                                                          |\r\n| 复制（覆盖）          | 普通复制，重名的都覆盖。                                                                                                |\r\n| 同步（大小/时间）     | 复制所有文件大小和时间不同的文件。 \u003cbr\u003e 同时删除所有目标目录有但源目录没有的文件/目录。                                 |\r\n| 移动（覆盖）          | 总是复制/覆盖所有文件，复制完成后删除所有源文件。 \u003cbr\u003e （可以在设置中切换“移动（覆盖）”-\u003e “差分移动（大小/时间）”） |\r\n| 删除全部              | 强制删除所有文件/目录。                                                                                                 |\r\n","cover":"","link":"fastcopy.html","preview":"\u003cp\u003e差分复制和同步真好用\u003c/p\u003e\n","title":"FastCopy 的几种操作模式"},{"content":"\r\n\r\n### 一键更新 Potplayer\r\n\r\n+ 2017.04.10 感觉 Potplayer 一直没有更新，原来换了地址了，新的皮肤不太好看……\r\n+ 2019.04.13 个人已不再使用 Potplayer 了，脚本已不适用。\r\n\r\n使用 Potplayer 大概有5年的时间了，一直使用的是闻雷的绿色版，城通网盘的分享不太好用，于是就利用提供的制作 Potplayer 便携版的批处理，配合其他工具写了个自动下载的脚本。\r\n\r\n    @echo off\r\n    ::设定aria2，7z，FastCopy，Potplayer的路径\r\n    set aria2=d:\\1-Program\\0-CommandLineTools\\Aria2\\aria2c.exe\r\n    set zipper=d:\\1-Program\\0-CommandLineTools\\7-Zip\\7z.exe\r\n    set fastcopy=d:\\1-Program\\TotalCMD\\plugins\\FastCopy\\FastCopy.exe\r\n    set potplayerpath=d:\\1-Program\\Potplayer\r\n    \r\n    set temppot=%temp%\\Pot\r\n    del /s /q %temppot%\r\n\r\n    ::Potplayer的下载链接\r\n    set Potplayerlink=http://get.daum.net/Potplayer/v4/PotplayerSetup.exe\r\n    set FFmpegMininumLink=http://get.daum.net/Potplayer/v3/Module/FFmpeg/FFmpegMininum.dll\r\n\r\n    ::下载并解压，合并文件\r\n    set PotplayerSet=%temppot%\\PotplayerSetup.exe\r\n    %aria2% --split=15 --max-connection-per-server=15 --dir=%temppot% %Potplayerlink%\r\n    %aria2% --split=15 --max-connection-per-server=15 --dir=%temppot%\\exaPotplayerSet\\Module\\FFmpeg %FFmpegMininumLink%\r\n    %zipper% x %PotplayerSet% -o%temp%\\pot\\exaPotplayerSet -y\r\n    copy %potplayerpath%\\PotplayerMini.ini %temp%\\pot\\exaPotplayerSet\\PotplayerMini.ini\r\n    copy %potplayerpath%\\PotplayerUpdate.bat %temp%\\pot\\exaPotplayerSet\\PotplayerUpdate.bat\r\n\r\n    ::删除不需要的文件\r\n    rd /s /q %temp%\\pot\\exaPotplayerSet\\$PLUGINSDIR\r\n    rd /s /q %temp%\\pot\\exaPotplayerSet\\$SYSDIR\r\n    rd /s /q %temp%\\pot\\exaPotplayerSet\\$TEMP\r\n    rd /s /q %temp%\\pot\\exaPotplayerSet\\[LICENSE]\r\n    rd /s /q %temp%\\pot\\exaPotplayerSet\\Html\r\n    if exist %temp%\\pot\\exaPotplayerSet\\Logos\\Potplayer_1.png (del /f /q %temp%\\pot\\exaPotplayerSet\\Logos\\Potplayer.png \u0026 rename %temp%\\pot\\exaPotplayerSet\\Logos\\Potplayer_1.png Potplayer.png) else (go on)\r\n    del /f /q %temp%\\pot\\exaPotplayerSet\\Skins\r\n    del /f /q %temp%\\pot\\exaPotplayerSet\\UrlList\r\n    rename %temp%\\pot\\exaPotplayerSet\\History\\Chinese(Simplified).txt Chinese(Simplified).bak\r\n    rename %temp%\\pot\\exaPotplayerSet\\History\\English.txt English.bak\r\n    rename %temp%\\pot\\exaPotplayerSet\\History\\Korean.txt Korean.bak\r\n    rename %temp%\\pot\\exaPotplayerSet\\Language\\Chinese(Simplified).ini Chinese(Simplified).bak\r\n    rename %temp%\\pot\\exaPotplayerSet\\Language\\English.ini English.bak\r\n    rename %temp%\\pot\\exaPotplayerSet\\Language\\Korean.ini Korean.bak\r\n    del /f /q %temp%\\pot\\exaPotplayerSet\\History\\*.txt\r\n    del /f /q %temp%\\pot\\exaPotplayerSet\\Language\\*.ini\r\n    rename %temp%\\pot\\exaPotplayerSet\\History\\Chinese(Simplified).bak Chinese(Simplified).txt\r\n    rename %temp%\\pot\\exaPotplayerSet\\History\\English.bak English.txt\r\n    rename %temp%\\pot\\exaPotplayerSet\\History\\Korean.bak Korean.txt\r\n    rename %temp%\\pot\\exaPotplayerSet\\Language\\Chinese(Simplified).bak Chinese(Simplified).ini\r\n    rename %temp%\\pot\\exaPotplayerSet\\Language\\English.bak English.ini\r\n    rename %temp%\\pot\\exaPotplayerSet\\Language\\Korean.bak Korean.ini\r\n    md %temp%\\pot\\exaPotplayerSet\\Module\\FFmpeg\r\n    del /f %temp%\\pot\\exaPotplayerSet\\[NSIS].nsi\r\n    del /f %temp%\\pot\\exaPotplayerSet\\uninstall.exe.nsis\r\n    del /f %temp%\\pot\\exaPotplayerSet\\Daum_Movie.resource\r\n    del /f %temp%\\pot\\exaPotplayerSet\\Loading.swf\r\n    del /f %temp%\\pot\\exaPotplayerSet\\Logo.swf\r\n    del /f %temp%\\pot\\exaPotplayerSet\\LogoMini.swf\r\n    del /f %temp%\\pot\\exaPotplayerSet\\Alarm.wav\r\n    del /f %temp%\\pot\\exaPotplayerSet\\PotScreenSaver.scr\r\n    del /f %temp%\\pot\\exaPotplayerSet\\FileList.txt\r\n    del /f %temp%\\pot\\exaPotplayerSet\\LGPL.TXT\r\n    del /f %temp%\\pot\\exaPotplayerSet\\D_Exec.exe\r\n    del /f %temp%\\pot\\exaPotplayerSet\\DaumDownloader.exe\r\n    del /f %temp%\\pot\\exaPotplayerSet\\DesktopHook.exe\r\n    del /f %temp%\\pot\\exaPotplayerSet\\KillPot.exe\r\n    del /f %temp%\\pot\\exaPotplayerSet\\LogManager.exe\r\n    del /f %temp%\\pot\\exaPotplayerSet\\Potplayer.exe\r\n    del /f %temp%\\pot\\exaPotplayerSet\\PotplayerXP.exe\r\n    del /f %temp%\\pot\\exaPotplayerSet\\SetTime.exe\r\n    del /f %temp%\\pot\\exaPotplayerSet\\AudFilt.dll\r\n    del /f %temp%\\pot\\exaPotplayerSet\\DaumCrashHandler.dll\r\n    del /f %temp%\\pot\\exaPotplayerSet\\DChat.dll\r\n    del /f %temp%\\pot\\exaPotplayerSet\\DMVDLoader.dll\r\n    del /f %temp%\\pot\\exaPotplayerSet\\LibNCG.dll\r\n    del /f %temp%\\pot\\exaPotplayerSet\\NCGDownloadDLL.dll\r\n    \r\n    ::利用FastCopy来同步文件夹的内容\r\n    %fastcopy% /cmd=sync /no_ui /error_stop /bufsize=128 /log=FALSE /disk_mode=auto /speed=full /auto_close %temppot%\\exaPotplayerSet\\*.* /to=%potplayerpath%\\\r\n    \r\n    del /s /q %temppot%\r\n    exit\r\n","cover":"","link":"potplayerupdate.html","preview":"\u003cp\u003e用来更新 Potplayer 的批处理\u003c/p\u003e\n","title":"一键更新 Potplayer（已过时）"},{"content":"\r\n\r\n### ImageMagick 批量处理图片\r\n\r\n很久没有写文了，这次来写一下在实习的时候遇见的一个问题，做一些社区活动的时候，合作方会提供一些图片，但是这些图片是不完整的，需要一张一张地从上到下拼接起来，提供的文件组织形式是以下的样子的：\r\n\r\n+ 001\r\n    + 001.jpg\r\n    + 002.jpg\r\n    + 003.jpg\r\n    + 004.jpg\r\n    + 005.jpg\r\n+ 002\r\n    + 001.jpg\r\n    + 002.jpg\r\n    + 003.jpg\r\n    + 004.jpg\r\n    + 005.jpg\r\n\r\n如果只有几张的话，用 IrfanView 合并全景图（`图像→创建全景图像`）功能就相当方便了，但是，实际数量有接近 100 个文件夹，我去看了看 IrfanView 的命令行参数，好像没有合并拼接这个功能，于是只能转用 ImageMagick，最后把压缩，增大图片大小和缩放的功能也加上，写了一个批处理。\r\n\r\n    @echo off\r\n    set convertexe=d:\\1-Program\\0-CommandLineTools\\ImageMagick\\convert.exe\r\n    set InPutPath=d:\\3-FastStone\\InPut\r\n    \r\n    :Menu\r\n    echo 1.横向合并图片\r\n    echo 2.纵向合并图片\r\n    echo 3.压缩图片（默认压缩率80%，不改变宽高，覆盖源文件）\r\n    echo 4.缩放图片（默认是600x400，覆盖源文件）\r\n    echo 5.增大图片（利用CMYK使图片的体积变大，覆盖源文件）\r\n    echo.\u0026echo.\r\n    set /p choose=输入数字并按回车：\r\n    if \"%choose%\"==\"1\" set imoption=+append\u0026Goto ProcessPicALL\r\n    if \"%choose%\"==\"2\" set imoption=-append\u0026Goto ProcessPicALL\r\n    if \"%choose%\"==\"3\" set imoption=-quality 80\u0026Goto ProcessPic\r\n    if \"%choose%\"==\"4\" set imoption=-resize 600x400\u0026Goto ProcessPic\r\n    if \"%choose%\"==\"5\" set imoption=-colorspace CMYK\u0026Goto ProcessPic\r\n    \r\n    :ProcessPicALL\r\n    for /d %%d in ( %InPutPath%\\* ) do (\r\n        cd %%d\r\n        %convertexe% %imoption% *.* all%%~nd.jpg\r\n        pause\r\n    )\r\n    exit\r\n    \r\n    :ProcessPic\r\n    for /d %%d in ( %InPutPath%\\* ) do (\r\n        cd %%d\r\n        for %%p in (*) do %convertexe% %imoption% %%p %%~np.jpg\r\n    )\r\n    exit\r\n    \r\n    \r\n","cover":"","link":"imagemagickprocesspic.html","preview":"\u003cp\u003e用 ImageMagick 来拼接，压缩，缩放，增大图片。\u003c/p\u003e\n","title":"ImageMagick 批量处理图片 （2016.10.30更新）"},{"content":"\r\n\r\n### You-Get 在线视频下载工具\r\n\r\n\u003e 2016.07.19 更新：添加批处理脚本\r\n\u003e 2019.04.13 补充：目前 You-Get 已长时间不更新 Windows 下的预编译版本，新的方式请参考 [WinPython 自动更新 You-Get 和 Youtube-dl](winpythonmediadown.html)\r\n\u003e 2020-09-29 更新 [FFmpeg](https://ffmpeg.org/download.html) 链接。\r\n\r\n[You-Get](https://github.com/soimort/you-get/) 是一个命令行的在线视频下载工具，可以下载 Youtube，优酷，土豆，Bilibili，网易云等多个在线网站，完整的支持列表可以在 [Github](https://github.com/soimort/you-get/wiki/%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E#%E6%94%AF%E6%8C%81%E7%BD%91%E7%AB%99)  上查看。对于 Windows 平台，You-Get 的 [Releases](https://github.com/soimort/you-get/releases) 中可以直接使用的版本。本文只要是想将 You-Get 的几个参数进行一下整理。\r\n\r\n注意，You-Get 需要 [ffmpeg](https://ffmpeg.org/download.html) 以下载优酷这类的流式视频和合并视频，如果不知道如何将 ffmpeg 添加到环境变量中的话，可以直接用 Releases 中的 Full 版。\r\n\r\n#### 用法及参数\r\n\r\n+ 用法\r\n\r\n    You-Get [URL]\r\n\r\n    下载到一半需要暂停时可以用`Ctrl-C`，下载文件夹中 .download 文件会保留，之后再用上面的方式调用同一 URL 时会自动继续下载。\r\n\r\n+ 可用参数\r\n\r\n| 参数                   | 作用                                                        |\r\n|------------------------|-------------------------------------------------------------|\r\n| `--infol / -i`         | 查看所有可用画质与格式，可选项用 itag 参数区分                |\r\n| `-itag=[NUM]`          | 下载指定 itag 参数指定的对象                                  |\r\n| `--no-merge / -n`      | 不合并下载完成的视频                                        |\r\n| `--force/-f`           | 覆盖已经存在的文件以及 .download 文件的信息 \u003cbr\u003e 强制重新下载 |\r\n| `--output-dir/-o`      | 指定下载路径                                                |\r\n| `--output-filename/-O` | 指定输出的文件名                                            |\r\n| `--http-proxy/-x`      | 设置 http 的代理                                              |\r\n| `--player/-p`          | 直接使用播放器播放，而不是下载                              |\r\n| `--cookies/-c`         | 调用 Cookies                                                  |\r\n| `--url/-u`             | 获得页面所有可下载 URL 列表                                   |\r\n\r\n#### 批处理脚本\r\n\r\n有需要的话可以使用下面这个批处理，将内容保存到 txt 文件中，改后缀为 bat 即可，另外 You-Get 的 Full 版本中也带有一个 bat 脚本。\r\n\r\n    \r\n    @echo off\r\n    :: 设定 You-Get.exe 的位置，如果在同一目录下不用设置\r\n    set youget=You-Get.exe\r\n    :: 设定下载目录\r\n    set downloadpath=D:\\ZeroDown\r\n    :: 设定代理\r\n    set proxy=127.0.0.1:8087\r\n    set more=\r\n    \r\n    set /p URL=请输入要 URL 并回车:\r\n    \r\n    :YouGetMenu\r\n    echo 1.下载，不使用代理\r\n    echo 2.下载，使用代理\r\n    echo 3.查看 URL 信息，可添加额外命令行\r\n    echo.\u0026echo.\r\n    set /p choose=请选择相应的处理方式：\r\n    if \"%choose%\"==\"1\" Goto YouGet\r\n    if \"%choose%\"==\"2\" Goto YouGetProxy\r\n    if \"%choose%\"==\"3\" Goto YouGetInfo\r\n    \r\n    :YouGet\r\n    %youget% -o %downloadpath% %more% %URL%\r\n    exit\r\n    \r\n    :YouGetProxy\r\n    %youget% --http-proxy %proxy% -o %downloadpath% %more% %URL%\r\n    exit\r\n    \r\n    :YouGetInfo\r\n    %youget% -i %URL%\r\n    echo --itag [Num] 指定下载对象\r\n    echo -n 不合并视频\r\n    set /p more=请输入额外指令，不需要的话直接回车：\r\n    Goto YouGetMenu\r\n\r\n下载速度还是相当不错的：\r\n\r\n![You-Get](/images/You-Get1.png)\r\n","cover":"","link":"you-get.html","preview":"\u003cp\u003e命令行在线视频下载工具\u003c/p\u003e\n","title":"You-Get 在线视频下载工具（部分内容已过时）"},{"content":"\r\n\r\n## Vim 插件 tagbar\r\n\r\n### 更新历史\r\n\r\n+ 2016.4.16 更新 Vim 中便携化 Ctags 的方法\r\n\r\n tagbar 是 Vim 的一个大纲插件，实时更新大纲，用起来不错。\r\n[官方 Github](https://github.com/majutsushi/tagbar)，需要有 [ctags](http://ctags.sourceforge.net/) 支持。\r\n\r\n来说说看在 Windows 下怎样配置，tagbar 的配置中重要的有两个，一个是 **ctags 程序的位置**，如果 tagbar 找不到 ctags.exe 的话，可以直接将 ctags 放在 Vim.exe 所在的目录下，也可以在 tagbar 的配置中用以下的行来指定：\r\n\r\n    let g:tagbar_ctags_bin = 'C:\\Ctags5.8\\ctags.exe'\r\n\r\n另一个比较重要的是 **ctags.cnf的位置**，这个文件是用于自定义要添加到大纲的内容的，tagbar 的[官方 Wiki](https://github.com/majutsushi/tagbar/wiki)中给出了不少 ctags 自身不支持的语言的相关配置，需要将相关的内容添加到 **ctags.cnf** 与 **vimrc** 中，在 Windows 下，ctags.cnf 这个文件的默认位置应该是在`用户文件夹`下，也就是`c:\\Users\\用户名`这样的文件夹下。\r\n\r\n**更新**：通过 Vim 中的 **cd 修改当前目录**，以及 **set autochdir** 来实现 Ctags 的完全便携化。\r\n\r\n    function! PortableCtags()\r\n        silent cd $VIM/vimfiles/        这个是 ctags 配置文件所在的目录\r\n        silent TagbarToggle\r\n        silent set autochdir\r\n    endfunction\r\n    nnoremap \u003csilent\u003e ;sa :call PortableCtags()\u003ccr\u003e\r\n\r\n\r\n这里额外说一下，tagbar 的官方 wiki 中的 Markdown 配置我个人感觉不太好用，只支持1，2，3级的大纲标题而且会将1，2，3级标题用 Heading_L1，Heading_L2，Heading_L3 这样的定义完全分开，而实际上 Markdown 写文的话格式应该更像：\r\n\r\n    # 一级\r\n    ## 二级\r\n    ### 三级\r\n    ### 三级\r\n\r\n    ## 二级\r\n    ### 三级\r\n\r\n所以我自己改了一下关于 markdown 的配置\r\n##### Ctags.cnf\r\n    --langdef=markdown\r\n    --langmap=markdown:.markdown,.mkd,.md\r\n    --regex-markdown=/^(#+)[ \\t]+(.*)/\\1 \\2/h,heading/\r\n##### vimrc\r\n    let g:tagbar_type_markdown = {\r\n        \\ 'ctagstype' : 'markdown',\r\n        \\ 'kinds' : [\r\n            \\ 'h:Headline'\r\n        \\ ],\r\n        \\ 'sort' : 0,\r\n    \\ }\r\n\r\n放一张效果图，虽然不能像官方 Wiki 那样把前面的`#`去掉（去掉的话会无法区分层级），但是效果还是可以的。\r\n\r\n![Vimplugin-tagbar1](/images/Vimplugin-tagbar1.png)\r\n\r\n上面这个是自定义 Markdown 的 ctags.cnf 后 Markdown 文件显示的大纲。\r\n\r\n","cover":"","link":"vimplugin-tagbar.html","preview":"\u003cp\u003etagbar 配置起来还是有点麻烦的，当然如果你不自定义 ctags 的话会简单很多\u003c/p\u003e\n","title":"Vim 插件 tagbar（2016.4.16更新）"},{"content":"\r\n\r\n#### Vim 插件 Crunch.vim\r\n\r\nCrunch.vim 是一个 Vim 的一个计算器插件，加强了 Vim 在计算方面的功能，支持以 `a=234` 这样的形式保存结果。\r\n[官方Github](https://github.com/arecarn/crunch.vim)，需要同时安装 [selection.vim](https://github.com/arecarn/selection.vim)。\r\n\r\n| 主要命令     | 功能                             |\r\n|--------------|----------------------------------|\r\n| `g==`        | 计算当前行算式的结果并添加到最后 |\r\n| `g={motion}` | 计算当前行最左侧到移动位置的结果 |\r\n\r\n\r\n我个人对结果的格式修了修改，方便在下一条算式中引用上一条算式的结果。\r\n\r\n    function! Crunchmath()\r\n        silent normal g==\r\n        silent s/ = \\S*$/\\ra\u0026/ge\r\n        silent g/^a$/d\r\n        silent g/^\\(.\\+\\)$\\n\\1/d\r\n        silent w\r\n    endfunction\r\n\r\n放一下效果图\r\n\r\n+ 未修改格式\r\n![Vimplugin-crunch.vim1](/images/Vimplugin-crunch.vim1.png)\r\n\r\n+ 修改格式：\r\n![Vimplugin-crunch.vim2](/images/Vimplugin-crunch.vim2.png)\r\n\r\n需要注意一下Vim中一些运算的写法与计算器中有点不同。\r\n\r\n| 写法       | 作用                                                                             |\r\n|------------|----------------------------------------------------------------------------------|\r\n| float2nr() | 把浮点数转换为数值                                                               |\r\n| abs()      | 绝对值 (也适用于数值)                                                            |\r\n| round()    | 四舍五入                                                                         |\r\n| ceil()     | 向上取整                                                                         |\r\n| floor()    | 向下取整                                                                         |\r\n| trunc()    | 删除小数点后的值                                                                 |\r\n| log10()    | 以 10 为底的对数，实测这个会有问题 \u003cbr\u003e要写成 `log(4)/log(2)：以2为底4的对数`这样 |\r\n| pow()      | x 的 y 次方                                                                      |\r\n| sqrt()     | 平方根                                                                           |\r\n| sin()      | 正弦                                                                             |\r\n| cos()      | 余弦                                                                             |\r\n| tan()      | 正切                                                                             |\r\n| asin()     | 反正弦                                                                           |\r\n| acos()     | 反余弦                                                                           |\r\n| atan()     | 反正切                                                                           |\r\n| atan2()    | 反正切                                                                           |\r\n| sinh()     | 双曲正弦                                                                         |\r\n| cosh()     | 双曲余弦                                                                         |\r\n| tanh()     | 双曲正切                                                                         |\r\n\r\n","cover":"","link":"vimplugin-crunch.vim.html","preview":"\u003cp\u003e煮咖啡有点麻烦，当计算器用还是可以的：Crunch.vim。\u003c/p\u003e\n","title":"Vim 插件 Crunch.vim"},{"content":"\r\n\r\n#### Vim 插件 Vim-Markdown\r\n\r\nVim-Markdown 是一个 Vim 的一个 Markdown 插件，带有一些 Markdown 语法高亮以及一些能简化 Markdown 编辑的功能。\r\n[官方 Github](https://github.com/plasticboy/vim-markdown/)，部分功能需要 [Tabular](https://github.com/godlygeek/tabular) 支持。\r\n\r\n| 主要命令                                 | 功能                                                                 |\r\n|------------------------------------------|----------------------------------------------------------------------|\r\n| `gx`                                     | 打开光标下的链接`[test](tst.html)`在左侧内容的所有位置都可以打开链接 |\r\n| `:TableFormat`                           | 格式化光标下的表格                                                   |\r\n| `:Toc`                                   | 打开一个 Quickfix 窗口，展示所有的标题，点击可跳转                     |\r\n| `:HeaderIncrease` \u003cbr\u003e `:HeaderDecrease` | 调整所有标题的等级                                                   |\r\n\r\n其它还有一些跳转用的命令，不过由于我用 [Easymotion](https://github.com/easymotion/vim-easymotion)，基本上用不上，就不再介绍了。\r\n\r\n展示一下`:TableFormat`的效果：\r\n\r\n+ 格式化前：\r\n![Vimplugin-vim-markdown1](/images/Vimplugin-vim-markdown1.png)\r\n\r\n+ 格式化后：\r\n![Vimplugin-vim-markdown2](/images/Vimplugin-vim-markdown2.png)\r\n\r\n特别提一下`:TableFormat`这个命令由于会对将所有单元格的宽度变成该列的最长的单元格的长度，如果表格内容过长的话，可能会超出屏幕的宽度，如果打开了 set wrap 的话显示会很难看，最好进行一下定义：\r\n\r\n    function! MarkdownTable()\r\n        silent TableFormat\r\n        silent set nowrap\r\n    endfunction\r\n\r\n有需要整理表格的时候直接调用上面的命令，不会折行，显示效果会好一点的。\r\n","cover":"","link":"vimplugin-vim-markdown.html","preview":"\u003cp\u003e简单介绍一下 Vim 的一个 Markdown 插件：Vim-Markdown。\u003c/p\u003e\n","title":"Vim 插件 Vim-Markdown"},{"content":"\r\n\r\n## 如何使用 FSCapture 滚动截屏\r\n\r\n首先来说一下情景，假设我要截取一个文件夹的所有内容的整个页面：\r\n\r\n+ 第一步：打开这个文件夹的页面（废话）\r\n\r\n+ 第二步：打开 FSCapture（还是废话）\r\n\r\n+ 第三步：点击 FSCapture 的这个按钮\r\n![滚动截屏按钮](/images/FSCapture.png)\r\n\r\n+ 第四步：然后选择你要截取的范围，如果自动识别的范围没有问题的话，直接点击就会自动开始截屏了，如果有问题的话，就按下 Ctrl 键，自己选择范围，之后要自己点击一下向下滚动的箭头才会开始截取。需要注意的是，自己选择范围的话，在截图过程中鼠标是没有办法动的。\r\n\r\n+ 第五步：截取完成后按 ESC 停止即可。\r\n\r\n还是放一个动图吧……\r\n![全流程](/images/FSCapture.gif)\r\n","cover":"","link":"fscapture-scroll-capture.html","preview":"\u003cp\u003e这么简单的事情为什么会有人不知道应该怎么用啊……\u003c/p\u003e\n","title":"如何使用 FSCapture 滚动截屏"},{"content":"\r\n\r\n### aria2 Firefox 调用教程\r\n\r\n\u003e 2023.02.13 本文部分内容基于 Firefox 57 之前的 Firefox，已不适用。\r\n\r\naria2 是一个跨平台的命令行下载工具，支持 Http / Ftp / BT / 磁力链的下载，只是可惜在 Firefox 上没有好的调用方法。说一下 Firefox 与 aria2 相关的东西\r\n\r\n+ [aria2](https://github.com/meoow/aria2rpc)：Github 主页\r\n+ [aria2 manual](https://aria2.github.io/manual/en/html/)：英文 Manual，配置 aria2 时需要\r\n+ [YAAW](https://github.com/binux/yaaw)：YAAW aria2 前端，可以用网页访问\r\n+ [aria2rpc](https://github.com/meoow/aria2rpc)：在卡饭上有人提到这样一个项目，提供了 go 和 python 两个版本，试着用了一段时间，感觉不错，个人添加了一个`-proxy`的选项，可以在这里[ 下载 ](http://pan.baidu.com/s/1c2eBnFy)。\r\n+ FlashGot：Firefox 的下载器管理扩展，用来调用编译后的 aria2rpc.exe\r\n    ![FlashGot aria2 配置](/images/aria2flashgot.png)\r\n\r\n  + 参数模板，第二个添加了代理：\r\n\r\n        `[-cookie COOKIE] [-out FNAME] [-referer REFERER] [URL]`\r\n\r\n        `[-cookie COOKIE] [-out FNAME] [-referer REFERER] -proxy http://127.0.0.1:8087 [URL]`\r\n\r\n在 Firefox 的下载对话框中直接选择 aria2rpc（Flashgot 中命名的下载器）就可以直接调用 aria2 下载了，好处是下载速度较快，比起用复制粘贴的方式添加下载链接，对一些网站的直接更好，可以下载360云盘与百度云盘（大文件需要相应的脚本）的一些文件。\r\n    ![360云盘下载实例](/images/aria2example1.png)\r\n    ![百度云盘下载实例](/images/aria2example2.png)\r\n**百度你敢不限速吗……**\r\n","cover":"","link":"aria2.html","preview":"\u003cp\u003earia2 是一个相关不错的下载工具。\u003c/p\u003e\n","title":"aria2 Firefox 调用教程（已过时）"},{"content":"\r\n\r\n### Vim 的 s 与 xi/xa 命令的小差别\r\n\r\n在Vim中的s命令是删除当前光标下的字符并在该字符位置进入插入模式，xi/xa两个命令则是在删除当前光标下的字符后进入插入模式。表面上看两者并没有什么不同：\r\n\r\n其实，有一点是不同的，就是进入插入模式后**光标的位置**。\r\n\r\n如果光标后面没有文字（比如说在行尾），使用 xa 正常，但是使用 xi 就会位置向前移一个字符；同样的：\r\n\r\n如果光标前面没有文字（也就是在行首），使用 xi 则正常，xa 在会向后移一个字符。\r\n\r\n在 Virsual 模式下，s 与 d 也有类似的差别。\r\n\r\n如果需要在原内容位置上添加内容，s 比 x 或者 d 要好用得多，如，要将当前所选的内容的左右两边加上两个星号（Markdown 的加粗）：\r\n\r\n    vnoremap \u003csilent\u003e md \"ms****\u003cEsc\u003eh\"mPe\r\n\r\n如果在这里使用 d 的话就要分两种情况，由于 Vim 默认是删除后光标靠原来右边一位，所以要分别考虑光标在行尾与不在行尾，用 s 的话就不存在这个问题。\r\n","cover":"","link":"vim-s-x.html","preview":"\u003cp\u003e需要在原位置上添加内容时，s 命令更好用。\u003c/p\u003e\n","title":"Vim 的 s 与 x命令"}]